{
  "vocabulary": [
    "<PAD>",
    "<START>",
    "<END>",
    "01helloworld",
    "/*************************************************************",
    "gpio2led",
    "gpio2",
    "blynk_for_chinese",
    "https",
    "//github.com/hznupeter/blynk-library-for-chinese",
    "blynk",
    "//gitee.com/hznupeter/blynk_iot/wikis",
    "*************************************************************/",
    "void",
    "setup()",
    "{",
    "pinmode(2",
    "output);",
    "}",
    "loop()",
    "digitalwrite(2",
    "high);",
    "02blynkblink",
    "io",
    "app",
    "button",
    "switch",
    "#define",
    "blynk_print",
    "serial",
    "//",
    "#include",
    "<esp8266wifi.h>",
    "<blynksimpleesp8266.h>",
    "char",
    "auth[]",
    "=",
    "c3102448027d494ca48b27d0a732f245",
    ";//",
    "ssid[]",
    "ssid",
    ";//wifi",
    "pass[]",
    "psssword",
    "serial.begin(9600);",
    "blynk.begin(auth",
    "pass);//",
    "//blynk.begin(auth",
    "pass",
    "blynk-cloud.com",
    "8080);//",
    "ipaddress(192",
    "168",
    "1",
    "158)",
    "ip",
    "blynk.run();",
    "03getdata",
    "slider",
    "v1",
    "2a365b624c0f4ea891256d4a66d428f7",
    "blynk_write(v1)",
    "int",
    "pinvalue",
    "param.asint();",
    "string",
    "i",
    "param.asstr();",
    "double",
    "d",
    "param.asdouble();",
    "serial.print(",
    "value",
    "is",
    ");",
    "serial.println(pinvalue);",
    "04pushdata",
    "display",
    "v5",
    "blynktimer",
    "timer;",
    "mytimerevent()",
    "10",
    "blynk.virtualwrite(v5",
    "millis()",
    "/",
    "1000);",
    "timer.setinterval(1000l",
    "mytimerevent);//",
    "1000",
    "mytimerevent",
    "timer.run();",
    "1_simple_use",
    "arduinoide",
    "(",
    "ttgo",
    "t-wristband",
    "esp-wrover-kit",
    ")",
    "lovyangfx.hpp",
    "include",
    "define",
    "lgfx_",
    "lgfx_m5stack",
    "m5stack",
    "basic",
    "gray",
    "go",
    "fire",
    "lgfx_m5stack_core2",
    "core2",
    "lgfx_m5stack_coreink",
    "coreink",
    "lgfx_m5stick_c",
    "m5stick",
    "c",
    "cplus",
    "lgfx_m5paper",
    "m5paper",
    "lgfx_m5tough",
    "m5tough",
    "lgfx_m5atoms3",
    "m5atoms3",
    "lgfx_odroid_go",
    "odroid-go",
    "lgfx_ttgo_ts",
    "ts",
    "lgfx_ttgo_twatch",
    "t-watch",
    "lgfx_ttgo_twristband",
    "lgfx_ttgo_tdisplay",
    "t-display",
    "lgfx_dduino32_xs",
    "dstike",
    "d-duino-32",
    "xs",
    "lgfx_lolin_d32_pro",
    "lolin",
    "d32",
    "pro",
    "lgfx_lolin_s3_pro",
    "s3",
    "lgfx_esp_wrover_kit",
    "espressif",
    "lgfx_esp32_s3_box",
    "esp32-s3-box",
    "lgfx_esp32_s3_box_lite",
    "lite",
    "lgfx_esp32_s3_box_v3",
    "esp32-s3-box-3/3b",
    "lgfx_wifiboy_pro",
    "wifiboy",
    "lgfx_wifiboy_mini",
    "mini",
    "lgfx_makerfabs_touchcamera",
    "makerfabs",
    "touch",
    "with",
    "camera",
    "lgfx_makerfabs_makepython",
    "makepython",
    "lgfx_makerfabs_tft_touch_spi",
    "tft",
    "spi",
    "lgfx_makerfabs_tft_touch_parallel16//",
    "parallel",
    "16",
    "lgfx_wt32_sc01",
    "seeed",
    "wt32-sc01",
    "lgfx_wio_terminal",
    "wio",
    "terminal",
    "2_user_setting",
    "<lovyangfx.hpp>",
    "esp32",
    "lovyangfx",
    "///",
    "lgfx_device",
    "class",
    "lgfx",
    "public",
    "/*",
    "autodetect",
    "devkit-c",
    "ili9341",
    "lgfx_devkitc_spi_ili9341",
    "//*/",
    "//lgfx",
    "panel_gc9a01",
    "_panel_instance;",
    "panel_gdew0154m09",
    "panel_hx8357b",
    "panel_hx8357d",
    "panel_ili9163",
    "panel_ili9341",
    "panel_ili9342",
    "panel_ili9481",
    "panel_ili9486",
    "panel_ili9488",
    "panel_it8951",
    "panel_ra8875",
    "panel_sh110x",
    "sh1106",
    "sh1107",
    "panel_ssd1306",
    "panel_ssd1327",
    "panel_ssd1331",
    "panel_ssd1351",
    "ssd1351",
    "ssd1357",
    "panel_ssd1963",
    "panel_st7735",
    "panel_st7735s",
    "panel_st7789",
    "panel_st7796",
    "bus_spi",
    "_bus_instance;",
    "bus_i2c",
    "i2c",
    "bus_parallel8",
    "8",
    "light_pwm",
    "_light_instance;",
    "touch_cst816s",
    "_touch_instance;",
    "touch_ft5x06",
    "ft5206",
    "ft5306",
    "ft5406",
    "ft6206",
    "ft6236",
    "ft6336",
    "ft6436",
    "touch_gsl1680e_800x480",
    "gsl_1680e",
    "1688e",
    "2681b",
    "2682b",
    "touch_gsl1680f_800x480",
    "touch_gsl1680f_480x272",
    "touch_gslx680_320x320",
    "touch_gt911",
    "touch_stmpe610",
    "touch_tt21xxx",
    "tt21100",
    "touch_xpt2046",
    "lgfx(void)",
    "auto",
    "cfg",
    "_bus_instance.config();",
    "cfg.spi_host",
    "vspi_host;",
    "esp32-s2",
    "c3",
    "spi2_host",
    "or",
    "spi3_host",
    "vspi_host",
    "hspi_host",
    "esp-idf",
    "3_fonts",
    "static",
    "lcd;",
    "drawgradation(void)",
    "lcd.startwrite();",
    "lcd.setaddrwindow(0",
    "0",
    "lcd.width()",
    "lcd.height());",
    "for",
    "(int",
    "y",
    "0;",
    "<",
    "lcd.height();",
    "++y)",
    "x",
    "lcd.width();",
    "++x)",
    "lcd.writecolor(lcd.color888(x>>1",
    "(x",
    "+",
    "y)",
    ">>",
    "2",
    "y>>1)",
    "1);",
    "lcd.endwrite();",
    "setup(void)",
    "lcd.init();",
    "drawgradation();",
    "print",
    "drawstring",
    "lcd.drawstring(",
    "string!",
    "10);",
    "drawnumber",
    "lcd.drawnumber(123",
    "100",
    "drawfloat",
    "lcd.drawfloat(3.14",
    "150",
    "setcursor",
    "lcd.setcursor(10",
    "20);",
    "lcd.print(",
    "print!",
    "printf",
    "(c",
    "123;",
    "lcd.printf(",
    "test",
    "value);",
    "println",
    "print(",
    "n",
    "lcd.println(",
    "setfont",
    "tft_espi",
    "settextfont",
    "font0",
    "font8",
    "&fonts",
    "lcd.setfont(&fonts",
    "font4);",
    "testfont4",
    "4",
    "6",
    "7",
    "(tft_espi",
    "lcd.settextfont(2);",
    "testfont2",
    "settextcolor",
    "lcd.settextcolor(0x00ffffu",
    "0xff0000u);",
    "cyantext",
    "redback",
    "fillrect",
    "lcd.settextcolor(0xffff00u);",
    "yellowtext",
    "clearback",
    "font6",
    "font6);",
    "apm.",
    "-0369",
    "font7",
    "font7);",
    ".",
    "-147",
    "font8);",
    "-258",
    "delay(3000);",
    "ipa",
    "36",
    "12",
    "20",
    "24",
    "28",
    "32",
    "40",
    "fonts",
    "5_images",
    "extern",
    "const",
    "uint8_t",
    "rgb888[];",
    "bgr888[];",
    "uint16_t",
    "swap565[];",
    "rgb565[];",
    "rgb332[];",
    "constexpr",
    "image_width",
    "33;",
    "image_height",
    "31;",
    "//----------------------------------------------------------------------------",
    "loop(void)",
    "setwindow/setaddrwindow",
    "writepixels/pushpixels",
    "setwindow(",
    "x0",
    "y0",
    "x1",
    "y1",
    "setaddrwindow(",
    "w",
    "h",
    "setwindow",
    "setaddrwindow",
    "writepixels",
    "*data",
    "len",
    "swap",
    "startwrite",
    "endwrite",
    "pushpixels",
    "(startwrite",
    "adafruitgfx",
    "startwrite/endwrite",
    "setswapbytes",
    "data",
    "uint8_t*",
    "8bit",
    "rgb332",
    "uint16_t*",
    "16bit",
    "rgb565",
    "void*",
    "24bit",
    "rgb888",
    "lcd",
    "*/",
    "lcd.clear(tft_darkgrey);",
    "lcd.setcolordepth(16);",
    "lcd.setswapbytes(true);",
    "*",
    "image_height;",
    "image_height);",
    "lcd.writepixels((uint16_t*)rgb565",
    "len);",
    "3",
    "false",
    "false);",
    "lcd.setaddrwindow(-1",
    "80",
    "-1",
    "120",
    "lcd.writepixels((uint8_t*)rgb565",
    "160",
    "lcd.writepixels((uint8_t*)rgb332",
    "1byte",
    "setswapbytes(true)",
    "true",
    "lcd.setaddrwindow(40",
    "lcd.writepixels((uint16_t*)swap565",
    "attiny85",
    "download",
    "latest",
    "library",
    "here",
    "//github.com/blynkkk/blynk-library/releases/latest",
    "a",
    "platform",
    "ios",
    "and",
    "android",
    "apps",
    "to",
    "control",
    "arduino",
    "raspberry",
    "pi",
    "the",
    "likes",
    "over",
    "internet.",
    "you",
    "can",
    "easily",
    "build",
    "graphic",
    "interfaces",
    "all",
    "your",
    "projects",
    "by",
    "simply",
    "dragging",
    "dropping",
    "widgets.",
    "downloads",
    "docs",
    "tutorials",
    "http",
    "//www.blynk.cc",
    "sketch",
    "generator",
    "//examples.blynk.cc",
    "community",
    "//community.blynk.cc",
    "follow",
    "us",
    "//www.fb.com/blynkapp",
    "//twitter.com/blynk_app",
    "licensed",
    "under",
    "mit",
    "license",
    "this",
    "example",
    "code",
    "in",
    "domain.",
    "*************************************************************",
    "=>",
    "usb",
    "howto",
    "//tiny.cc/blynkusb",
    "note",
    "requires",
    "attiny",
    "support",
    "package",
    "//github.com/damellis/attiny",
    "be",
    "sure",
    "check",
    "ordinary",
    "first!!!",
    "+-",
    "/-+",
    "a0|6",
    "(d",
    "5)",
    "pb5",
    "1|",
    "|8",
    "vcc",
    "a3|9",
    "3)",
    "pb3",
    "2|",
    "|7",
    "pb2",
    "2)",
    "a1|7",
    "a2|8",
    "4)",
    "pb4",
    "3|",
    "|6",
    "pb1",
    "1)",
    "pwm1",
    "gnd",
    "4|",
    "|5",
    "pb0",
    "0)",
    "pwm0",
    "+----+",
    "<softwareserial.h>",
    "softwareserial",
    "debugserial(1",
    "2);",
    "rx",
    "tx",
    "swserial(3",
    "4);",
    "comment",
    "out",
    "disable",
    "prints",
    "save",
    "space",
    "debugserial",
    "<blynksimplestream.h>",
    "should",
    "get",
    "auth",
    "token",
    "app.",
    "project",
    "settings",
    "(nut",
    "icon).",
    "yourauthtoken",
    ";",
    "//#include",
    "<softwareservo.h>",
    "//softwareservo",
    "servo1;",
    "debug",
    "console",
    "debugserial.begin(9600);",
    "adafruit_feather_m0_wifi",
    "shows",
    "how",
    "use",
    "adafruit",
    "feather",
    "m0",
    "wifi",
    "connect",
    "blynk.",
    "wifi101",
    "from",
    "//librarymanager/all#wifi101",
    "feel",
    "free",
    "apply",
    "it",
    "any",
    "other",
    "example.",
    "s",
    "simple!",
    "<wifi101.h>",
    "<blynksimplewifishield101.h>",
    "credentials.",
    "set",
    "password",
    "open",
    "networks.",
    "yournetworkname",
    "yourpassword",
    "wifi.setpins(8",
    "pass);",
    "also",
    "specify",
    "server",
    "altcptemplate",
    "spdx-filecopyrighttext",
    "(c)",
    "2023-2024",
    "shawn",
    "silverman",
    "<shawn",
    "pobox.com>",
    "spdx-license-identifier",
    "agpl-3.0-or-later",
    "altcp",
    "framework",
    "creating",
    "custom",
    "connections.",
    "defines",
    "function",
    "that",
    "returns",
    "tls",
    "proxy",
    "configuration.",
    "prerequisites",
    "enable",
    "lwip_altcp",
    "optionally",
    "lwip_altcp_tls",
    "lwip",
    "options.",
    "altcp_tls_adapter",
    "functions",
    "could",
    "disabled",
    "disabling",
    "qnethernet_altcp_tls_adapter",
    "option",
    "(it",
    "off",
    "default).",
    "(see",
    "lwipopts.h",
    "qnethernet_opts.h",
    "files",
    "options.)",
    "big",
    "caveat",
    "will",
    "only",
    "do",
    "if",
    "there",
    "an",
    "available",
    "implementation.",
    "file",
    "part",
    "of",
    "qnethernet",
    "library.",
    "<qnethernet.h>",
    "#if",
    "<lwip/altcp_tcp.h>",
    "lwip_altcp_tls_mbedtls",
    "<mbedtls.h>",
    "#endif",
    "<lwip/altcp_tls.h>",
    "<lwip/apps/altcp_proxyconnect.h>",
    "using",
    "namespace",
    "qindesign",
    "network;",
    "uint32_t",
    "kdhcptimeout",
    "15",
    "000;",
    "seconds",
    "connection",
    "information",
    "host",
    "www.example.com",
    "khost[]{host};",
    "krequest[]{",
    "head",
    "http/1.1",
    "r",
    "close",
    "};",
    "kport",
    "80;",
    "generally",
    "uses",
    "port",
    "443",
    "connections",
    "bool",
    "kuseproxy",
    "false;",
    "appwithlistenerstemplate",
    "2021-2024",
    "one",
    "way",
    "start",
    "writing",
    "network",
    "application",
    "listener",
    "approach.",
    "doesn",
    "t",
    "communication",
    "but",
    "configures",
    "possible",
    "places",
    "hook",
    "own",
    "code.",
    "not",
    "everything",
    "template",
    "needs",
    "included",
    "application.",
    "demonstrates",
    "1.",
    "ethernet",
    "listeners",
    "2.",
    "3.",
    "configuring",
    "address",
    "4.",
    "properly",
    "network.",
    "***",
    "includes",
    "so",
    "don",
    "have",
    "namespace-qualify",
    "variables",
    "classes.",
    "--------------------------------------------------------------------------",
    "configuration",
    "dhcp",
    "timeout",
    "milliseconds.",
    "zero",
    "wait",
    "instead",
    "rely",
    "on",
    "inform",
    "assignment.",
    "link",
    "arduino_ethernet",
    "setup",
    "widget",
    "v2",
    "pins",
    "11",
    "13",
    "are",
    "reserved",
    "module.",
    "them",
    "directly!",
    "warning",
    "sd",
    "card",
    "may",
    "need",
    "setting",
    "pin",
    "high.",
    "read",
    "more",
    "//www.arduino.cc/en/main/arduinoethernetshield",
    "<spi.h>",
    "<ethernet.h>",
    "cloud",
    "char*",
    "unsigned",
    "8080;",
    "byte",
    "mac[]",
    "0xde",
    "0xad",
    "0xbe",
    "0xef",
    "0xfe",
    "0xed",
    "ethernetclient",
    "client;",
    "w5100_cs",
    "sdcard_cs",
    "connectnetwork()",
    "serial.println(",
    "connecting",
    "ethernet...",
    "pinmode(sdcard_cs",
    "arduino_gsm",
    "<gsm.h>",
    "pinnumber",
    "apn",
    "gprs_apn",
    "replace",
    "gprs",
    "gprs_login",
    "login",
    "gprs_password",
    "gsmclient",
    "gprs;",
    "gsm",
    "gsmaccess;",
    "gsm...",
    "status",
    "after",
    "starting",
    "modem",
    "gsm.begin()",
    "attach",
    "shield",
    "while",
    "(status",
    "==",
    "false)",
    "arduino_mkr1000",
    "mkr1000",
    "<blynksimplemkr1000.h>",
    "80);",
    "arduino_mkr1010",
    "mkr",
    "1010",
    "wifinina",
    "//librarymanager/all#wifinina",
    "<wifinina.h>",
    "<blynksimplewifinina.h>",
    "arduino_serial_usb",
    "spare",
    "hardware",
    "boards",
    "(like",
    "mega)",
    "debugserial(2",
    "3);",
    "work",
    "through",
    "write",
    "manually",
    "blynk.begin(serial",
    "auth);",
    "arduino_softwareserial",
    "swserial(2",
    "swserial.begin(9600);",
    "blynk.begin(swserial",
    "arduino_wifi_shield",
    "please",
    "update",
    "firmware",
    "//www.arduino.cc/en/hacking/wifishieldfirmwareupgrading",
    "<wifi.h>",
    "<blynksimplewifi.h>",
    "arduino_wifi_shield_101",
    "101",
    "arduino_yun",
    "yun",
    "bridge",
    "<bridge.h>",
    "<blynksimpleyun.h>",
    "blynk.begin(auth);",
    "100)",
    "8080);",
    "arduino_zero_m0_serial",
    "social",
    "networks",
    "serialusb",
    "serialusb.begin(9600);",
    "arduino_org_uno_wifi",
    "arduino.org",
    "uno",
    "//librarymanager/all#wifi_link",
    "wifilink",
    "1.0.0",
    "(at",
    "least).",
    "<wifilink.h>",
    "<blynksimplewifilink.h>",
    "ballmaze",
    "defined(",
    "||",
    "arduino_m5stack_core_esp32",
    "arduino_m5stack_fire",
    "button_a_pin",
    "39",
    "button_b_pin",
    "38",
    "std",
    "draw_cycle",
    "3;",
    "float",
    "zoom_min",
    "2;",
    "zoom_max",
    "32;",
    "#elif",
    "arduino_m5stack_core2",
    "defined",
    "lgfx_m5stickc",
    "arduino_m5stick_c",
    "37",
    "1;",
    "1.4;",
    "16;",
    "arduino_odroid_esp32",
    "33",
    "arduino_t",
    "(arduino_wio_terminal)",
    "defined(wio_terminal)",
    "0x0200|28",
    "0x0200|27",
    "blue_pill_stm32f103c",
    "stm32duino",
    "//github.com/rogerclarkmelbourne/arduino_stm32/wiki/installation",
    "up",
    "30",
    "board",
    "starts",
    "allow",
    "initialize",
    "completely.",
    "serial1",
    "serial1.begin(9600);",
    "broadcastchat",
    "simple",
    "chat",
    "broadcasts",
    "receives",
    "text",
    "messages",
    "udp.",
    "5190;",
    "program",
    "state",
    "udp",
    "port.",
    "ethernetudp",
    "udp;",
    "main",
    "forward",
    "declarations",
    "(not",
    "really",
    "needed",
    "environment)",
    "printprompt();",
    "receivepacket();",
    "sendline();",
    "setup.",
    "serial.begin(115200);",
    "(!serial",
    "&&",
    "4000)",
    "printf(",
    "starting...",
    "mac[6];",
    "ethernet.macaddress(mac);",
    "informative;",
    "retrieves",
    "sets",
    "mac",
    "02x",
    "mac[0]",
    "mac[1]",
    "mac[2]",
    "mac[3]",
    "mac[4]",
    "mac[5]);",
    "ethernet.onlinkstate([](bool",
    "state)",
    "[ethernet]",
    "});",
    "dhcp...",
    "(!ethernet.begin())",
    "failed",
    "return;",
    "(!ethernet.waitforlocalip(kdhcptimeout))",
    "cc3000",
    "breakout",
    "adafruit_cc3000_library",
    "//github.com/adafruit/adafruit_cc3000_library",
    "version",
    "1.14",
    "later",
    "preferred.",
    "definitions",
    "according",
    "change",
    "run",
    "these",
    "interrupt",
    "3000",
    "adafruit_cc3000_irq",
    "adafruit_cc3000_vbat",
    "5",
    "adafruit_cc3000_cs",
    "<adafruit_cc3000.h>",
    "<blynksimplecc3000.h>",
    "clocksample",
    "lgfx_use_v1",
    "lgfx_sprite",
    "canvas(&lcd);",
    "clockbase(&canvas);",
    "needle1(&canvas);",
    "shadow1(&canvas);",
    "needle2(&canvas);",
    "shadow2(&canvas);",
    "uint64_t",
    "oneday",
    "86400000;",
    "1000msec",
    "60sec",
    "60min",
    "24hour",
    "86400000",
    "count",
    "rand()",
    "oneday;",
    "int32_t",
    "width",
    "239;",
    "halfwidth",
    "transpalette",
    "zoom;",
    "#ifdef",
    "min",
    "#undef",
    "zoom",
    "(float)(std",
    "min(lcd.width()",
    "lcd.height()))",
    "width;",
    "lcd.setpivot(lcd.width()",
    "lcd.height()",
    "canvas.setcolordepth(lgfx",
    "palette_4bit);",
    "clockbase.setcolordepth(lgfx",
    "needle1.setcolordepth(lgfx",
    "shadow1.setcolordepth(lgfx",
    "needle2.setcolordepth(lgfx",
    "shadow2.setcolordepth(lgfx",
    "(0",
    "(255",
    "255",
    "255)",
    "14",
    "canvas.createsprite(width",
    "width);",
    "clockbase.createsprite(width",
    "needle1.createsprite(9",
    "119);",
    "shadow1.createsprite(9",
    "needle2.createsprite(3",
    "shadow2.createsprite(3",
    "canvas.fillscreen(transpalette);",
    "(create",
    "clockbase.fillscreen(transpalette);",
    "needle1.fillscreen(transpalette);",
    "shadow1.fillscreen(transpalette);",
    "clockbase.settextfont(4);",
    "clockbase.settextdatum(lgfx",
    "middle_center);",
    "clockbase.fillcircle(halfwidth",
    "6);",
    "clockbase.drawcircle(halfwidth",
    "-",
    "15);",
    "<=",
    "60;",
    "++i)",
    "rad",
    "0.0174532925;",
    "cosy",
    "cos(rad)",
    "collisioncircles",
    "_sprites[2];",
    "struct",
    "ball_info_t",
    "x;",
    "y;",
    "dx;",
    "dy;",
    "r;",
    "m;",
    "color;",
    "shiftsize",
    "8;",
    "ball_max",
    "256;",
    "_balls[2][ball_max];",
    "_ball_count",
    "_fps",
    "ball_count",
    "sec",
    "psec;",
    "fps",
    "frame_count",
    "_width;",
    "_height;",
    "volatile",
    "_is_running;",
    "_draw_count;",
    "_loop_count;",
    "diffdraw(lgfx_sprite*",
    "sp0",
    "lgfx_sprite*",
    "sp1)",
    "union",
    "uint32_t*",
    "s32;",
    "s;",
    "p32;",
    "p;",
    "s32",
    "(std",
    "uint32_t*)sp0->getbuffer();",
    "p32",
    "uint32_t*)sp1->getbuffer();",
    "sp0->width();",
    "height",
    "sp0->height();",
    "w32",
    "(width+3)",
    "x32",
    "(s32[x32]",
    "p32[x32]",
    "++x32",
    "w32);",
    "(x32",
    "w32)",
    "break;",
    "<<",
    "(s[xs]",
    "p[xs])",
    "++xs;",
    "(++x32",
    "s32[x32]",
    "!=",
    "p32[x32]);",
    "xe",
    "(xe",
    ">=",
    "width)",
    "create",
    "/**",
    "syntax",
    "firestore",
    "collectiongroups",
    "indexes",
    "create(<asyncclient>",
    "<firestore",
    "parent>",
    "<collectionid>",
    "<index>",
    "<asyncresultcallback>",
    "<uid>);",
    "<asyncclient>",
    "async",
    "client.",
    "parent",
    "object",
    "id",
    "database",
    "its",
    "constructor.",
    "collection",
    "id.",
    "collectiongroupsindex",
    "index",
    "object.",
    "result",
    "callback",
    "(asyncresultcallback).",
    "<uid>",
    "user",
    "specified",
    "uid",
    "(optional).",
    "firebase",
    "name",
    "without",
    "firebaseio.com.",
    "(default)",
    "empty",
    "complete",
    "usage",
    "guidelines",
    "visit",
    "//github.com/mobizt/firebaseclient",
    "<arduino.h>",
    "defined(esp32)",
    "defined(arduino_raspberry_pi_pico_w)",
    "defined(arduino_giga)",
    "defined(arduino_opta)",
    "defined(esp8266)",
    "__has_include(<wifinina.h>)",
    "defined(arduino_nano_rp2040_connect)",
    "__has_include(<wifi101.h>)",
    "__has_include(<wifis3.h>)",
    "defined(arduino_unowifir4)",
    "<wifis3.h>",
    "__has_include(<wific3.h>)",
    "defined(arduino_portenta_c33)",
    "<wific3.h>",
    "__has_include(<wifi.h>)",
    "<firebaseclient.h>",
    "wifi_ssid",
    "wifi_ap",
    "wifi_password",
    "api",
    "key",
    "obtained",
    ">",
    "overview",
    "settings.",
    "api_key",
    "web_api_key",
    "taken",
    "service",
    "account",
    "json",
    "file.",
    "delete",
    "storage",
    "deleteobject(<asyncclient>",
    "<firebasestorage",
    "firebasestorage",
    "bucket",
    "bucketid",
    "delete.",
    "email",
    "already",
    "registerd",
    "added",
    "project.",
    "user_email",
    "user_password",
    "e.g",
    "bucket-name.appspot.com",
    "storage_bucket_id",
    "asynccb(asyncresult",
    "&aresult);",
    "printresult(asyncresult",
    "defaultnetwork",
    "digistump_digispark",
    "issue",
    "linux",
    "//github.com/digistump/digistumparduino/issues/16",
    "minimize",
    "size",
    "non-pro",
    "!defined(arduino_avr_digisparkpro)",
    "blynk_no_info",
    "blynk_no_builtin",
    "<digicdc.h>",
    "serialusb.begin();",
    "blynk.begin(serialusb",
    "digistump_oak",
    "digistump",
    "oak",
    "select",
    "right",
    "type",
    "tools",
    "->",
    "menu!",
    "has",
    "configured",
    "blynk.config(auth);",
    "fileconfig",
    "fileconfig(<file_name>",
    "<file_callback>);",
    "<file_name>",
    "filename",
    "path",
    "used.",
    "<file_callback>",
    "provides",
    "operation.",
    "file_callback",
    "parameters",
    "reference",
    "returned",
    "operation",
    "file_operating_mode.",
    "file_operating_mode",
    "file_mode_open_read",
    "file_mode_open_write",
    "file_mode_open_append",
    "file_mode_open_remove.",
    "source",
    "(input)",
    "target",
    "(output)",
    "used",
    "upload",
    "download.",
    "download(<asyncclient>",
    "<file_config_data>",
    "and/or",
    "access",
    "filesystem",
    "(file_config_data)",
    "which",
    "priviledge",
    "non-authentication",
    "mode",
    "(noauth).",
    "drawlinethickness",
    "lgfx_autodetect",
    "tft;",
    "some",
    "those",
    "features",
    "lot",
    "maths",
    "expect",
    "ftl",
    "performances",
    "-)",
    "antialiased",
    "thick",
    "lines",
    "filled",
    "plain",
    "color",
    "gradient",
    "circles",
    "rectangular",
    "fill",
    "linear",
    "radial",
    "methods",
    "rgbcolor",
    "rgb888_t",
    "rgb565_t",
    "etc",
    "draw",
    "thick+smooth",
    "drawwideline(int32_t",
    "color)",
    "(gradient",
    "fill)",
    "colors_t",
    "gradient)",
    "wedge",
    "line",
    "drawwedgeline(int32_t",
    "thick0",
    "thick1",
    "smooth",
    "circle",
    "single",
    "(redundant",
    "fillsmoothcircle()",
    "kept",
    "benchmark)",
    "drawspot(int32_t",
    "radius",
    "fg_color)",
    "like",
    "epd",
    "libraries",
    "before",
    "lovyangfx.hpp.",
    "<m5epd.h>",
    "<m5coreink.h>",
    "gfx;",
    "sp(&gfx);",
    "200;",
    "m5.begin();",
    "gfx.init();",
    "gfx.setrotation(0);",
    "90",
    "gfx.width();",
    "gfx.height();",
    "gfx.setbrightness(128);",
    "epd_quality",
    "gfx.setepdmode(epd_mode_t",
    "epd_fastest);",
    "epd_fast);",
    "epd_text);",
    "epd_quality);",
    "(it8951)",
    "epd_fastest",
    "du4",
    "120msec",
    "epd_fast",
    "du",
    "260msec",
    "epd_text",
    "gl16",
    "450msec",
    "gc16",
    "r1",
    "g2",
    "b1",
    "rectwidth",
    "min(w",
    "h)",
    "gfx.filltriangle(",
    "tft_red);",
    "gfx.fillcircle(w/2",
    "h/2",
    "tft_green);",
    "gfx.fillrect((w-rectwidth)/2",
    "(h-rectwidth)/2",
    "tft_blue);",
    "endwrite()",
    "display()",
    "gfx.startwrite();",
    "20;",
    "gfx.drawline(i",
    "esp32deepsleepdisplay",
    "<driver/rtc_io.h>",
    "rtc_data_attr",
    "bootcount",
    "deepsleep",
    "switch(esp_sleep_get_wakeup_cause())",
    "case",
    "esp_sleep_wakeup_ext0",
    "esp_sleep_wakeup_ext1",
    "esp_sleep_wakeup_timer",
    "esp_sleep_wakeup_touchpad",
    "esp_sleep_wakeup_ulp",
    "lcd.init_without_reset();",
    "deep",
    "sleep",
    "init_without_reset",
    "default",
    "init",
    "lcd.clear(tft_white);",
    "lcd.clear(tft_black);",
    "lcd.setcolordepth(24);",
    "sp(&lcd);",
    "sp.createsprite(128",
    "128);",
    "sp.createpalette();",
    "128;",
    "y++)",
    "x++)",
    "sp.writepixel(x",
    "sp.color888(x",
    "1));",
    "+=",
    "128)",
    "sp.pushsprite(x",
    "y);",
    "++bootcount;",
    "lcd.setcursor(bootcount*6",
    "bootcount*8);",
    "lcd.settextcolor(tft_white",
    "tft_black);",
    "string(bootcount));",
    "lcd.settextcolor(tft_black",
    "tft_white);",
    "lcd.powersaveon();",
    "lcd.waitdisplay();",
    "pin_rst",
    "(gpio_num_t)lcd.getpanel()->config().pin_rst;",
    "((uint32_t)pin_rst",
    "gpio_num_max)",
    "rst",
    "rtc_gpio",
    "high",
    "rtc_gpio_set_level(pin_rst",
    "rtc_gpio_set_direction(pin_rst",
    "rtc_gpio_mode_output_only);",
    "rtc_gpio_init(pin_rst);",
    "esp_sleep_pd_config(esp_pd_domain_rtc_periph",
    "esp_pd_option_on);",
    "light",
    "lcd.getpanel()->getlight();",
    "(light)",
    "pin_bl",
    "(gpio_num_t)((lgfx",
    "light_pwm*)light)->config().pin_bl;",
    "((uint32_t)pin_bl",
    "backlight",
    "rtc_gpio_set_level(pin_bl",
    "rtc_gpio_set_direction(pin_bl",
    "rtc_gpio_init(pin_bl);",
    "esp_logw(",
    "esp_sleep_enable_timer_wakeup(1",
    "micro",
    "esp_deep_sleep_start();",
    "esp32_wifi",
    "runs",
    "directly",
    "chip.",
    "//github.com/espressif/arduino-esp32",
    "module",
    "<wificlient.h>",
    "<blynksimpleesp32.h>",
    "esp32_wifi_ssl",
    "<wificlientsecure.h>",
    "<blynksimpleesp32_ssl.h>",
    "esp8266",
    "yourwifi",
    "wificlient",
    "serial.println(ssid);",
    "wifi.begin(ssid",
    "(wifi.status()",
    "wl_connected)",
    "delay(500);",
    "serial.println();",
    "connected",
    "httprequest(const",
    "string&",
    "method",
    "request",
    "response)",
    "serial.print(f(",
    "));",
    "serial.print(host);",
    "serial.print(port);",
    "...",
    "(client.connect(host",
    "port))",
    "ok",
    "else",
    "return",
    "esp8266_shield",
    "(with",
    "at",
    "commands)",
    "warning!",
    "very",
    "tricky",
    "working.",
    "article",
    "//help.blynk.cc/hardware-and-libraries/arduino/esp8266-with-at-firmware",
    "<esp8266_lib.h>",
    "<blynksimpleshieldesp8266.h>",
    "esp8266_standalone",
    "//github.com/esp8266/arduino",
    "esp8266_standalone_manual_ip",
    "different",
    "each",
    "device",
    "lan",
    "arduino_mac[]",
    "0xba",
    "ipaddress",
    "device_ip",
    "(192",
    "esp8266_standalone_ssl",
    "<blynksimpleesp8266_ssl.h>",
    "esp8266_standalone_smartconfig",
    "smartconfig",
    "might",
    "environment.",
    "try",
    "examples",
    "sketch!",
    "wifi.mode(wifi_sta);",
    "cnt",
    "(cnt++",
    "10)",
    "energia_serial_usb",
    "energia",
    "ide",
    "//energia.nu/download/",
    "energia_wifi",
    "tested",
    "ti",
    "msp430f5529",
    "cc3100",
    "cc3200-launchxl",
    "redbearlab",
    "cc3200",
    "w/",
    "<blynksimpleenergiawifi.h>",
    "fft_01",
    "fft",
    "copyright",
    "2014",
    "enrique",
    "condes",
    "2020",
    "bim",
    "overbohm",
    "(template",
    "speed",
    "improvements)",
    "software",
    "redistribute",
    "modify",
    "terms",
    "gnu",
    "general",
    "as",
    "published",
    "foundation",
    "either",
    "option)",
    "version.",
    "distributed",
    "hope",
    "useful",
    "warranty;",
    "even",
    "implied",
    "warranty",
    "merchantability",
    "fitness",
    "particular",
    "purpose.",
    "see",
    "details.",
    "received",
    "copy",
    "along",
    "program.",
    "<http",
    "//www.gnu.org/licenses/>.",
    "simulates",
    "sampling",
    "sinusoidal",
    "hz",
    "signal",
    "amplitude",
    "sampled",
    "5000",
    "hz.",
    "samples",
    "stored",
    "inside",
    "vreal",
    "array.",
    "windowed",
    "hamming",
    "function.",
    "computed",
    "samples.",
    "then",
    "magnitudes",
    "frequencies",
    "compose",
    "calculated.",
    "finally",
    "frequency",
    "highest",
    "peak",
    "being",
    "present",
    "fft_02",
    "compute",
    "several",
    "signals",
    "range",
    "frequencies.",
    "exponent",
    "calculated",
    "once",
    "execution",
    "since",
    "constant.",
    "saves",
    "resources",
    "during",
    "reduces",
    "compiled",
    "size.",
    "time",
    "computing",
    "taking.",
    "arduinofft.h",
    "values",
    "changed",
    "order",
    "evaluate",
    "64;",
    "40;",
    "4;",
    "fft_03",
    "adc.",
    "2018",
    "cond",
    "ragnar",
    "ran",
    "yen",
    "homb",
    "channel",
    "a0",
    "//this",
    "must",
    "always",
    "power",
    "samplingfrequency",
    "100;",
    "//hz",
    "less",
    "than",
    "10000",
    "due",
    "adc",
    "sampling_period_us;",
    "long",
    "microseconds;",
    "input",
    "output",
    "vectors",
    "fft_04",
    "spectrum",
    "printed.",
    "plotter",
    "fft_05",
    "fft_speedup",
    "speedup",
    "arduinofft",
    "based",
    "examples/fft_03/fft_03.ino",
    "two",
    "options",
    "reciprocal",
    "multiplication",
    "division",
    "speedups",
    "decrease",
    "precision",
    "//#define",
    "fft_speed_over_precision",
    "low-precision",
    "square",
    "root",
    "approximation",
    "regular",
    "sqrt()",
    "call",
    "specific",
    "cases",
    "significantly",
    "faster.",
    "works",
    "arduinofft<float>.",
    "fishino",
    "//fishino.it/en/download/",
    "<fishino.h>",
    "<blynksimplefishino.h>",
    "fixedwidthserver",
    "2021-2023",
    "serve",
    "protocol",
    "having",
    "continuous",
    "stream",
    "fixed-size",
    "multiple",
    "clients.",
    "c++",
    "<algorithm>",
    "<cstdio>",
    "<utility>",
    "<vector>",
    "kserverport",
    "5000;",
    "kmessagesize",
    "10;",
    "pretend",
    "specifies",
    "bytes",
    "types",
    "keeps",
    "track",
    "clientstate",
    "clientstate(ethernetclient",
    "client)",
    "client(std",
    "move(client))",
    "{}",
    "bufsize",
    "many",
    "been",
    "buf[kmessagesize];",
    "closed",
    "what",
    "where",
    "belong",
    "whom.",
    "vector<clientstate>",
    "clients;",
    "server.",
    "ethernetserver",
    "server{kserverport};",
    "unlike",
    "(which",
    "still",
    "flashmemsprite",
    "image320x240x16.h",
    "image480x320x8.h",
    "image640x480x4.h",
    "image1280x960x1.h",
    "sprite;",
    "(lcd.width()",
    "lcd.height())",
    "lcd.setrotation(lcd.getrotation()",
    "setbuffer",
    "sprite.setbuffer(const_cast<std",
    "uint8_t*>(image320x240x16)",
    "320",
    "240",
    "16);",
    "uint8_t*>(image480x320x8)",
    "480",
    "8);",
    "uint8_t*>(image640x480x4)",
    "640",
    "uint8_t*>(image1280x960x1)",
    "1280",
    "960",
    "sprite.createpalette();",
    "const(",
    "const_cast",
    "ok)",
    "sprite.pushsprite",
    "sprite.pushrotated",
    "sprite.pushrotatezoom",
    "sprite.readrect",
    "ng)",
    "sprite.drawpixel",
    "sprite.fillrect",
    "sprite.scroll",
    "count;",
    "(++count",
    "360)",
    "(((float)count)",
    "200)",
    "0.1;",
    "sprite.pushrotatezoom(&lcd",
    "zoom);",
    "get(<asyncclient>",
    "<indexid>",
    "index.",
    "goto",
    "getmetadata",
    "getmetadata(<asyncclient>",
    "metadata.",
    "getreadings",
    "moving",
    "average",
    "//github.com/jchristensen/movingavg",
    "jack",
    "christensen",
    "gpl",
    "v3.0",
    "//www.gnu.org/licenses/gpl.html",
    "demonstrate",
    "retrieving",
    "readings",
    "movingavg",
    "<movingavg.h>",
    "foo(6);",
    "foo.begin();",
    "foo.reading(1);",
    "generate",
    "sample",
    "foo.reading(2);",
    "foo.reading(3);",
    "foo.reading(4);",
    "//foo.reading(5);",
    "//foo.reading(6);",
    "*readings",
    "foo.getreadings();",
    "pointer",
    "foo.getcount();",
    "number",
    "serial.print(n);",
    "i=0;",
    "i<n;",
    "i++)",
    "serial.println(*readings++);",
    "graph",
    "line_count",
    "vector<int>",
    "points[line_count];",
    "colors[]",
    "tft_red",
    "tft_green",
    "tft_blue",
    "tft_cyan",
    "tft_magenta",
    "tft_yellow",
    "xoffset",
    "yoffset",
    "point_count;",
    "getbasecolor(int",
    "((x",
    "y)&3",
    "((x-xoffset)&31",
    "y&31)",
    "tft_black",
    "((!y",
    "xoffset)",
    "tft_white",
    "tft_darkgreen));",
    "point_count",
    "line_count;",
    "points[i].resize(point_count);",
    "lcd.writecolor(getbasecolor(x",
    "yoffset)",
    "prev_sec;",
    "fps;",
    "++fps;",
    "1000;",
    "(prev_sec",
    "sec)",
    "prev_sec",
    "sec;",
    "lcd.setcursor(0",
    "0);",
    "03d",
    "fps);",
    "points[i][count",
    "point_count]",
    "(sinf((float)count",
    "(10",
    "i))+sinf((float)count",
    "(13",
    "i)))",
    "(lcd.height()",
    "++count;",
    "index1",
    "iperfserver",
    "2022-2024",
    "implements",
    "iperf",
    "tcp",
    "traffic.",
    "command",
    "-c",
    "<ip",
    "address>",
    "-i",
    "-l",
    "1460",
    "supported",
    "(compatibility)",
    "-r",
    "(tradeoff)",
    "-d",
    "(dualtest)",
    "specifying",
    "(len)",
    "appears",
    "give",
    "better",
    "results",
    "when",
    "(the",
    "teensy)",
    "sending",
    "traffic",
    "back",
    "client",
    "tradeoff",
    "option.",
    "stack",
    "achieve",
    "about",
    "94.9",
    "mbps",
    "both",
    "directions.",
    "supported.",
    "was",
    "inspired",
    "lwiperf",
    "simon",
    "goldschmidt",
    "//git.savannah.nongnu.org/cgit/lwip.git/tree/src",
    "h=stable-2_1_3_release",
    "references",
    "dan",
    "drown",
    "experiments",
    "(june",
    "25",
    "2020)",
    "[teensy",
    "4.1",
    "ethernet](https",
    "//blog.dan.drown.org/teensy-4-1-ethernet/)",
    "<cstdint>",
    "<cstring>",
    "<iterator>",
    "<lwip/opt.h>",
    "-------------------------------------------------------------------",
    "intel_edison_wifi",
    "intel",
    "edison",
    "(wifi).",
    "<blynksimpleinteledisonwifi.h>",
    "commands",
    "server_ip",
    "port);",
    "lengthwidthserver",
    "clients",
    "message",
    "one-byte",
    "length",
    "field.",
    "similar",
    "indicates",
    "message.",
    "states",
    "parsing",
    "position",
    "arbitrary.",
    "we",
    "enum",
    "messageparsestate",
    "kstart",
    "kvalue",
    "reading",
    "reset();",
    "parsestate;",
    "messagesize;",
    "current",
    "bufsize;",
    "buf[255];",
    "linkitone",
    "<lwifi.h>",
    "<lwificlient.h>",
    "<blynksimplelinkitone.h>",
    "choose",
    "wifi_sec",
    "lwifi_open",
    "lwifi_wpa",
    "lwifi_wep",
    "lwifi_wpa;",
    "wifi_sec);",
    "linkwatcher",
    "2023",
    "watches",
    "listener.",
    "address.",
    "listen",
    "changes",
    "(state)",
    "duplex",
    "crossover",
    "ethernet.linkspeed()",
    "ethernet.linkisfullduplex()",
    "full",
    "half",
    "ethernet.linkiscrossover()",
    "just",
    "want",
    "watch",
    "ethernet.setdhcpenabled(false);",
    "error",
    "loop.",
    "list",
    "list(<asyncclient>",
    "<collectionid>);",
    "response",
    "payload",
    "task",
    "complete.",
    "accounts",
    "tab",
    "click",
    "new",
    "private",
    "longtextscroll",
    "canvas;",
    "text[]",
    "hello",
    "world",
    "!",
    "sample.",
    "size_t",
    "textlen",
    "sizeof(text)",
    "sizeof(text[0]);",
    "textpos",
    "canvas.setcolordepth(8);",
    "canvas.setfont(&fonts",
    "lgfxjapanminchop_32);",
    "canvas.settextwrap(false);",
    "canvas.createsprite(lcd.width()",
    "36);",
    "cursor_x",
    "canvas.getcursorx()",
    "(cursor_x",
    "canvas.setcursor(cursor_x",
    "canvas.scroll(-1",
    "(textpos",
    "lcd.width())",
    "canvas.print(text[textpos++]);",
    "canvas.getcursorx();",
    "canvas.pushsprite(&lcd",
    "mbedtlsdemo",
    "mbed",
    "2.x.x.",
    "following",
    "(in",
    "options)",
    "install",
    "2.x.x",
    "tls.",
    "2.28.8.",
    "installed",
    "readme",
    "information.",
    "src/mbedtls/config.h",
    "desired",
    "config",
    "cut",
    "&",
    "paste.",
    "referencing",
    "mbedtls",
    "headers",
    "metersample",
    "base(&canvas);",
    "needle(&canvas);",
    "lw",
    "(float)lw",
    "px",
    "py",
    "lcd.setpivot(px",
    "py);",
    "180;",
    "i+=2)",
    "lcd.setcolor(lcd.color888(i*1.4",
    "i*1.4+2",
    "i*1.4+4));",
    "lcd.fillarc(px",
    "(lw>>1)",
    "(lw>>1)-zoom*3",
    "90+i",
    "92+i);",
    "88-i",
    "90-i);",
    "(lw>>1)-zoom*4",
    "(lw>>1)-zoom*7",
    "270+i",
    "272+i);",
    "268-i",
    "270-i);",
    "palette_2bit);",
    "base",
    ".setcolordepth(lgfx",
    "needle.setcolordepth(lgfx",
    ".createsprite(width",
    "needle.createsprite(3",
    "11);",
    "base.setfont(&fonts",
    "orbitron_light_24);",
    "//base.setfont(&fonts",
    "roboto_thin_24);",
    "base.settextdatum(lgfx",
    "base.fillcircle(halfwidth",
    "base.fillarc(halfwidth",
    "135",
    "45",
    "23",
    "43",
    "317",
    "movingcircles",
    "<lgfx_autodetect.hpp>",
    "<lgfx_user/lgfx_esp32_sample.hpp>",
    "lcd_width",
    "lcd_height;",
    "obj_info_t",
    "move()",
    "(dx",
    "dx",
    "lcd_width)",
    "-1;",
    "(y",
    "(dy",
    "dy",
    "lcd_height)",
    "lcd_height",
    "obj_count",
    "objects[obj_count];",
    "sprites[2];",
    "int_fast16_t",
    "sprite_height;",
    "*a;",
    "obj_count;",
    "&objects[i];",
    "a->color",
    "(uint32_t)rand()",
    "|",
    "movingicons",
    "short",
    "info[];",
    "alert[];",
    "closex[];",
    "infowidth",
    "infoheight",
    "alertwidth",
    "alertheight",
    "closewidth",
    "closeheight",
    "int_fast8_t",
    "img;",
    "z;",
    "dr;",
    "dz;",
    "nodemcu",
    "nodemcu.",
    "advanced",
    "esp",
    "esp8266_standalone_manual_ip.ino",
    "esp8266_standalone_smartconfig.ino",
    "esp8266_standalone_ssl.ino",
    "oscprinter",
    "osc",
    "messages.",
    "well-known",
    "8000",
    "advertises",
    "mdns",
    "discover",
    "such",
    "touchosc",
    "send",
    "relies",
    "liteoscparser",
    "osc.h",
    "koscport",
    "8000;",
    "kservicename[]",
    "osc-example",
    "ll",
    "directly;",
    "buffer",
    "serial.printf(",
    "ota",
    "ota(<asyncclient>",
    "samd21",
    "supports.",
    "//github.com/mobizt/firebaseclient#ota-update.",
    "defined(arduino_arch_samd)",
    "<internal_storage_ota.h>",
    "ota_storage",
    "internalstorage",
    "partyparrot",
    "partyparrot.h",
    "sprite[10];",
    "parrot00[];",
    "parrot01[];",
    "parrot02[];",
    "parrot03[];",
    "parrot04[];",
    "parrot05[];",
    "parrot06[];",
    "parrot07[];",
    "parrot08[];",
    "parrot09[];",
    "lcd.setrotation(0);",
    "(float)lcd.width()",
    "ztmp",
    "(float)lcd.height()",
    "96;",
    "(zoom",
    "ztmp)",
    "ztmp;",
    "lcd.fillscreen(0xffffffu);",
    "sprite[0].createfrombmp(parrot00);",
    "sprite[1].createfrombmp(parrot01);",
    "sprite[2].createfrombmp(parrot02);",
    "sprite[3].createfrombmp(parrot03);",
    "sprite[4].createfrombmp(parrot04);",
    "sprite[5].createfrombmp(parrot05);",
    "sprite[6].createfrombmp(parrot06);",
    "sprite[7].createfrombmp(parrot07);",
    "sprite[8].createfrombmp(parrot08);",
    "sprite[9].createfrombmp(parrot09);",
    "sprite[count].pushrotatezoom(&lcd",
    "pixelpusherserver",
    "pixelpusher",
    "receiver.",
    "sent",
    "octows2811.",
    "configurable",
    "via",
    "constants.",
    "easy",
    "things",
    "alter",
    "strips",
    "(this",
    "file)",
    "pixels",
    "per",
    "strip",
    "octows2811",
    "pixel",
    "(octows2811receiver.cpp)",
    "##",
    "packet",
    "sizes",
    "best",
    "exceed",
    "maximum",
    "non-fragmented",
    "ipv4",
    "often",
    "1500-20-8=1472",
    "1500",
    "common",
    "mtu",
    "(maximum",
    "transmission",
    "unit)",
    "header",
    "notes",
    "pixelsperstrip*3",
    "hold",
    "strips.",
    "ethernet.mtu()",
    "octows2811receiver.h",
    "pixelpusherserver.h",
    "rn_xv_wifly",
    "wifly",
    "rn-xv",
    "wiflyhq",
    "//github.com/harlequin-tech/wiflyhq",
    "ensure",
    "stable",
    "connection!",
    "4.41",
    "<wiflyhq.h>",
    "<blynksimplewifly.h>",
    "radgialgauge",
    "sprite(&lcd);",
    "meter_t",
    "pivot_x;",
    "pivot_y;",
    "angle",
    "add",
    "advance(void)",
    "((angle",
    "256",
    "0.0)",
    "(angle",
    "0.0))",
    "-add;",
    "add;",
    "drawgauge(uint32_t",
    "lcd.setpivot(pivot_x",
    "pivot_y);",
    "sprite.setpalettecolor(1",
    "color);",
    "sprite.pushrotated(angle",
    "127);",
    "advance();",
    "meter1",
    "meter2",
    "meter3;",
    "sprite.setcolordepth(2);",
    "sprite.createsprite(3",
    "sprite.setpivot(1",
    "sprite.drawfastvline(1",
    "sprite.height()",
    "sprite.drawfastvline(0",
    "meter1.pivot_x",
    "meter1.pivot_y",
    "meter1.add",
    "0.01;",
    "meter2.pivot_x",
    "meter2.pivot_y",
    ">>2;",
    "meter2.add",
    "0.11;",
    "meter3.pivot_x",
    "meter3.pivot_y",
    "meter3.add",
    "0.57;",
    "lcd.fillscreen(lcd.color565(0",
    "127));",
    "lcd.drawfasthline(0",
    "(i*2+1)",
    "0xffff);",
    "lcd.drawfastvline((i*2+1)",
    "meter1.drawgauge(sprite.color888(255",
    "meter1.angle",
    "meter2.drawgauge(sprite.color888(255",
    "meter2.angle",
    "meter3.drawgauge(sprite.color888(0",
    "127",
    "meter3.angle));",
    "randomnumbers",
    "random",
    "distributions",
    "engines",
    "entropy",
    "functions.",
    "//en.cppreference.com/w/cpp/numeric/random#random_number_distributions",
    "//en.cppreference.com/w/cpp/named_req/uniformrandombitgenerator",
    "//en.cppreference.com/w/cpp/named_req/randomnumberengine",
    "undefine",
    "nonsense",
    "<random>",
    "round",
    "abs",
    "randomdevice",
    "namespace.",
    "qualify",
    "directive.",
    "satisfies",
    "uniformrandombitgenerator",
    "named",
    "requirement.",
    "security;",
    "standard",
    "library;",
    "uniform_int_distribution<int>",
    "dicedist(1",
    "inclusive",
    "uniform_real_distribution<float>",
    "realdist(0.0f",
    "1.0f);",
    "[0",
    "normal_distribution<float>",
    "normaldist(0.0f",
    "mean=0",
    "stddev=1",
    "congruential",
    "(lcg)",
    "engine.",
    "minstd_rand",
    "randomengine{randomdevice",
    "instance()()};",
    "[hardware",
    "entropy]",
    "demo(randomdevice",
    "instance());",
    "[pseudo-random]",
    "demo(randomengine);",
    "generates",
    "numbers",
    "variety",
    "rawframemonitor",
    "unknown",
    "raw",
    "frames.",
    "known",
    "frame",
    "won",
    "printed",
    "associated",
    "enabled",
    "handler",
    "them.",
    "(0x0800)",
    "arp",
    "(0x0806)",
    "ipv6",
    "(0x86dd)",
    "(if",
    "enabled)",
    "currently",
    "receive",
    "frames",
    "addressed",
    "subscribed",
    "multicast",
    "destination",
    "tagged",
    "allowed",
    "calling",
    "ethernet.setmacaddressallowed(mac",
    "flag)",
    "alternatively",
    "promiscuous",
    "defining",
    "qnethernet_enable_promiscuous_mode",
    "macro.",
    "qnethernet_enable_raw_frame_support",
    "macros",
    "vlan",
    "ethertype",
    "constants",
    "kethertypevlan",
    "0x8100u;",
    "kethertypeqinq",
    "0x88a8u;",
    "internal",
    "redbear_duo_wifi",
    "redbear",
    "duo",
    "<blynksimpleredbear_duo.h>",
    "wpa2",
    "wpa",
    "wep",
    "wpa2;",
    "//system_mode(automatic);",
    "system_mode(manual);",
    "delay(5000);",
    "wifi.on();",
    "wifi.setcredentials(ssid",
    "wifi.connect();",
    "rotatedial",
    "sp;",
    "flip;",
    "inline",
    "getbackcolor(int",
    "lcd.swap565(abs((x&31)-16)<<3",
    "abs((y&31)-16)<<3);",
    "//return",
    "lcd.swap565(x",
    "sprites[i].setcolordepth(lcd.getcolordepth());",
    "sprites[i].setfont(&fonts",
    "font2);",
    "sprites[i].settextcolor(tft_white);",
    "sprites[i].settextdatum(textdatum_t",
    "top_right);",
    "div",
    "(;;)",
    "sprite_height",
    "div;",
    "fail",
    "!fail",
    "!sprites[i].createsprite(lcd.width()",
    "sprite_height);",
    "(!fail)",
    "sprites[i].deletesprite();",
    "div++;",
    "sp.setcolordepth(8);",
    "sp.setfont(&fonts",
    "sp.settextdatum(textdatum_t",
    "prev_fps;",
    "prev_fps",
    "count++;",
    "y_center",
    "max(lcd.width()",
    "lcd.height()));",
    "distance;",
    "zoom_x",
    "zoom_y;",
    "div_y",
    "sprite_height)",
    "(float)(count",
    "36)",
    "sprites[flip].clear();",
    "//*",
    "background",
    "rotatedzoomsample",
    "sprite1(&lcd);",
    "sprite2(&lcd);",
    "sprites[2]",
    "{&sprite1",
    "&sprite2};",
    "280;",
    "lcd.setpivot(lcd.width()>>1",
    "lcd.height()>>1);",
    "min(width",
    "lcd.height())+10))",
    "sprites[i]->setcolordepth(8);",
    "sprites[i]->createsprite(width",
    "sprites[i]->createpalette();",
    "flip",
    "sprites[flip]->setpalettecolor(i",
    "((i-count-1)",
    "0x7f)<<1",
    "0xff)",
    "0x3f)<<2);",
    "sprites[!flip]->clearcliprect();",
    "sprites[!flip]->setcolor(count);",
    "sprites[!flip]->fillrect(0",
    "sprites[!flip]->fillrect(width-3",
    "width-3",
    "sprites[!flip]->setcliprect(3",
    "width-6",
    "width-6);",
    "sprites[!flip]->pushrotatezoom(sprites[flip]",
    "width>>1",
    "(width>>1)+10",
    "((float)count)*.5",
    "0.9",
    "0.95);",
    "sprites[flip]->pushsprite((lcd.width()",
    "sim800_sim900",
    "attention!",
    "phone",
    "sim",
    "ballance",
    "correct",
    "internet",
    "correctly",
    "inserted",
    "into",
    "provide",
    "good",
    "supply",
    "(up",
    "2a)",
    "(4.0-4.2v",
    "5v",
    "documentation)",
    "(hardware",
    "recommended)",
    "5.",
    "antenna",
    "attached",
    "yourapn",
    "gprs_user",
    "uncomment",
    "sntpclient",
    "sntp",
    "//tools.ietf.org/html/rfc4330",
    "<ctime>",
    "teensyduino",
    "<timelib.h>",
    "kntpport",
    "01-jan-1900",
    "00",
    "01-jan-1970",
    "kepochdiff",
    "208",
    "988",
    "800;",
    "epoch",
    "07-feb-2036",
    "06",
    "kbreaktime",
    "085",
    "978",
    "496;",
    "buffer.",
    "buf[48];",
    "savebmp",
    "<seeed_fs.h>",
    "<sd/seeed_sd.h>",
    "#else",
    "<sd.h>",
    "<spiffs.h>",
    "filename[]",
    "/lovyangfx_test.bmp",
    "#ifndef",
    "sdcard_ss_pin",
    "sdcard_spi",
    "savetosd_16bit(void)",
    "sd.open(filename",
    "(file)",
    "rowsize",
    "(2",
    "bitmap_header_t",
    "bmpheader;",
    "bmpheader.bftype",
    "0x4d42;",
    "bmpheader.bfsize",
    "sizeof(bmpheader);",
    "bmpheader.bfoffbits",
    "bmpheader.bisize",
    "bmpheader.biwidth",
    "bmpheader.biheight",
    "height;",
    "bmpheader.biplanes",
    "bmpheader.bibitcount",
    "bmpheader.bicompression",
    "file.write((std",
    "uint8_t*)&bmpheader",
    "sizeof(bmpheader));",
    "buffer[rowsize];",
    "memset(&buffer[rowsize",
    "4]",
    "y--)",
    "lcd.readrect(0",
    "(lgfx",
    "rgb565_t*)buffer);",
    "file.write(buffer",
    "rowsize);",
    "file.close();",
    "true;",
    "failure",
    "result;",
    "savetosd_24bit(void)",
    "(3",
    "savepng",
    "/lovyangfx_test.png",
    "savetosd(void)",
    "createpng",
    "png",
    "samd51",
    "172x172",
    "192x192",
    "psram",
    "dlen;",
    "uint8_t*)lcd.createpng(&dlen",
    "128",
    "(!png)",
    "success",
    "uint8_t*)png",
    "dlen);",
    "free(png);",
    "lcd.setcolor(tft_white);",
    "lcd.writecolor(",
    "lcd.color888(x",
    "sd.end();",
    "delay(1000);",
    "sd.begin(sdcard_ss_pin",
    "25000000);",
    "(!savetosd());",
    "success.",
    "lcd.drawpngfile(sd",
    "random(-20",
    "20)",
    "20));",
    "serverwithlisteners",
    "stop",
    "services.",
    "testing",
    "teensy",
    "entirely",
    "work.",
    "managing",
    "attaching",
    "rudimentary",
    "behaviour",
    "6.",
    "timeouts",
    "7.",
    "connection.",
    "basis",
    "logic",
    "illustration.",
    "here.",
    "simplehttpclient",
    "2024",
    "makes",
    "upon",
    "acquiring",
    "reads",
    "until",
    "connection-close.",
    "machine.",
    "parsed.",
    "khost[]{",
    "kconnect",
    "ksendrequest",
    "kreadresponse",
    "kend",
    "re",
    "doing",
    "kstart;",
    "gotip",
    "responsestarttime",
    "responsesize",
    "readbuf[1024];",
    "ide)",
    "connect();",
    "sendrequest();",
    "readresponse();",
    "sparkfun_blynk_board",
    "sparkfun",
    "board.",
    "1.0",
    "(compatible",
    "board)",
    "menu",
    "subset",
    "test/demonstrate",
    "calculating",
    "shorter",
    "term",
    "averages",
    "most",
    "recent",
    "points.",
    "<streaming.h>",
    "//github.com/janelia-arduino/streaming",
    "arraysize{30};",
    "foo(arraysize);",
    "f(",
    "__file__",
    "ncompiled",
    "__date__",
    "__time__",
    "points",
    "interval",
    "i=1;",
    "i<=42;",
    "foo.reading(i);",
    "avgtest(",
    "overall",
    "foo.getavg()",
    "28);",
    "last",
    "foo.getavg(10)",
    "38);",
    "foo.getavg(3)",
    "41);",
    "foo.getavg(2)",
    "42);",
    "foo.getavg(1)",
    "foo.getavg(0)",
    "foo.getavg(30)",
    "31",
    "foo.getavg(31)",
    "endl;",
    "foo.reset();",
    "fewer",
    "i<=17;",
    "9);",
    "13);",
    "17);",
    "tft_graphicstest_pdq",
    "adapted",
    "xark",
    "pdq",
    "graphicstest",
    "sketch.",
    "end",
    "original",
    "info.",
    "glcd",
    "font",
    "only.",
    "<lgfx_tft_espi.hpp>",
    "<tft_espi.h>",
    "max",
    "total",
    "tn",
    "lovyan",
    "test!",
    "tft.init();",
    "tft.setrotation(0);",
    "tft.startwrite();",
    "serial.println(f(",
    "benchmark",
    "(microseconds)",
    "usechad",
    "testhad();",
    "had",
    "pushcolor",
    "serial.println(usechad);",
    "delay(100);",
    "usecfillscreen",
    "testfillscreen();",
    "screen",
    "serial.println(usecfillscreen);",
    "usectext",
    "testtext();",
    "serial.println(usectext);",
    "usecpixels",
    "testpixels();",
    "serial.println(usecpixels);",
    "useclines",
    "testlines(tft_blue);",
    "serial.println(useclines);",
    "usecfastlines",
    "testfastlines(tft_red",
    "horiz/vert",
    "serial.println(usecfastlines);",
    "usecrects",
    "testrects(tft_green);",
    "rectangles",
    "(outline)",
    "serial.println(usecrects);",
    "usecfilledrects",
    "testfilledrects(tft_yellow",
    "tft_magenta);",
    "(filled)",
    "serial.println(usecfilledrects);",
    "usecfilledcircles",
    "testfilledcircles(10",
    "serial.println(usecfilledcircles);",
    "useccircles",
    "testcircles(10",
    "serial.println(useccircles);",
    "usectriangles",
    "testtriangles();",
    "triangles",
    "serial.println(usectriangles);",
    "usecfilledtrangles",
    "teensy3",
    "template_esp32",
    "demo.",
    "development",
    "testing.",
    "setting.h",
    "would",
    "product",
    "contact",
    "businesses",
    "//www.blynk.io/",
    "use_wrover_board",
    "use_custom_board",
    "settings.h",
    "app_debug",
    "blynkprovisioning.h",
    "blynkprovisioning.begin();",
    "handles",
    "blynkprovisioning.run();",
    "template_esp8266",
    "use_sparkfun_blynk_board",
    "use_node_mcu_board",
    "use_witty_cloud_board",
    "esp8266-based",
    "template_mkr1000",
    "additional",
    "//github.com/cmaglie/flashstorage",
    "//github.com/michael71/timer5",
    "use_mkr1000_board",
    "theairboard_wifly",
    "airboard",
    "//www.theairboard.cc/quick-start/",
    "debugserial(10",
    "<theairboard.h>",
    "tinyduino_wifi",
    "tinycircuits",
    "tools->board",
    "tools->processor",
    "atmega",
    "328",
    "(3.3v",
    "8mhz)",
    "<blynksimpletinyduino.h>",
    "wlan_sec_unsec",
    "wlan_sec_wep",
    "wlan_sec_wpa",
    "wlan_sec_wpa2",
    "transitionfx",
    "push",
    "sprites",
    "style!",
    "lgfx_spritefx",
    "layer",
    "brought",
    "tobozo",
    "copyleft",
    "(c+)",
    "demo",
    "ways",
    "sprite",
    "transitions.",
    "transition",
    "effects",
    "spin",
    "zommed",
    "slice",
    "sliced",
    "merged",
    "stretch",
    "spread",
    "edge",
    "easing",
    "plenty!",
    "strech",
    "does",
    "delay",
    "between",
    "lgfx_spritefx(&tft);",
    "stuff",
    "sprite...",
    "ready",
    "pushed",
    "sprite->pushsprite(",
    "sprite->spin(",
    "sprite->slice(",
    "sprite->stretch(",
    "lgfx_spritefx.hpp",
    "examples.",
    "assets.h",
    "images",
    "easingfuncdesc_t",
    "name;",
    "easing_fn_t",
    "func;",
    "img_t",
    "databases",
    "patch(<asyncclient>",
    "<database>",
    "<updatemask>",
    "holds",
    "update.",
    "fields",
    "updated.",
    "comma-separated",
    "fully",
    "qualified",
    "names",
    "fields.",
    "user.displayname",
    "photo"
  ],
  "total_tokens": 3006,
  "tokenToIndex": {
    "0": 267,
    "1": 53,
    "2": 285,
    "3": 422,
    "4": 327,
    "5": 1017,
    "6": 328,
    "7": 329,
    "8": 221,
    "10": 82,
    "11": 773,
    "12": 355,
    "13": 774,
    "14": 1068,
    "15": 686,
    "16": 166,
    "20": 356,
    "23": 2181,
    "24": 357,
    "25": 2000,
    "28": 358,
    "30": 938,
    "31": 2818,
    "32": 359,
    "33": 928,
    "36": 354,
    "37": 923,
    "38": 909,
    "39": 907,
    "40": 360,
    "43": 2182,
    "45": 2180,
    "80": 426,
    "90": 1396,
    "100": 299,
    "101": 877,
    "120": 428,
    "127": 2409,
    "128": 2710,
    "135": 2179,
    "150": 302,
    "160": 430,
    "168": 52,
    "208": 2639,
    "240": 1824,
    "255": 1066,
    "256": 2362,
    "317": 2183,
    "320": 1823,
    "328": 2935,
    "443": 705,
    "480": 1827,
    "640": 1830,
    "960": 1833,
    "978": 2647,
    "988": 2640,
    "1000": 89,
    "1010": 846,
    "1280": 1832,
    "1460": 1958,
    "1500": 2328,
    "2014": 1599,
    "2018": 1700,
    "2020": 1602,
    "2023": 2056,
    "2024": 2749,
    "3000": 1014,
    "5000": 1646,
    "8000": 2238,
    "10000": 1717,
    "86400000": 1037,
    "<PAD>": 0,
    "<START>": 1,
    "<END>": 2,
    "01helloworld": 3,
    "/*************************************************************": 4,
    "gpio2led": 5,
    "gpio2": 6,
    "blynk_for_chinese": 7,
    "https": 8,
    "//github.com/hznupeter/blynk-library-for-chinese": 9,
    "blynk": 10,
    "//gitee.com/hznupeter/blynk_iot/wikis": 11,
    "*************************************************************/": 12,
    "void": 13,
    "setup()": 14,
    "{": 15,
    "pinmode(2": 16,
    "output);": 17,
    "}": 18,
    "loop()": 19,
    "digitalwrite(2": 20,
    "high);": 21,
    "02blynkblink": 22,
    "io": 23,
    "app": 24,
    "button": 25,
    "switch": 26,
    "#define": 27,
    "blynk_print": 28,
    "serial": 29,
    "//": 30,
    "#include": 31,
    "<esp8266wifi.h>": 32,
    "<blynksimpleesp8266.h>": 33,
    "char": 34,
    "auth[]": 35,
    "=": 36,
    "c3102448027d494ca48b27d0a732f245": 37,
    ";//": 38,
    "ssid[]": 39,
    "ssid": 40,
    ";//wifi": 41,
    "pass[]": 42,
    "psssword": 43,
    "serial.begin(9600);": 44,
    "blynk.begin(auth": 45,
    "pass);//": 46,
    "//blynk.begin(auth": 47,
    "pass": 48,
    "blynk-cloud.com": 49,
    "8080);//": 50,
    "ipaddress(192": 51,
    "158)": 54,
    "ip": 55,
    "blynk.run();": 56,
    "03getdata": 57,
    "slider": 58,
    "v1": 59,
    "2a365b624c0f4ea891256d4a66d428f7": 60,
    "blynk_write(v1)": 61,
    "int": 62,
    "pinvalue": 63,
    "param.asint();": 64,
    "string": 65,
    "i": 66,
    "param.asstr();": 67,
    "double": 68,
    "d": 69,
    "param.asdouble();": 70,
    "serial.print(": 71,
    "value": 72,
    "is": 73,
    ");": 74,
    "serial.println(pinvalue);": 75,
    "04pushdata": 76,
    "display": 77,
    "v5": 78,
    "blynktimer": 79,
    "timer;": 80,
    "mytimerevent()": 81,
    "blynk.virtualwrite(v5": 83,
    "millis()": 84,
    "/": 85,
    "1000);": 86,
    "timer.setinterval(1000l": 87,
    "mytimerevent);//": 88,
    "mytimerevent": 90,
    "timer.run();": 91,
    "1_simple_use": 92,
    "arduinoide": 93,
    "(": 94,
    "ttgo": 95,
    "t-wristband": 96,
    "esp-wrover-kit": 97,
    ")": 98,
    "lovyangfx.hpp": 99,
    "include": 100,
    "define": 101,
    "lgfx_": 102,
    "lgfx_m5stack": 103,
    "m5stack": 104,
    "basic": 105,
    "gray": 106,
    "go": 107,
    "fire": 108,
    "lgfx_m5stack_core2": 109,
    "core2": 110,
    "lgfx_m5stack_coreink": 111,
    "coreink": 112,
    "lgfx_m5stick_c": 113,
    "m5stick": 114,
    "c": 115,
    "cplus": 116,
    "lgfx_m5paper": 117,
    "m5paper": 118,
    "lgfx_m5tough": 119,
    "m5tough": 120,
    "lgfx_m5atoms3": 121,
    "m5atoms3": 122,
    "lgfx_odroid_go": 123,
    "odroid-go": 124,
    "lgfx_ttgo_ts": 125,
    "ts": 126,
    "lgfx_ttgo_twatch": 127,
    "t-watch": 128,
    "lgfx_ttgo_twristband": 129,
    "lgfx_ttgo_tdisplay": 130,
    "t-display": 131,
    "lgfx_dduino32_xs": 132,
    "dstike": 133,
    "d-duino-32": 134,
    "xs": 135,
    "lgfx_lolin_d32_pro": 136,
    "lolin": 137,
    "d32": 138,
    "pro": 139,
    "lgfx_lolin_s3_pro": 140,
    "s3": 141,
    "lgfx_esp_wrover_kit": 142,
    "espressif": 143,
    "lgfx_esp32_s3_box": 144,
    "esp32-s3-box": 145,
    "lgfx_esp32_s3_box_lite": 146,
    "lite": 147,
    "lgfx_esp32_s3_box_v3": 148,
    "esp32-s3-box-3/3b": 149,
    "lgfx_wifiboy_pro": 150,
    "wifiboy": 151,
    "lgfx_wifiboy_mini": 152,
    "mini": 153,
    "lgfx_makerfabs_touchcamera": 154,
    "makerfabs": 155,
    "touch": 156,
    "with": 157,
    "camera": 158,
    "lgfx_makerfabs_makepython": 159,
    "makepython": 160,
    "lgfx_makerfabs_tft_touch_spi": 161,
    "tft": 162,
    "spi": 163,
    "lgfx_makerfabs_tft_touch_parallel16//": 164,
    "parallel": 165,
    "lgfx_wt32_sc01": 167,
    "seeed": 168,
    "wt32-sc01": 169,
    "lgfx_wio_terminal": 170,
    "wio": 171,
    "terminal": 172,
    "2_user_setting": 173,
    "<lovyangfx.hpp>": 174,
    "esp32": 175,
    "lovyangfx": 176,
    "///": 177,
    "lgfx_device": 178,
    "class": 179,
    "lgfx": 180,
    "public": 181,
    "/*": 182,
    "autodetect": 183,
    "devkit-c": 184,
    "ili9341": 185,
    "lgfx_devkitc_spi_ili9341": 186,
    "//*/": 187,
    "//lgfx": 188,
    "panel_gc9a01": 189,
    "_panel_instance;": 190,
    "panel_gdew0154m09": 191,
    "panel_hx8357b": 192,
    "panel_hx8357d": 193,
    "panel_ili9163": 194,
    "panel_ili9341": 195,
    "panel_ili9342": 196,
    "panel_ili9481": 197,
    "panel_ili9486": 198,
    "panel_ili9488": 199,
    "panel_it8951": 200,
    "panel_ra8875": 201,
    "panel_sh110x": 202,
    "sh1106": 203,
    "sh1107": 204,
    "panel_ssd1306": 205,
    "panel_ssd1327": 206,
    "panel_ssd1331": 207,
    "panel_ssd1351": 208,
    "ssd1351": 209,
    "ssd1357": 210,
    "panel_ssd1963": 211,
    "panel_st7735": 212,
    "panel_st7735s": 213,
    "panel_st7789": 214,
    "panel_st7796": 215,
    "bus_spi": 216,
    "_bus_instance;": 217,
    "bus_i2c": 218,
    "i2c": 219,
    "bus_parallel8": 220,
    "light_pwm": 222,
    "_light_instance;": 223,
    "touch_cst816s": 224,
    "_touch_instance;": 225,
    "touch_ft5x06": 226,
    "ft5206": 227,
    "ft5306": 228,
    "ft5406": 229,
    "ft6206": 230,
    "ft6236": 231,
    "ft6336": 232,
    "ft6436": 233,
    "touch_gsl1680e_800x480": 234,
    "gsl_1680e": 235,
    "1688e": 236,
    "2681b": 237,
    "2682b": 238,
    "touch_gsl1680f_800x480": 239,
    "touch_gsl1680f_480x272": 240,
    "touch_gslx680_320x320": 241,
    "touch_gt911": 242,
    "touch_stmpe610": 243,
    "touch_tt21xxx": 244,
    "tt21100": 245,
    "touch_xpt2046": 246,
    "lgfx(void)": 247,
    "auto": 248,
    "cfg": 249,
    "_bus_instance.config();": 250,
    "cfg.spi_host": 251,
    "vspi_host;": 252,
    "esp32-s2": 253,
    "c3": 254,
    "spi2_host": 255,
    "or": 256,
    "spi3_host": 257,
    "vspi_host": 258,
    "hspi_host": 259,
    "esp-idf": 260,
    "3_fonts": 261,
    "static": 262,
    "lcd;": 263,
    "drawgradation(void)": 264,
    "lcd.startwrite();": 265,
    "lcd.setaddrwindow(0": 266,
    "lcd.width()": 268,
    "lcd.height());": 269,
    "for": 270,
    "(int": 271,
    "y": 272,
    "0;": 273,
    "<": 274,
    "lcd.height();": 275,
    "++y)": 276,
    "x": 277,
    "lcd.width();": 278,
    "++x)": 279,
    "lcd.writecolor(lcd.color888(x>>1": 280,
    "(x": 281,
    "+": 282,
    "y)": 283,
    ">>": 284,
    "y>>1)": 286,
    "1);": 287,
    "lcd.endwrite();": 288,
    "setup(void)": 289,
    "lcd.init();": 290,
    "drawgradation();": 291,
    "print": 292,
    "drawstring": 293,
    "lcd.drawstring(": 294,
    "string!": 295,
    "10);": 296,
    "drawnumber": 297,
    "lcd.drawnumber(123": 298,
    "drawfloat": 300,
    "lcd.drawfloat(3.14": 301,
    "setcursor": 303,
    "lcd.setcursor(10": 304,
    "20);": 305,
    "lcd.print(": 306,
    "print!": 307,
    "printf": 308,
    "(c": 309,
    "123;": 310,
    "lcd.printf(": 311,
    "test": 312,
    "value);": 313,
    "println": 314,
    "print(": 315,
    "n": 316,
    "lcd.println(": 317,
    "setfont": 318,
    "tft_espi": 319,
    "settextfont": 320,
    "font0": 321,
    "font8": 322,
    "&fonts": 323,
    "lcd.setfont(&fonts": 324,
    "font4);": 325,
    "testfont4": 326,
    "(tft_espi": 330,
    "lcd.settextfont(2);": 331,
    "testfont2": 332,
    "settextcolor": 333,
    "lcd.settextcolor(0x00ffffu": 334,
    "0xff0000u);": 335,
    "cyantext": 336,
    "redback": 337,
    "fillrect": 338,
    "lcd.settextcolor(0xffff00u);": 339,
    "yellowtext": 340,
    "clearback": 341,
    "font6": 342,
    "font6);": 343,
    "apm.": 344,
    "-0369": 345,
    "font7": 346,
    "font7);": 347,
    ".": 348,
    "-147": 349,
    "font8);": 350,
    "-258": 351,
    "delay(3000);": 352,
    "ipa": 353,
    "fonts": 361,
    "5_images": 362,
    "extern": 363,
    "const": 364,
    "uint8_t": 365,
    "rgb888[];": 366,
    "bgr888[];": 367,
    "uint16_t": 368,
    "swap565[];": 369,
    "rgb565[];": 370,
    "rgb332[];": 371,
    "constexpr": 372,
    "image_width": 373,
    "33;": 374,
    "image_height": 375,
    "31;": 376,
    "//----------------------------------------------------------------------------": 377,
    "loop(void)": 378,
    "setwindow/setaddrwindow": 379,
    "writepixels/pushpixels": 380,
    "setwindow(": 381,
    "x0": 382,
    "y0": 383,
    "x1": 384,
    "y1": 385,
    "setaddrwindow(": 386,
    "w": 387,
    "h": 388,
    "setwindow": 389,
    "setaddrwindow": 390,
    "writepixels": 391,
    "*data": 392,
    "len": 393,
    "swap": 394,
    "startwrite": 395,
    "endwrite": 396,
    "pushpixels": 397,
    "(startwrite": 398,
    "adafruitgfx": 399,
    "startwrite/endwrite": 400,
    "setswapbytes": 401,
    "data": 402,
    "uint8_t*": 403,
    "8bit": 404,
    "rgb332": 405,
    "uint16_t*": 406,
    "16bit": 407,
    "rgb565": 408,
    "void*": 409,
    "24bit": 410,
    "rgb888": 411,
    "lcd": 412,
    "*/": 413,
    "lcd.clear(tft_darkgrey);": 414,
    "lcd.setcolordepth(16);": 415,
    "lcd.setswapbytes(true);": 416,
    "*": 417,
    "image_height;": 418,
    "image_height);": 419,
    "lcd.writepixels((uint16_t*)rgb565": 420,
    "len);": 421,
    "false": 423,
    "false);": 424,
    "lcd.setaddrwindow(-1": 425,
    "-1": 427,
    "lcd.writepixels((uint8_t*)rgb565": 429,
    "lcd.writepixels((uint8_t*)rgb332": 431,
    "1byte": 432,
    "setswapbytes(true)": 433,
    "true": 434,
    "lcd.setaddrwindow(40": 435,
    "lcd.writepixels((uint16_t*)swap565": 436,
    "attiny85": 437,
    "download": 438,
    "latest": 439,
    "library": 440,
    "here": 441,
    "//github.com/blynkkk/blynk-library/releases/latest": 442,
    "a": 443,
    "platform": 444,
    "ios": 445,
    "and": 446,
    "android": 447,
    "apps": 448,
    "to": 449,
    "control": 450,
    "arduino": 451,
    "raspberry": 452,
    "pi": 453,
    "the": 454,
    "likes": 455,
    "over": 456,
    "internet.": 457,
    "you": 458,
    "can": 459,
    "easily": 460,
    "build": 461,
    "graphic": 462,
    "interfaces": 463,
    "all": 464,
    "your": 465,
    "projects": 466,
    "by": 467,
    "simply": 468,
    "dragging": 469,
    "dropping": 470,
    "widgets.": 471,
    "downloads": 472,
    "docs": 473,
    "tutorials": 474,
    "http": 475,
    "//www.blynk.cc": 476,
    "sketch": 477,
    "generator": 478,
    "//examples.blynk.cc": 479,
    "community": 480,
    "//community.blynk.cc": 481,
    "follow": 482,
    "us": 483,
    "//www.fb.com/blynkapp": 484,
    "//twitter.com/blynk_app": 485,
    "licensed": 486,
    "under": 487,
    "mit": 488,
    "license": 489,
    "this": 490,
    "example": 491,
    "code": 492,
    "in": 493,
    "domain.": 494,
    "*************************************************************": 495,
    "=>": 496,
    "usb": 497,
    "howto": 498,
    "//tiny.cc/blynkusb": 499,
    "note": 500,
    "requires": 501,
    "attiny": 502,
    "support": 503,
    "package": 504,
    "//github.com/damellis/attiny": 505,
    "be": 506,
    "sure": 507,
    "check": 508,
    "ordinary": 509,
    "first!!!": 510,
    "+-": 511,
    "/-+": 512,
    "a0|6": 513,
    "(d": 514,
    "5)": 515,
    "pb5": 516,
    "1|": 517,
    "|8": 518,
    "vcc": 519,
    "a3|9": 520,
    "3)": 521,
    "pb3": 522,
    "2|": 523,
    "|7": 524,
    "pb2": 525,
    "2)": 526,
    "a1|7": 527,
    "a2|8": 528,
    "4)": 529,
    "pb4": 530,
    "3|": 531,
    "|6": 532,
    "pb1": 533,
    "1)": 534,
    "pwm1": 535,
    "gnd": 536,
    "4|": 537,
    "|5": 538,
    "pb0": 539,
    "0)": 540,
    "pwm0": 541,
    "+----+": 542,
    "<softwareserial.h>": 543,
    "softwareserial": 544,
    "debugserial(1": 545,
    "2);": 546,
    "rx": 547,
    "tx": 548,
    "swserial(3": 549,
    "4);": 550,
    "comment": 551,
    "out": 552,
    "disable": 553,
    "prints": 554,
    "save": 555,
    "space": 556,
    "debugserial": 557,
    "<blynksimplestream.h>": 558,
    "should": 559,
    "get": 560,
    "auth": 561,
    "token": 562,
    "app.": 563,
    "project": 564,
    "settings": 565,
    "(nut": 566,
    "icon).": 567,
    "yourauthtoken": 568,
    ";": 569,
    "//#include": 570,
    "<softwareservo.h>": 571,
    "//softwareservo": 572,
    "servo1;": 573,
    "debug": 574,
    "console": 575,
    "debugserial.begin(9600);": 576,
    "adafruit_feather_m0_wifi": 577,
    "shows": 578,
    "how": 579,
    "use": 580,
    "adafruit": 581,
    "feather": 582,
    "m0": 583,
    "wifi": 584,
    "connect": 585,
    "blynk.": 586,
    "wifi101": 587,
    "from": 588,
    "//librarymanager/all#wifi101": 589,
    "feel": 590,
    "free": 591,
    "apply": 592,
    "it": 593,
    "any": 594,
    "other": 595,
    "example.": 596,
    "s": 597,
    "simple!": 598,
    "<wifi101.h>": 599,
    "<blynksimplewifishield101.h>": 600,
    "credentials.": 601,
    "set": 602,
    "password": 603,
    "open": 604,
    "networks.": 605,
    "yournetworkname": 606,
    "yourpassword": 607,
    "wifi.setpins(8": 608,
    "pass);": 609,
    "also": 610,
    "specify": 611,
    "server": 612,
    "altcptemplate": 613,
    "spdx-filecopyrighttext": 614,
    "(c)": 615,
    "2023-2024": 616,
    "shawn": 617,
    "silverman": 618,
    "<shawn": 619,
    "pobox.com>": 620,
    "spdx-license-identifier": 621,
    "agpl-3.0-or-later": 622,
    "altcp": 623,
    "framework": 624,
    "creating": 625,
    "custom": 626,
    "connections.": 627,
    "defines": 628,
    "function": 629,
    "that": 630,
    "returns": 631,
    "tls": 632,
    "proxy": 633,
    "configuration.": 634,
    "prerequisites": 635,
    "enable": 636,
    "lwip_altcp": 637,
    "optionally": 638,
    "lwip_altcp_tls": 639,
    "lwip": 640,
    "options.": 641,
    "altcp_tls_adapter": 642,
    "functions": 643,
    "could": 644,
    "disabled": 645,
    "disabling": 646,
    "qnethernet_altcp_tls_adapter": 647,
    "option": 648,
    "(it": 649,
    "off": 650,
    "default).": 651,
    "(see": 652,
    "lwipopts.h": 653,
    "qnethernet_opts.h": 654,
    "files": 655,
    "options.)": 656,
    "big": 657,
    "caveat": 658,
    "will": 659,
    "only": 660,
    "do": 661,
    "if": 662,
    "there": 663,
    "an": 664,
    "available": 665,
    "implementation.": 666,
    "file": 667,
    "part": 668,
    "of": 669,
    "qnethernet": 670,
    "library.": 671,
    "<qnethernet.h>": 672,
    "#if": 673,
    "<lwip/altcp_tcp.h>": 674,
    "lwip_altcp_tls_mbedtls": 675,
    "<mbedtls.h>": 676,
    "#endif": 677,
    "<lwip/altcp_tls.h>": 678,
    "<lwip/apps/altcp_proxyconnect.h>": 679,
    "using": 680,
    "namespace": 681,
    "qindesign": 682,
    "network;": 683,
    "uint32_t": 684,
    "kdhcptimeout": 685,
    "000;": 687,
    "seconds": 688,
    "connection": 689,
    "information": 690,
    "host": 691,
    "www.example.com": 692,
    "khost[]{host};": 693,
    "krequest[]{": 694,
    "head": 695,
    "http/1.1": 696,
    "r": 697,
    "close": 698,
    "};": 699,
    "kport": 700,
    "80;": 701,
    "generally": 702,
    "uses": 703,
    "port": 704,
    "connections": 706,
    "bool": 707,
    "kuseproxy": 708,
    "false;": 709,
    "appwithlistenerstemplate": 710,
    "2021-2024": 711,
    "one": 712,
    "way": 713,
    "start": 714,
    "writing": 715,
    "network": 716,
    "application": 717,
    "listener": 718,
    "approach.": 719,
    "doesn": 720,
    "t": 721,
    "communication": 722,
    "but": 723,
    "configures": 724,
    "possible": 725,
    "places": 726,
    "hook": 727,
    "own": 728,
    "code.": 729,
    "not": 730,
    "everything": 731,
    "template": 732,
    "needs": 733,
    "included": 734,
    "application.": 735,
    "demonstrates": 736,
    "1.": 737,
    "ethernet": 738,
    "listeners": 739,
    "2.": 740,
    "3.": 741,
    "configuring": 742,
    "address": 743,
    "4.": 744,
    "properly": 745,
    "network.": 746,
    "***": 747,
    "includes": 748,
    "so": 749,
    "don": 750,
    "have": 751,
    "namespace-qualify": 752,
    "variables": 753,
    "classes.": 754,
    "--------------------------------------------------------------------------": 755,
    "configuration": 756,
    "dhcp": 757,
    "timeout": 758,
    "milliseconds.": 759,
    "zero": 760,
    "wait": 761,
    "instead": 762,
    "rely": 763,
    "on": 764,
    "inform": 765,
    "assignment.": 766,
    "link": 767,
    "arduino_ethernet": 768,
    "setup": 769,
    "widget": 770,
    "v2": 771,
    "pins": 772,
    "are": 775,
    "reserved": 776,
    "module.": 777,
    "them": 778,
    "directly!": 779,
    "warning": 780,
    "sd": 781,
    "card": 782,
    "may": 783,
    "need": 784,
    "setting": 785,
    "pin": 786,
    "high.": 787,
    "read": 788,
    "more": 789,
    "//www.arduino.cc/en/main/arduinoethernetshield": 790,
    "<spi.h>": 791,
    "<ethernet.h>": 792,
    "cloud": 793,
    "char*": 794,
    "unsigned": 795,
    "8080;": 796,
    "byte": 797,
    "mac[]": 798,
    "0xde": 799,
    "0xad": 800,
    "0xbe": 801,
    "0xef": 802,
    "0xfe": 803,
    "0xed": 804,
    "ethernetclient": 805,
    "client;": 806,
    "w5100_cs": 807,
    "sdcard_cs": 808,
    "connectnetwork()": 809,
    "serial.println(": 810,
    "connecting": 811,
    "ethernet...": 812,
    "pinmode(sdcard_cs": 813,
    "arduino_gsm": 814,
    "<gsm.h>": 815,
    "pinnumber": 816,
    "apn": 817,
    "gprs_apn": 818,
    "replace": 819,
    "gprs": 820,
    "gprs_login": 821,
    "login": 822,
    "gprs_password": 823,
    "gsmclient": 824,
    "gprs;": 825,
    "gsm": 826,
    "gsmaccess;": 827,
    "gsm...": 828,
    "status": 829,
    "after": 830,
    "starting": 831,
    "modem": 832,
    "gsm.begin()": 833,
    "attach": 834,
    "shield": 835,
    "while": 836,
    "(status": 837,
    "==": 838,
    "false)": 839,
    "arduino_mkr1000": 840,
    "mkr1000": 841,
    "<blynksimplemkr1000.h>": 842,
    "80);": 843,
    "arduino_mkr1010": 844,
    "mkr": 845,
    "wifinina": 847,
    "//librarymanager/all#wifinina": 848,
    "<wifinina.h>": 849,
    "<blynksimplewifinina.h>": 850,
    "arduino_serial_usb": 851,
    "spare": 852,
    "hardware": 853,
    "boards": 854,
    "(like": 855,
    "mega)": 856,
    "debugserial(2": 857,
    "3);": 858,
    "work": 859,
    "through": 860,
    "write": 861,
    "manually": 862,
    "blynk.begin(serial": 863,
    "auth);": 864,
    "arduino_softwareserial": 865,
    "swserial(2": 866,
    "swserial.begin(9600);": 867,
    "blynk.begin(swserial": 868,
    "arduino_wifi_shield": 869,
    "please": 870,
    "update": 871,
    "firmware": 872,
    "//www.arduino.cc/en/hacking/wifishieldfirmwareupgrading": 873,
    "<wifi.h>": 874,
    "<blynksimplewifi.h>": 875,
    "arduino_wifi_shield_101": 876,
    "arduino_yun": 878,
    "yun": 879,
    "bridge": 880,
    "<bridge.h>": 881,
    "<blynksimpleyun.h>": 882,
    "blynk.begin(auth);": 883,
    "100)": 884,
    "8080);": 885,
    "arduino_zero_m0_serial": 886,
    "social": 887,
    "networks": 888,
    "serialusb": 889,
    "serialusb.begin(9600);": 890,
    "arduino_org_uno_wifi": 891,
    "arduino.org": 892,
    "uno": 893,
    "//librarymanager/all#wifi_link": 894,
    "wifilink": 895,
    "1.0.0": 896,
    "(at": 897,
    "least).": 898,
    "<wifilink.h>": 899,
    "<blynksimplewifilink.h>": 900,
    "ballmaze": 901,
    "defined(": 902,
    "||": 903,
    "arduino_m5stack_core_esp32": 904,
    "arduino_m5stack_fire": 905,
    "button_a_pin": 906,
    "button_b_pin": 908,
    "std": 910,
    "draw_cycle": 911,
    "3;": 912,
    "float": 913,
    "zoom_min": 914,
    "2;": 915,
    "zoom_max": 916,
    "32;": 917,
    "#elif": 918,
    "arduino_m5stack_core2": 919,
    "defined": 920,
    "lgfx_m5stickc": 921,
    "arduino_m5stick_c": 922,
    "1;": 924,
    "1.4;": 925,
    "16;": 926,
    "arduino_odroid_esp32": 927,
    "arduino_t": 929,
    "(arduino_wio_terminal)": 930,
    "defined(wio_terminal)": 931,
    "0x0200|28": 932,
    "0x0200|27": 933,
    "blue_pill_stm32f103c": 934,
    "stm32duino": 935,
    "//github.com/rogerclarkmelbourne/arduino_stm32/wiki/installation": 936,
    "up": 937,
    "board": 939,
    "starts": 940,
    "allow": 941,
    "initialize": 942,
    "completely.": 943,
    "serial1": 944,
    "serial1.begin(9600);": 945,
    "broadcastchat": 946,
    "simple": 947,
    "chat": 948,
    "broadcasts": 949,
    "receives": 950,
    "text": 951,
    "messages": 952,
    "udp.": 953,
    "5190;": 954,
    "program": 955,
    "state": 956,
    "udp": 957,
    "port.": 958,
    "ethernetudp": 959,
    "udp;": 960,
    "main": 961,
    "forward": 962,
    "declarations": 963,
    "(not": 964,
    "really": 965,
    "needed": 966,
    "environment)": 967,
    "printprompt();": 968,
    "receivepacket();": 969,
    "sendline();": 970,
    "setup.": 971,
    "serial.begin(115200);": 972,
    "(!serial": 973,
    "&&": 974,
    "4000)": 975,
    "printf(": 976,
    "starting...": 977,
    "mac[6];": 978,
    "ethernet.macaddress(mac);": 979,
    "informative;": 980,
    "retrieves": 981,
    "sets": 982,
    "mac": 983,
    "02x": 984,
    "mac[0]": 985,
    "mac[1]": 986,
    "mac[2]": 987,
    "mac[3]": 988,
    "mac[4]": 989,
    "mac[5]);": 990,
    "ethernet.onlinkstate([](bool": 991,
    "state)": 992,
    "[ethernet]": 993,
    "});": 994,
    "dhcp...": 995,
    "(!ethernet.begin())": 996,
    "failed": 997,
    "return;": 998,
    "(!ethernet.waitforlocalip(kdhcptimeout))": 999,
    "cc3000": 1000,
    "breakout": 1001,
    "adafruit_cc3000_library": 1002,
    "//github.com/adafruit/adafruit_cc3000_library": 1003,
    "version": 1004,
    "1.14": 1005,
    "later": 1006,
    "preferred.": 1007,
    "definitions": 1008,
    "according": 1009,
    "change": 1010,
    "run": 1011,
    "these": 1012,
    "interrupt": 1013,
    "adafruit_cc3000_irq": 1015,
    "adafruit_cc3000_vbat": 1016,
    "adafruit_cc3000_cs": 1018,
    "<adafruit_cc3000.h>": 1019,
    "<blynksimplecc3000.h>": 1020,
    "clocksample": 1021,
    "lgfx_use_v1": 1022,
    "lgfx_sprite": 1023,
    "canvas(&lcd);": 1024,
    "clockbase(&canvas);": 1025,
    "needle1(&canvas);": 1026,
    "shadow1(&canvas);": 1027,
    "needle2(&canvas);": 1028,
    "shadow2(&canvas);": 1029,
    "uint64_t": 1030,
    "oneday": 1031,
    "86400000;": 1032,
    "1000msec": 1033,
    "60sec": 1034,
    "60min": 1035,
    "24hour": 1036,
    "count": 1038,
    "rand()": 1039,
    "oneday;": 1040,
    "int32_t": 1041,
    "width": 1042,
    "239;": 1043,
    "halfwidth": 1044,
    "transpalette": 1045,
    "zoom;": 1046,
    "#ifdef": 1047,
    "min": 1048,
    "#undef": 1049,
    "zoom": 1050,
    "(float)(std": 1051,
    "min(lcd.width()": 1052,
    "lcd.height()))": 1053,
    "width;": 1054,
    "lcd.setpivot(lcd.width()": 1055,
    "lcd.height()": 1056,
    "canvas.setcolordepth(lgfx": 1057,
    "palette_4bit);": 1058,
    "clockbase.setcolordepth(lgfx": 1059,
    "needle1.setcolordepth(lgfx": 1060,
    "shadow1.setcolordepth(lgfx": 1061,
    "needle2.setcolordepth(lgfx": 1062,
    "shadow2.setcolordepth(lgfx": 1063,
    "(0": 1064,
    "(255": 1065,
    "255)": 1067,
    "canvas.createsprite(width": 1069,
    "width);": 1070,
    "clockbase.createsprite(width": 1071,
    "needle1.createsprite(9": 1072,
    "119);": 1073,
    "shadow1.createsprite(9": 1074,
    "needle2.createsprite(3": 1075,
    "shadow2.createsprite(3": 1076,
    "canvas.fillscreen(transpalette);": 1077,
    "(create": 1078,
    "clockbase.fillscreen(transpalette);": 1079,
    "needle1.fillscreen(transpalette);": 1080,
    "shadow1.fillscreen(transpalette);": 1081,
    "clockbase.settextfont(4);": 1082,
    "clockbase.settextdatum(lgfx": 1083,
    "middle_center);": 1084,
    "clockbase.fillcircle(halfwidth": 1085,
    "6);": 1086,
    "clockbase.drawcircle(halfwidth": 1087,
    "-": 1088,
    "15);": 1089,
    "<=": 1090,
    "60;": 1091,
    "++i)": 1092,
    "rad": 1093,
    "0.0174532925;": 1094,
    "cosy": 1095,
    "cos(rad)": 1096,
    "collisioncircles": 1097,
    "_sprites[2];": 1098,
    "struct": 1099,
    "ball_info_t": 1100,
    "x;": 1101,
    "y;": 1102,
    "dx;": 1103,
    "dy;": 1104,
    "r;": 1105,
    "m;": 1106,
    "color;": 1107,
    "shiftsize": 1108,
    "8;": 1109,
    "ball_max": 1110,
    "256;": 1111,
    "_balls[2][ball_max];": 1112,
    "_ball_count": 1113,
    "_fps": 1114,
    "ball_count": 1115,
    "sec": 1116,
    "psec;": 1117,
    "fps": 1118,
    "frame_count": 1119,
    "_width;": 1120,
    "_height;": 1121,
    "volatile": 1122,
    "_is_running;": 1123,
    "_draw_count;": 1124,
    "_loop_count;": 1125,
    "diffdraw(lgfx_sprite*": 1126,
    "sp0": 1127,
    "lgfx_sprite*": 1128,
    "sp1)": 1129,
    "union": 1130,
    "uint32_t*": 1131,
    "s32;": 1132,
    "s;": 1133,
    "p32;": 1134,
    "p;": 1135,
    "s32": 1136,
    "(std": 1137,
    "uint32_t*)sp0->getbuffer();": 1138,
    "p32": 1139,
    "uint32_t*)sp1->getbuffer();": 1140,
    "sp0->width();": 1141,
    "height": 1142,
    "sp0->height();": 1143,
    "w32": 1144,
    "(width+3)": 1145,
    "x32": 1146,
    "(s32[x32]": 1147,
    "p32[x32]": 1148,
    "++x32": 1149,
    "w32);": 1150,
    "(x32": 1151,
    "w32)": 1152,
    "break;": 1153,
    "<<": 1154,
    "(s[xs]": 1155,
    "p[xs])": 1156,
    "++xs;": 1157,
    "(++x32": 1158,
    "s32[x32]": 1159,
    "!=": 1160,
    "p32[x32]);": 1161,
    "xe": 1162,
    "(xe": 1163,
    ">=": 1164,
    "width)": 1165,
    "create": 1166,
    "/**": 1167,
    "syntax": 1168,
    "firestore": 1169,
    "collectiongroups": 1170,
    "indexes": 1171,
    "create(<asyncclient>": 1172,
    "<firestore": 1173,
    "parent>": 1174,
    "<collectionid>": 1175,
    "<index>": 1176,
    "<asyncresultcallback>": 1177,
    "<uid>);": 1178,
    "<asyncclient>": 1179,
    "async": 1180,
    "client.": 1181,
    "parent": 1182,
    "object": 1183,
    "id": 1184,
    "database": 1185,
    "its": 1186,
    "constructor.": 1187,
    "collection": 1188,
    "id.": 1189,
    "collectiongroupsindex": 1190,
    "index": 1191,
    "object.": 1192,
    "result": 1193,
    "callback": 1194,
    "(asyncresultcallback).": 1195,
    "<uid>": 1196,
    "user": 1197,
    "specified": 1198,
    "uid": 1199,
    "(optional).": 1200,
    "firebase": 1201,
    "name": 1202,
    "without": 1203,
    "firebaseio.com.": 1204,
    "(default)": 1205,
    "empty": 1206,
    "complete": 1207,
    "usage": 1208,
    "guidelines": 1209,
    "visit": 1210,
    "//github.com/mobizt/firebaseclient": 1211,
    "<arduino.h>": 1212,
    "defined(esp32)": 1213,
    "defined(arduino_raspberry_pi_pico_w)": 1214,
    "defined(arduino_giga)": 1215,
    "defined(arduino_opta)": 1216,
    "defined(esp8266)": 1217,
    "__has_include(<wifinina.h>)": 1218,
    "defined(arduino_nano_rp2040_connect)": 1219,
    "__has_include(<wifi101.h>)": 1220,
    "__has_include(<wifis3.h>)": 1221,
    "defined(arduino_unowifir4)": 1222,
    "<wifis3.h>": 1223,
    "__has_include(<wific3.h>)": 1224,
    "defined(arduino_portenta_c33)": 1225,
    "<wific3.h>": 1226,
    "__has_include(<wifi.h>)": 1227,
    "<firebaseclient.h>": 1228,
    "wifi_ssid": 1229,
    "wifi_ap": 1230,
    "wifi_password": 1231,
    "api": 1232,
    "key": 1233,
    "obtained": 1234,
    ">": 1235,
    "overview": 1236,
    "settings.": 1237,
    "api_key": 1238,
    "web_api_key": 1239,
    "taken": 1240,
    "service": 1241,
    "account": 1242,
    "json": 1243,
    "file.": 1244,
    "delete": 1245,
    "storage": 1246,
    "deleteobject(<asyncclient>": 1247,
    "<firebasestorage": 1248,
    "firebasestorage": 1249,
    "bucket": 1250,
    "bucketid": 1251,
    "delete.": 1252,
    "email": 1253,
    "already": 1254,
    "registerd": 1255,
    "added": 1256,
    "project.": 1257,
    "user_email": 1258,
    "user_password": 1259,
    "e.g": 1260,
    "bucket-name.appspot.com": 1261,
    "storage_bucket_id": 1262,
    "asynccb(asyncresult": 1263,
    "&aresult);": 1264,
    "printresult(asyncresult": 1265,
    "defaultnetwork": 1266,
    "digistump_digispark": 1267,
    "issue": 1268,
    "linux": 1269,
    "//github.com/digistump/digistumparduino/issues/16": 1270,
    "minimize": 1271,
    "size": 1272,
    "non-pro": 1273,
    "!defined(arduino_avr_digisparkpro)": 1274,
    "blynk_no_info": 1275,
    "blynk_no_builtin": 1276,
    "<digicdc.h>": 1277,
    "serialusb.begin();": 1278,
    "blynk.begin(serialusb": 1279,
    "digistump_oak": 1280,
    "digistump": 1281,
    "oak": 1282,
    "select": 1283,
    "right": 1284,
    "type": 1285,
    "tools": 1286,
    "->": 1287,
    "menu!": 1288,
    "has": 1289,
    "configured": 1290,
    "blynk.config(auth);": 1291,
    "fileconfig": 1292,
    "fileconfig(<file_name>": 1293,
    "<file_callback>);": 1294,
    "<file_name>": 1295,
    "filename": 1296,
    "path": 1297,
    "used.": 1298,
    "<file_callback>": 1299,
    "provides": 1300,
    "operation.": 1301,
    "file_callback": 1302,
    "parameters": 1303,
    "reference": 1304,
    "returned": 1305,
    "operation": 1306,
    "file_operating_mode.": 1307,
    "file_operating_mode": 1308,
    "file_mode_open_read": 1309,
    "file_mode_open_write": 1310,
    "file_mode_open_append": 1311,
    "file_mode_open_remove.": 1312,
    "source": 1313,
    "(input)": 1314,
    "target": 1315,
    "(output)": 1316,
    "used": 1317,
    "upload": 1318,
    "download.": 1319,
    "download(<asyncclient>": 1320,
    "<file_config_data>": 1321,
    "and/or": 1322,
    "access": 1323,
    "filesystem": 1324,
    "(file_config_data)": 1325,
    "which": 1326,
    "priviledge": 1327,
    "non-authentication": 1328,
    "mode": 1329,
    "(noauth).": 1330,
    "drawlinethickness": 1331,
    "lgfx_autodetect": 1332,
    "tft;": 1333,
    "some": 1334,
    "those": 1335,
    "features": 1336,
    "lot": 1337,
    "maths": 1338,
    "expect": 1339,
    "ftl": 1340,
    "performances": 1341,
    "-)": 1342,
    "antialiased": 1343,
    "thick": 1344,
    "lines": 1345,
    "filled": 1346,
    "plain": 1347,
    "color": 1348,
    "gradient": 1349,
    "circles": 1350,
    "rectangular": 1351,
    "fill": 1352,
    "linear": 1353,
    "radial": 1354,
    "methods": 1355,
    "rgbcolor": 1356,
    "rgb888_t": 1357,
    "rgb565_t": 1358,
    "etc": 1359,
    "draw": 1360,
    "thick+smooth": 1361,
    "drawwideline(int32_t": 1362,
    "color)": 1363,
    "(gradient": 1364,
    "fill)": 1365,
    "colors_t": 1366,
    "gradient)": 1367,
    "wedge": 1368,
    "line": 1369,
    "drawwedgeline(int32_t": 1370,
    "thick0": 1371,
    "thick1": 1372,
    "smooth": 1373,
    "circle": 1374,
    "single": 1375,
    "(redundant": 1376,
    "fillsmoothcircle()": 1377,
    "kept": 1378,
    "benchmark)": 1379,
    "drawspot(int32_t": 1380,
    "radius": 1381,
    "fg_color)": 1382,
    "like": 1383,
    "epd": 1384,
    "libraries": 1385,
    "before": 1386,
    "lovyangfx.hpp.": 1387,
    "<m5epd.h>": 1388,
    "<m5coreink.h>": 1389,
    "gfx;": 1390,
    "sp(&gfx);": 1391,
    "200;": 1392,
    "m5.begin();": 1393,
    "gfx.init();": 1394,
    "gfx.setrotation(0);": 1395,
    "gfx.width();": 1397,
    "gfx.height();": 1398,
    "gfx.setbrightness(128);": 1399,
    "epd_quality": 1400,
    "gfx.setepdmode(epd_mode_t": 1401,
    "epd_fastest);": 1402,
    "epd_fast);": 1403,
    "epd_text);": 1404,
    "epd_quality);": 1405,
    "(it8951)": 1406,
    "epd_fastest": 1407,
    "du4": 1408,
    "120msec": 1409,
    "epd_fast": 1410,
    "du": 1411,
    "260msec": 1412,
    "epd_text": 1413,
    "gl16": 1414,
    "450msec": 1415,
    "gc16": 1416,
    "r1": 1417,
    "g2": 1418,
    "b1": 1419,
    "rectwidth": 1420,
    "min(w": 1421,
    "h)": 1422,
    "gfx.filltriangle(": 1423,
    "tft_red);": 1424,
    "gfx.fillcircle(w/2": 1425,
    "h/2": 1426,
    "tft_green);": 1427,
    "gfx.fillrect((w-rectwidth)/2": 1428,
    "(h-rectwidth)/2": 1429,
    "tft_blue);": 1430,
    "endwrite()": 1431,
    "display()": 1432,
    "gfx.startwrite();": 1433,
    "20;": 1434,
    "gfx.drawline(i": 1435,
    "esp32deepsleepdisplay": 1436,
    "<driver/rtc_io.h>": 1437,
    "rtc_data_attr": 1438,
    "bootcount": 1439,
    "deepsleep": 1440,
    "switch(esp_sleep_get_wakeup_cause())": 1441,
    "case": 1442,
    "esp_sleep_wakeup_ext0": 1443,
    "esp_sleep_wakeup_ext1": 1444,
    "esp_sleep_wakeup_timer": 1445,
    "esp_sleep_wakeup_touchpad": 1446,
    "esp_sleep_wakeup_ulp": 1447,
    "lcd.init_without_reset();": 1448,
    "deep": 1449,
    "sleep": 1450,
    "init_without_reset": 1451,
    "default": 1452,
    "init": 1453,
    "lcd.clear(tft_white);": 1454,
    "lcd.clear(tft_black);": 1455,
    "lcd.setcolordepth(24);": 1456,
    "sp(&lcd);": 1457,
    "sp.createsprite(128": 1458,
    "128);": 1459,
    "sp.createpalette();": 1460,
    "128;": 1461,
    "y++)": 1462,
    "x++)": 1463,
    "sp.writepixel(x": 1464,
    "sp.color888(x": 1465,
    "1));": 1466,
    "+=": 1467,
    "128)": 1468,
    "sp.pushsprite(x": 1469,
    "y);": 1470,
    "++bootcount;": 1471,
    "lcd.setcursor(bootcount*6": 1472,
    "bootcount*8);": 1473,
    "lcd.settextcolor(tft_white": 1474,
    "tft_black);": 1475,
    "string(bootcount));": 1476,
    "lcd.settextcolor(tft_black": 1477,
    "tft_white);": 1478,
    "lcd.powersaveon();": 1479,
    "lcd.waitdisplay();": 1480,
    "pin_rst": 1481,
    "(gpio_num_t)lcd.getpanel()->config().pin_rst;": 1482,
    "((uint32_t)pin_rst": 1483,
    "gpio_num_max)": 1484,
    "rst": 1485,
    "rtc_gpio": 1486,
    "high": 1487,
    "rtc_gpio_set_level(pin_rst": 1488,
    "rtc_gpio_set_direction(pin_rst": 1489,
    "rtc_gpio_mode_output_only);": 1490,
    "rtc_gpio_init(pin_rst);": 1491,
    "esp_sleep_pd_config(esp_pd_domain_rtc_periph": 1492,
    "esp_pd_option_on);": 1493,
    "light": 1494,
    "lcd.getpanel()->getlight();": 1495,
    "(light)": 1496,
    "pin_bl": 1497,
    "(gpio_num_t)((lgfx": 1498,
    "light_pwm*)light)->config().pin_bl;": 1499,
    "((uint32_t)pin_bl": 1500,
    "backlight": 1501,
    "rtc_gpio_set_level(pin_bl": 1502,
    "rtc_gpio_set_direction(pin_bl": 1503,
    "rtc_gpio_init(pin_bl);": 1504,
    "esp_logw(": 1505,
    "esp_sleep_enable_timer_wakeup(1": 1506,
    "micro": 1507,
    "esp_deep_sleep_start();": 1508,
    "esp32_wifi": 1509,
    "runs": 1510,
    "directly": 1511,
    "chip.": 1512,
    "//github.com/espressif/arduino-esp32": 1513,
    "module": 1514,
    "<wificlient.h>": 1515,
    "<blynksimpleesp32.h>": 1516,
    "esp32_wifi_ssl": 1517,
    "<wificlientsecure.h>": 1518,
    "<blynksimpleesp32_ssl.h>": 1519,
    "esp8266": 1520,
    "yourwifi": 1521,
    "wificlient": 1522,
    "serial.println(ssid);": 1523,
    "wifi.begin(ssid": 1524,
    "(wifi.status()": 1525,
    "wl_connected)": 1526,
    "delay(500);": 1527,
    "serial.println();": 1528,
    "connected": 1529,
    "httprequest(const": 1530,
    "string&": 1531,
    "method": 1532,
    "request": 1533,
    "response)": 1534,
    "serial.print(f(": 1535,
    "));": 1536,
    "serial.print(host);": 1537,
    "serial.print(port);": 1538,
    "...": 1539,
    "(client.connect(host": 1540,
    "port))": 1541,
    "ok": 1542,
    "else": 1543,
    "return": 1544,
    "esp8266_shield": 1545,
    "(with": 1546,
    "at": 1547,
    "commands)": 1548,
    "warning!": 1549,
    "very": 1550,
    "tricky": 1551,
    "working.": 1552,
    "article": 1553,
    "//help.blynk.cc/hardware-and-libraries/arduino/esp8266-with-at-firmware": 1554,
    "<esp8266_lib.h>": 1555,
    "<blynksimpleshieldesp8266.h>": 1556,
    "esp8266_standalone": 1557,
    "//github.com/esp8266/arduino": 1558,
    "esp8266_standalone_manual_ip": 1559,
    "different": 1560,
    "each": 1561,
    "device": 1562,
    "lan": 1563,
    "arduino_mac[]": 1564,
    "0xba": 1565,
    "ipaddress": 1566,
    "device_ip": 1567,
    "(192": 1568,
    "esp8266_standalone_ssl": 1569,
    "<blynksimpleesp8266_ssl.h>": 1570,
    "esp8266_standalone_smartconfig": 1571,
    "smartconfig": 1572,
    "might": 1573,
    "environment.": 1574,
    "try": 1575,
    "examples": 1576,
    "sketch!": 1577,
    "wifi.mode(wifi_sta);": 1578,
    "cnt": 1579,
    "(cnt++": 1580,
    "10)": 1581,
    "energia_serial_usb": 1582,
    "energia": 1583,
    "ide": 1584,
    "//energia.nu/download/": 1585,
    "energia_wifi": 1586,
    "tested": 1587,
    "ti": 1588,
    "msp430f5529": 1589,
    "cc3100": 1590,
    "cc3200-launchxl": 1591,
    "redbearlab": 1592,
    "cc3200": 1593,
    "w/": 1594,
    "<blynksimpleenergiawifi.h>": 1595,
    "fft_01": 1596,
    "fft": 1597,
    "copyright": 1598,
    "enrique": 1600,
    "condes": 1601,
    "bim": 1603,
    "overbohm": 1604,
    "(template": 1605,
    "speed": 1606,
    "improvements)": 1607,
    "software": 1608,
    "redistribute": 1609,
    "modify": 1610,
    "terms": 1611,
    "gnu": 1612,
    "general": 1613,
    "as": 1614,
    "published": 1615,
    "foundation": 1616,
    "either": 1617,
    "option)": 1618,
    "version.": 1619,
    "distributed": 1620,
    "hope": 1621,
    "useful": 1622,
    "warranty;": 1623,
    "even": 1624,
    "implied": 1625,
    "warranty": 1626,
    "merchantability": 1627,
    "fitness": 1628,
    "particular": 1629,
    "purpose.": 1630,
    "see": 1631,
    "details.": 1632,
    "received": 1633,
    "copy": 1634,
    "along": 1635,
    "program.": 1636,
    "<http": 1637,
    "//www.gnu.org/licenses/>.": 1638,
    "simulates": 1639,
    "sampling": 1640,
    "sinusoidal": 1641,
    "hz": 1642,
    "signal": 1643,
    "amplitude": 1644,
    "sampled": 1645,
    "hz.": 1647,
    "samples": 1648,
    "stored": 1649,
    "inside": 1650,
    "vreal": 1651,
    "array.": 1652,
    "windowed": 1653,
    "hamming": 1654,
    "function.": 1655,
    "computed": 1656,
    "samples.": 1657,
    "then": 1658,
    "magnitudes": 1659,
    "frequencies": 1660,
    "compose": 1661,
    "calculated.": 1662,
    "finally": 1663,
    "frequency": 1664,
    "highest": 1665,
    "peak": 1666,
    "being": 1667,
    "present": 1668,
    "fft_02": 1669,
    "compute": 1670,
    "several": 1671,
    "signals": 1672,
    "range": 1673,
    "frequencies.": 1674,
    "exponent": 1675,
    "calculated": 1676,
    "once": 1677,
    "execution": 1678,
    "since": 1679,
    "constant.": 1680,
    "saves": 1681,
    "resources": 1682,
    "during": 1683,
    "reduces": 1684,
    "compiled": 1685,
    "size.": 1686,
    "time": 1687,
    "computing": 1688,
    "taking.": 1689,
    "arduinofft.h": 1690,
    "values": 1691,
    "changed": 1692,
    "order": 1693,
    "evaluate": 1694,
    "64;": 1695,
    "40;": 1696,
    "4;": 1697,
    "fft_03": 1698,
    "adc.": 1699,
    "cond": 1701,
    "ragnar": 1702,
    "ran": 1703,
    "yen": 1704,
    "homb": 1705,
    "channel": 1706,
    "a0": 1707,
    "//this": 1708,
    "must": 1709,
    "always": 1710,
    "power": 1711,
    "samplingfrequency": 1712,
    "100;": 1713,
    "//hz": 1714,
    "less": 1715,
    "than": 1716,
    "due": 1718,
    "adc": 1719,
    "sampling_period_us;": 1720,
    "long": 1721,
    "microseconds;": 1722,
    "input": 1723,
    "output": 1724,
    "vectors": 1725,
    "fft_04": 1726,
    "spectrum": 1727,
    "printed.": 1728,
    "plotter": 1729,
    "fft_05": 1730,
    "fft_speedup": 1731,
    "speedup": 1732,
    "arduinofft": 1733,
    "based": 1734,
    "examples/fft_03/fft_03.ino": 1735,
    "two": 1736,
    "options": 1737,
    "reciprocal": 1738,
    "multiplication": 1739,
    "division": 1740,
    "speedups": 1741,
    "decrease": 1742,
    "precision": 1743,
    "//#define": 1744,
    "fft_speed_over_precision": 1745,
    "low-precision": 1746,
    "square": 1747,
    "root": 1748,
    "approximation": 1749,
    "regular": 1750,
    "sqrt()": 1751,
    "call": 1752,
    "specific": 1753,
    "cases": 1754,
    "significantly": 1755,
    "faster.": 1756,
    "works": 1757,
    "arduinofft<float>.": 1758,
    "fishino": 1759,
    "//fishino.it/en/download/": 1760,
    "<fishino.h>": 1761,
    "<blynksimplefishino.h>": 1762,
    "fixedwidthserver": 1763,
    "2021-2023": 1764,
    "serve": 1765,
    "protocol": 1766,
    "having": 1767,
    "continuous": 1768,
    "stream": 1769,
    "fixed-size": 1770,
    "multiple": 1771,
    "clients.": 1772,
    "c++": 1773,
    "<algorithm>": 1774,
    "<cstdio>": 1775,
    "<utility>": 1776,
    "<vector>": 1777,
    "kserverport": 1778,
    "5000;": 1779,
    "kmessagesize": 1780,
    "10;": 1781,
    "pretend": 1782,
    "specifies": 1783,
    "bytes": 1784,
    "types": 1785,
    "keeps": 1786,
    "track": 1787,
    "clientstate": 1788,
    "clientstate(ethernetclient": 1789,
    "client)": 1790,
    "client(std": 1791,
    "move(client))": 1792,
    "{}": 1793,
    "bufsize": 1794,
    "many": 1795,
    "been": 1796,
    "buf[kmessagesize];": 1797,
    "closed": 1798,
    "what": 1799,
    "where": 1800,
    "belong": 1801,
    "whom.": 1802,
    "vector<clientstate>": 1803,
    "clients;": 1804,
    "server.": 1805,
    "ethernetserver": 1806,
    "server{kserverport};": 1807,
    "unlike": 1808,
    "(which": 1809,
    "still": 1810,
    "flashmemsprite": 1811,
    "image320x240x16.h": 1812,
    "image480x320x8.h": 1813,
    "image640x480x4.h": 1814,
    "image1280x960x1.h": 1815,
    "sprite;": 1816,
    "(lcd.width()": 1817,
    "lcd.height())": 1818,
    "lcd.setrotation(lcd.getrotation()": 1819,
    "setbuffer": 1820,
    "sprite.setbuffer(const_cast<std": 1821,
    "uint8_t*>(image320x240x16)": 1822,
    "16);": 1825,
    "uint8_t*>(image480x320x8)": 1826,
    "8);": 1828,
    "uint8_t*>(image640x480x4)": 1829,
    "uint8_t*>(image1280x960x1)": 1831,
    "sprite.createpalette();": 1834,
    "const(": 1835,
    "const_cast": 1836,
    "ok)": 1837,
    "sprite.pushsprite": 1838,
    "sprite.pushrotated": 1839,
    "sprite.pushrotatezoom": 1840,
    "sprite.readrect": 1841,
    "ng)": 1842,
    "sprite.drawpixel": 1843,
    "sprite.fillrect": 1844,
    "sprite.scroll": 1845,
    "count;": 1846,
    "(++count": 1847,
    "360)": 1848,
    "(((float)count)": 1849,
    "200)": 1850,
    "0.1;": 1851,
    "sprite.pushrotatezoom(&lcd": 1852,
    "zoom);": 1853,
    "get(<asyncclient>": 1854,
    "<indexid>": 1855,
    "index.": 1856,
    "goto": 1857,
    "getmetadata": 1858,
    "getmetadata(<asyncclient>": 1859,
    "metadata.": 1860,
    "getreadings": 1861,
    "moving": 1862,
    "average": 1863,
    "//github.com/jchristensen/movingavg": 1864,
    "jack": 1865,
    "christensen": 1866,
    "gpl": 1867,
    "v3.0": 1868,
    "//www.gnu.org/licenses/gpl.html": 1869,
    "demonstrate": 1870,
    "retrieving": 1871,
    "readings": 1872,
    "movingavg": 1873,
    "<movingavg.h>": 1874,
    "foo(6);": 1875,
    "foo.begin();": 1876,
    "foo.reading(1);": 1877,
    "generate": 1878,
    "sample": 1879,
    "foo.reading(2);": 1880,
    "foo.reading(3);": 1881,
    "foo.reading(4);": 1882,
    "//foo.reading(5);": 1883,
    "//foo.reading(6);": 1884,
    "*readings": 1885,
    "foo.getreadings();": 1886,
    "pointer": 1887,
    "foo.getcount();": 1888,
    "number": 1889,
    "serial.print(n);": 1890,
    "i=0;": 1891,
    "i<n;": 1892,
    "i++)": 1893,
    "serial.println(*readings++);": 1894,
    "graph": 1895,
    "line_count": 1896,
    "vector<int>": 1897,
    "points[line_count];": 1898,
    "colors[]": 1899,
    "tft_red": 1900,
    "tft_green": 1901,
    "tft_blue": 1902,
    "tft_cyan": 1903,
    "tft_magenta": 1904,
    "tft_yellow": 1905,
    "xoffset": 1906,
    "yoffset": 1907,
    "point_count;": 1908,
    "getbasecolor(int": 1909,
    "((x": 1910,
    "y)&3": 1911,
    "((x-xoffset)&31": 1912,
    "y&31)": 1913,
    "tft_black": 1914,
    "((!y": 1915,
    "xoffset)": 1916,
    "tft_white": 1917,
    "tft_darkgreen));": 1918,
    "point_count": 1919,
    "line_count;": 1920,
    "points[i].resize(point_count);": 1921,
    "lcd.writecolor(getbasecolor(x": 1922,
    "yoffset)": 1923,
    "prev_sec;": 1924,
    "fps;": 1925,
    "++fps;": 1926,
    "1000;": 1927,
    "(prev_sec": 1928,
    "sec)": 1929,
    "prev_sec": 1930,
    "sec;": 1931,
    "lcd.setcursor(0": 1932,
    "0);": 1933,
    "03d": 1934,
    "fps);": 1935,
    "points[i][count": 1936,
    "point_count]": 1937,
    "(sinf((float)count": 1938,
    "(10": 1939,
    "i))+sinf((float)count": 1940,
    "(13": 1941,
    "i)))": 1942,
    "(lcd.height()": 1943,
    "++count;": 1944,
    "index1": 1945,
    "iperfserver": 1946,
    "2022-2024": 1947,
    "implements": 1948,
    "iperf": 1949,
    "tcp": 1950,
    "traffic.": 1951,
    "command": 1952,
    "-c": 1953,
    "<ip": 1954,
    "address>": 1955,
    "-i": 1956,
    "-l": 1957,
    "supported": 1959,
    "(compatibility)": 1960,
    "-r": 1961,
    "(tradeoff)": 1962,
    "-d": 1963,
    "(dualtest)": 1964,
    "specifying": 1965,
    "(len)": 1966,
    "appears": 1967,
    "give": 1968,
    "better": 1969,
    "results": 1970,
    "when": 1971,
    "(the": 1972,
    "teensy)": 1973,
    "sending": 1974,
    "traffic": 1975,
    "back": 1976,
    "client": 1977,
    "tradeoff": 1978,
    "option.": 1979,
    "stack": 1980,
    "achieve": 1981,
    "about": 1982,
    "94.9": 1983,
    "mbps": 1984,
    "both": 1985,
    "directions.": 1986,
    "supported.": 1987,
    "was": 1988,
    "inspired": 1989,
    "lwiperf": 1990,
    "simon": 1991,
    "goldschmidt": 1992,
    "//git.savannah.nongnu.org/cgit/lwip.git/tree/src": 1993,
    "h=stable-2_1_3_release": 1994,
    "references": 1995,
    "dan": 1996,
    "drown": 1997,
    "experiments": 1998,
    "(june": 1999,
    "2020)": 2001,
    "[teensy": 2002,
    "4.1": 2003,
    "ethernet](https": 2004,
    "//blog.dan.drown.org/teensy-4-1-ethernet/)": 2005,
    "<cstdint>": 2006,
    "<cstring>": 2007,
    "<iterator>": 2008,
    "<lwip/opt.h>": 2009,
    "-------------------------------------------------------------------": 2010,
    "intel_edison_wifi": 2011,
    "intel": 2012,
    "edison": 2013,
    "(wifi).": 2014,
    "<blynksimpleinteledisonwifi.h>": 2015,
    "commands": 2016,
    "server_ip": 2017,
    "port);": 2018,
    "lengthwidthserver": 2019,
    "clients": 2020,
    "message": 2021,
    "one-byte": 2022,
    "length": 2023,
    "field.": 2024,
    "similar": 2025,
    "indicates": 2026,
    "message.": 2027,
    "states": 2028,
    "parsing": 2029,
    "position": 2030,
    "arbitrary.": 2031,
    "we": 2032,
    "enum": 2033,
    "messageparsestate": 2034,
    "kstart": 2035,
    "kvalue": 2036,
    "reading": 2037,
    "reset();": 2038,
    "parsestate;": 2039,
    "messagesize;": 2040,
    "current": 2041,
    "bufsize;": 2042,
    "buf[255];": 2043,
    "linkitone": 2044,
    "<lwifi.h>": 2045,
    "<lwificlient.h>": 2046,
    "<blynksimplelinkitone.h>": 2047,
    "choose": 2048,
    "wifi_sec": 2049,
    "lwifi_open": 2050,
    "lwifi_wpa": 2051,
    "lwifi_wep": 2052,
    "lwifi_wpa;": 2053,
    "wifi_sec);": 2054,
    "linkwatcher": 2055,
    "watches": 2057,
    "listener.": 2058,
    "address.": 2059,
    "listen": 2060,
    "changes": 2061,
    "(state)": 2062,
    "duplex": 2063,
    "crossover": 2064,
    "ethernet.linkspeed()": 2065,
    "ethernet.linkisfullduplex()": 2066,
    "full": 2067,
    "half": 2068,
    "ethernet.linkiscrossover()": 2069,
    "just": 2070,
    "want": 2071,
    "watch": 2072,
    "ethernet.setdhcpenabled(false);": 2073,
    "error": 2074,
    "loop.": 2075,
    "list": 2076,
    "list(<asyncclient>": 2077,
    "<collectionid>);": 2078,
    "response": 2079,
    "payload": 2080,
    "task": 2081,
    "complete.": 2082,
    "accounts": 2083,
    "tab": 2084,
    "click": 2085,
    "new": 2086,
    "private": 2087,
    "longtextscroll": 2088,
    "canvas;": 2089,
    "text[]": 2090,
    "hello": 2091,
    "world": 2092,
    "!": 2093,
    "sample.": 2094,
    "size_t": 2095,
    "textlen": 2096,
    "sizeof(text)": 2097,
    "sizeof(text[0]);": 2098,
    "textpos": 2099,
    "canvas.setcolordepth(8);": 2100,
    "canvas.setfont(&fonts": 2101,
    "lgfxjapanminchop_32);": 2102,
    "canvas.settextwrap(false);": 2103,
    "canvas.createsprite(lcd.width()": 2104,
    "36);": 2105,
    "cursor_x": 2106,
    "canvas.getcursorx()": 2107,
    "(cursor_x": 2108,
    "canvas.setcursor(cursor_x": 2109,
    "canvas.scroll(-1": 2110,
    "(textpos": 2111,
    "lcd.width())": 2112,
    "canvas.print(text[textpos++]);": 2113,
    "canvas.getcursorx();": 2114,
    "canvas.pushsprite(&lcd": 2115,
    "mbedtlsdemo": 2116,
    "mbed": 2117,
    "2.x.x.": 2118,
    "following": 2119,
    "(in": 2120,
    "options)": 2121,
    "install": 2122,
    "2.x.x": 2123,
    "tls.": 2124,
    "2.28.8.": 2125,
    "installed": 2126,
    "readme": 2127,
    "information.": 2128,
    "src/mbedtls/config.h": 2129,
    "desired": 2130,
    "config": 2131,
    "cut": 2132,
    "&": 2133,
    "paste.": 2134,
    "referencing": 2135,
    "mbedtls": 2136,
    "headers": 2137,
    "metersample": 2138,
    "base(&canvas);": 2139,
    "needle(&canvas);": 2140,
    "lw": 2141,
    "(float)lw": 2142,
    "px": 2143,
    "py": 2144,
    "lcd.setpivot(px": 2145,
    "py);": 2146,
    "180;": 2147,
    "i+=2)": 2148,
    "lcd.setcolor(lcd.color888(i*1.4": 2149,
    "i*1.4+2": 2150,
    "i*1.4+4));": 2151,
    "lcd.fillarc(px": 2152,
    "(lw>>1)": 2153,
    "(lw>>1)-zoom*3": 2154,
    "90+i": 2155,
    "92+i);": 2156,
    "88-i": 2157,
    "90-i);": 2158,
    "(lw>>1)-zoom*4": 2159,
    "(lw>>1)-zoom*7": 2160,
    "270+i": 2161,
    "272+i);": 2162,
    "268-i": 2163,
    "270-i);": 2164,
    "palette_2bit);": 2165,
    "base": 2166,
    ".setcolordepth(lgfx": 2167,
    "needle.setcolordepth(lgfx": 2168,
    ".createsprite(width": 2169,
    "needle.createsprite(3": 2170,
    "11);": 2171,
    "base.setfont(&fonts": 2172,
    "orbitron_light_24);": 2173,
    "//base.setfont(&fonts": 2174,
    "roboto_thin_24);": 2175,
    "base.settextdatum(lgfx": 2176,
    "base.fillcircle(halfwidth": 2177,
    "base.fillarc(halfwidth": 2178,
    "movingcircles": 2184,
    "<lgfx_autodetect.hpp>": 2185,
    "<lgfx_user/lgfx_esp32_sample.hpp>": 2186,
    "lcd_width": 2187,
    "lcd_height;": 2188,
    "obj_info_t": 2189,
    "move()": 2190,
    "(dx": 2191,
    "dx": 2192,
    "lcd_width)": 2193,
    "-1;": 2194,
    "(y": 2195,
    "(dy": 2196,
    "dy": 2197,
    "lcd_height)": 2198,
    "lcd_height": 2199,
    "obj_count": 2200,
    "objects[obj_count];": 2201,
    "sprites[2];": 2202,
    "int_fast16_t": 2203,
    "sprite_height;": 2204,
    "*a;": 2205,
    "obj_count;": 2206,
    "&objects[i];": 2207,
    "a->color": 2208,
    "(uint32_t)rand()": 2209,
    "|": 2210,
    "movingicons": 2211,
    "short": 2212,
    "info[];": 2213,
    "alert[];": 2214,
    "closex[];": 2215,
    "infowidth": 2216,
    "infoheight": 2217,
    "alertwidth": 2218,
    "alertheight": 2219,
    "closewidth": 2220,
    "closeheight": 2221,
    "int_fast8_t": 2222,
    "img;": 2223,
    "z;": 2224,
    "dr;": 2225,
    "dz;": 2226,
    "nodemcu": 2227,
    "nodemcu.": 2228,
    "advanced": 2229,
    "esp": 2230,
    "esp8266_standalone_manual_ip.ino": 2231,
    "esp8266_standalone_smartconfig.ino": 2232,
    "esp8266_standalone_ssl.ino": 2233,
    "oscprinter": 2234,
    "osc": 2235,
    "messages.": 2236,
    "well-known": 2237,
    "advertises": 2239,
    "mdns": 2240,
    "discover": 2241,
    "such": 2242,
    "touchosc": 2243,
    "send": 2244,
    "relies": 2245,
    "liteoscparser": 2246,
    "osc.h": 2247,
    "koscport": 2248,
    "8000;": 2249,
    "kservicename[]": 2250,
    "osc-example": 2251,
    "ll": 2252,
    "directly;": 2253,
    "buffer": 2254,
    "serial.printf(": 2255,
    "ota": 2256,
    "ota(<asyncclient>": 2257,
    "samd21": 2258,
    "supports.": 2259,
    "//github.com/mobizt/firebaseclient#ota-update.": 2260,
    "defined(arduino_arch_samd)": 2261,
    "<internal_storage_ota.h>": 2262,
    "ota_storage": 2263,
    "internalstorage": 2264,
    "partyparrot": 2265,
    "partyparrot.h": 2266,
    "sprite[10];": 2267,
    "parrot00[];": 2268,
    "parrot01[];": 2269,
    "parrot02[];": 2270,
    "parrot03[];": 2271,
    "parrot04[];": 2272,
    "parrot05[];": 2273,
    "parrot06[];": 2274,
    "parrot07[];": 2275,
    "parrot08[];": 2276,
    "parrot09[];": 2277,
    "lcd.setrotation(0);": 2278,
    "(float)lcd.width()": 2279,
    "ztmp": 2280,
    "(float)lcd.height()": 2281,
    "96;": 2282,
    "(zoom": 2283,
    "ztmp)": 2284,
    "ztmp;": 2285,
    "lcd.fillscreen(0xffffffu);": 2286,
    "sprite[0].createfrombmp(parrot00);": 2287,
    "sprite[1].createfrombmp(parrot01);": 2288,
    "sprite[2].createfrombmp(parrot02);": 2289,
    "sprite[3].createfrombmp(parrot03);": 2290,
    "sprite[4].createfrombmp(parrot04);": 2291,
    "sprite[5].createfrombmp(parrot05);": 2292,
    "sprite[6].createfrombmp(parrot06);": 2293,
    "sprite[7].createfrombmp(parrot07);": 2294,
    "sprite[8].createfrombmp(parrot08);": 2295,
    "sprite[9].createfrombmp(parrot09);": 2296,
    "sprite[count].pushrotatezoom(&lcd": 2297,
    "pixelpusherserver": 2298,
    "pixelpusher": 2299,
    "receiver.": 2300,
    "sent": 2301,
    "octows2811.": 2302,
    "configurable": 2303,
    "via": 2304,
    "constants.": 2305,
    "easy": 2306,
    "things": 2307,
    "alter": 2308,
    "strips": 2309,
    "(this": 2310,
    "file)": 2311,
    "pixels": 2312,
    "per": 2313,
    "strip": 2314,
    "octows2811": 2315,
    "pixel": 2316,
    "(octows2811receiver.cpp)": 2317,
    "##": 2318,
    "packet": 2319,
    "sizes": 2320,
    "best": 2321,
    "exceed": 2322,
    "maximum": 2323,
    "non-fragmented": 2324,
    "ipv4": 2325,
    "often": 2326,
    "1500-20-8=1472": 2327,
    "common": 2329,
    "mtu": 2330,
    "(maximum": 2331,
    "transmission": 2332,
    "unit)": 2333,
    "header": 2334,
    "notes": 2335,
    "pixelsperstrip*3": 2336,
    "hold": 2337,
    "strips.": 2338,
    "ethernet.mtu()": 2339,
    "octows2811receiver.h": 2340,
    "pixelpusherserver.h": 2341,
    "rn_xv_wifly": 2342,
    "wifly": 2343,
    "rn-xv": 2344,
    "wiflyhq": 2345,
    "//github.com/harlequin-tech/wiflyhq": 2346,
    "ensure": 2347,
    "stable": 2348,
    "connection!": 2349,
    "4.41": 2350,
    "<wiflyhq.h>": 2351,
    "<blynksimplewifly.h>": 2352,
    "radgialgauge": 2353,
    "sprite(&lcd);": 2354,
    "meter_t": 2355,
    "pivot_x;": 2356,
    "pivot_y;": 2357,
    "angle": 2358,
    "add": 2359,
    "advance(void)": 2360,
    "((angle": 2361,
    "0.0)": 2363,
    "(angle": 2364,
    "0.0))": 2365,
    "-add;": 2366,
    "add;": 2367,
    "drawgauge(uint32_t": 2368,
    "lcd.setpivot(pivot_x": 2369,
    "pivot_y);": 2370,
    "sprite.setpalettecolor(1": 2371,
    "color);": 2372,
    "sprite.pushrotated(angle": 2373,
    "127);": 2374,
    "advance();": 2375,
    "meter1": 2376,
    "meter2": 2377,
    "meter3;": 2378,
    "sprite.setcolordepth(2);": 2379,
    "sprite.createsprite(3": 2380,
    "sprite.setpivot(1": 2381,
    "sprite.drawfastvline(1": 2382,
    "sprite.height()": 2383,
    "sprite.drawfastvline(0": 2384,
    "meter1.pivot_x": 2385,
    "meter1.pivot_y": 2386,
    "meter1.add": 2387,
    "0.01;": 2388,
    "meter2.pivot_x": 2389,
    "meter2.pivot_y": 2390,
    ">>2;": 2391,
    "meter2.add": 2392,
    "0.11;": 2393,
    "meter3.pivot_x": 2394,
    "meter3.pivot_y": 2395,
    "meter3.add": 2396,
    "0.57;": 2397,
    "lcd.fillscreen(lcd.color565(0": 2398,
    "127));": 2399,
    "lcd.drawfasthline(0": 2400,
    "(i*2+1)": 2401,
    "0xffff);": 2402,
    "lcd.drawfastvline((i*2+1)": 2403,
    "meter1.drawgauge(sprite.color888(255": 2404,
    "meter1.angle": 2405,
    "meter2.drawgauge(sprite.color888(255": 2406,
    "meter2.angle": 2407,
    "meter3.drawgauge(sprite.color888(0": 2408,
    "meter3.angle));": 2410,
    "randomnumbers": 2411,
    "random": 2412,
    "distributions": 2413,
    "engines": 2414,
    "entropy": 2415,
    "functions.": 2416,
    "//en.cppreference.com/w/cpp/numeric/random#random_number_distributions": 2417,
    "//en.cppreference.com/w/cpp/named_req/uniformrandombitgenerator": 2418,
    "//en.cppreference.com/w/cpp/named_req/randomnumberengine": 2419,
    "undefine": 2420,
    "nonsense": 2421,
    "<random>": 2422,
    "round": 2423,
    "abs": 2424,
    "randomdevice": 2425,
    "namespace.": 2426,
    "qualify": 2427,
    "directive.": 2428,
    "satisfies": 2429,
    "uniformrandombitgenerator": 2430,
    "named": 2431,
    "requirement.": 2432,
    "security;": 2433,
    "standard": 2434,
    "library;": 2435,
    "uniform_int_distribution<int>": 2436,
    "dicedist(1": 2437,
    "inclusive": 2438,
    "uniform_real_distribution<float>": 2439,
    "realdist(0.0f": 2440,
    "1.0f);": 2441,
    "[0": 2442,
    "normal_distribution<float>": 2443,
    "normaldist(0.0f": 2444,
    "mean=0": 2445,
    "stddev=1": 2446,
    "congruential": 2447,
    "(lcg)": 2448,
    "engine.": 2449,
    "minstd_rand": 2450,
    "randomengine{randomdevice": 2451,
    "instance()()};": 2452,
    "[hardware": 2453,
    "entropy]": 2454,
    "demo(randomdevice": 2455,
    "instance());": 2456,
    "[pseudo-random]": 2457,
    "demo(randomengine);": 2458,
    "generates": 2459,
    "numbers": 2460,
    "variety": 2461,
    "rawframemonitor": 2462,
    "unknown": 2463,
    "raw": 2464,
    "frames.": 2465,
    "known": 2466,
    "frame": 2467,
    "won": 2468,
    "printed": 2469,
    "associated": 2470,
    "enabled": 2471,
    "handler": 2472,
    "them.": 2473,
    "(0x0800)": 2474,
    "arp": 2475,
    "(0x0806)": 2476,
    "ipv6": 2477,
    "(0x86dd)": 2478,
    "(if": 2479,
    "enabled)": 2480,
    "currently": 2481,
    "receive": 2482,
    "frames": 2483,
    "addressed": 2484,
    "subscribed": 2485,
    "multicast": 2486,
    "destination": 2487,
    "tagged": 2488,
    "allowed": 2489,
    "calling": 2490,
    "ethernet.setmacaddressallowed(mac": 2491,
    "flag)": 2492,
    "alternatively": 2493,
    "promiscuous": 2494,
    "defining": 2495,
    "qnethernet_enable_promiscuous_mode": 2496,
    "macro.": 2497,
    "qnethernet_enable_raw_frame_support": 2498,
    "macros": 2499,
    "vlan": 2500,
    "ethertype": 2501,
    "constants": 2502,
    "kethertypevlan": 2503,
    "0x8100u;": 2504,
    "kethertypeqinq": 2505,
    "0x88a8u;": 2506,
    "internal": 2507,
    "redbear_duo_wifi": 2508,
    "redbear": 2509,
    "duo": 2510,
    "<blynksimpleredbear_duo.h>": 2511,
    "wpa2": 2512,
    "wpa": 2513,
    "wep": 2514,
    "wpa2;": 2515,
    "//system_mode(automatic);": 2516,
    "system_mode(manual);": 2517,
    "delay(5000);": 2518,
    "wifi.on();": 2519,
    "wifi.setcredentials(ssid": 2520,
    "wifi.connect();": 2521,
    "rotatedial": 2522,
    "sp;": 2523,
    "flip;": 2524,
    "inline": 2525,
    "getbackcolor(int": 2526,
    "lcd.swap565(abs((x&31)-16)<<3": 2527,
    "abs((y&31)-16)<<3);": 2528,
    "//return": 2529,
    "lcd.swap565(x": 2530,
    "sprites[i].setcolordepth(lcd.getcolordepth());": 2531,
    "sprites[i].setfont(&fonts": 2532,
    "font2);": 2533,
    "sprites[i].settextcolor(tft_white);": 2534,
    "sprites[i].settextdatum(textdatum_t": 2535,
    "top_right);": 2536,
    "div": 2537,
    "(;;)": 2538,
    "sprite_height": 2539,
    "div;": 2540,
    "fail": 2541,
    "!fail": 2542,
    "!sprites[i].createsprite(lcd.width()": 2543,
    "sprite_height);": 2544,
    "(!fail)": 2545,
    "sprites[i].deletesprite();": 2546,
    "div++;": 2547,
    "sp.setcolordepth(8);": 2548,
    "sp.setfont(&fonts": 2549,
    "sp.settextdatum(textdatum_t": 2550,
    "prev_fps;": 2551,
    "prev_fps": 2552,
    "count++;": 2553,
    "y_center": 2554,
    "max(lcd.width()": 2555,
    "lcd.height()));": 2556,
    "distance;": 2557,
    "zoom_x": 2558,
    "zoom_y;": 2559,
    "div_y": 2560,
    "sprite_height)": 2561,
    "(float)(count": 2562,
    "36)": 2563,
    "sprites[flip].clear();": 2564,
    "//*": 2565,
    "background": 2566,
    "rotatedzoomsample": 2567,
    "sprite1(&lcd);": 2568,
    "sprite2(&lcd);": 2569,
    "sprites[2]": 2570,
    "{&sprite1": 2571,
    "&sprite2};": 2572,
    "280;": 2573,
    "lcd.setpivot(lcd.width()>>1": 2574,
    "lcd.height()>>1);": 2575,
    "min(width": 2576,
    "lcd.height())+10))": 2577,
    "sprites[i]->setcolordepth(8);": 2578,
    "sprites[i]->createsprite(width": 2579,
    "sprites[i]->createpalette();": 2580,
    "flip": 2581,
    "sprites[flip]->setpalettecolor(i": 2582,
    "((i-count-1)": 2583,
    "0x7f)<<1": 2584,
    "0xff)": 2585,
    "0x3f)<<2);": 2586,
    "sprites[!flip]->clearcliprect();": 2587,
    "sprites[!flip]->setcolor(count);": 2588,
    "sprites[!flip]->fillrect(0": 2589,
    "sprites[!flip]->fillrect(width-3": 2590,
    "width-3": 2591,
    "sprites[!flip]->setcliprect(3": 2592,
    "width-6": 2593,
    "width-6);": 2594,
    "sprites[!flip]->pushrotatezoom(sprites[flip]": 2595,
    "width>>1": 2596,
    "(width>>1)+10": 2597,
    "((float)count)*.5": 2598,
    "0.9": 2599,
    "0.95);": 2600,
    "sprites[flip]->pushsprite((lcd.width()": 2601,
    "sim800_sim900": 2602,
    "attention!": 2603,
    "phone": 2604,
    "sim": 2605,
    "ballance": 2606,
    "correct": 2607,
    "internet": 2608,
    "correctly": 2609,
    "inserted": 2610,
    "into": 2611,
    "provide": 2612,
    "good": 2613,
    "supply": 2614,
    "(up": 2615,
    "2a)": 2616,
    "(4.0-4.2v": 2617,
    "5v": 2618,
    "documentation)": 2619,
    "(hardware": 2620,
    "recommended)": 2621,
    "5.": 2622,
    "antenna": 2623,
    "attached": 2624,
    "yourapn": 2625,
    "gprs_user": 2626,
    "uncomment": 2627,
    "sntpclient": 2628,
    "sntp": 2629,
    "//tools.ietf.org/html/rfc4330": 2630,
    "<ctime>": 2631,
    "teensyduino": 2632,
    "<timelib.h>": 2633,
    "kntpport": 2634,
    "01-jan-1900": 2635,
    "00": 2636,
    "01-jan-1970": 2637,
    "kepochdiff": 2638,
    "800;": 2641,
    "epoch": 2642,
    "07-feb-2036": 2643,
    "06": 2644,
    "kbreaktime": 2645,
    "085": 2646,
    "496;": 2648,
    "buffer.": 2649,
    "buf[48];": 2650,
    "savebmp": 2651,
    "<seeed_fs.h>": 2652,
    "<sd/seeed_sd.h>": 2653,
    "#else": 2654,
    "<sd.h>": 2655,
    "<spiffs.h>": 2656,
    "filename[]": 2657,
    "/lovyangfx_test.bmp": 2658,
    "#ifndef": 2659,
    "sdcard_ss_pin": 2660,
    "sdcard_spi": 2661,
    "savetosd_16bit(void)": 2662,
    "sd.open(filename": 2663,
    "(file)": 2664,
    "rowsize": 2665,
    "(2": 2666,
    "bitmap_header_t": 2667,
    "bmpheader;": 2668,
    "bmpheader.bftype": 2669,
    "0x4d42;": 2670,
    "bmpheader.bfsize": 2671,
    "sizeof(bmpheader);": 2672,
    "bmpheader.bfoffbits": 2673,
    "bmpheader.bisize": 2674,
    "bmpheader.biwidth": 2675,
    "bmpheader.biheight": 2676,
    "height;": 2677,
    "bmpheader.biplanes": 2678,
    "bmpheader.bibitcount": 2679,
    "bmpheader.bicompression": 2680,
    "file.write((std": 2681,
    "uint8_t*)&bmpheader": 2682,
    "sizeof(bmpheader));": 2683,
    "buffer[rowsize];": 2684,
    "memset(&buffer[rowsize": 2685,
    "4]": 2686,
    "y--)": 2687,
    "lcd.readrect(0": 2688,
    "(lgfx": 2689,
    "rgb565_t*)buffer);": 2690,
    "file.write(buffer": 2691,
    "rowsize);": 2692,
    "file.close();": 2693,
    "true;": 2694,
    "failure": 2695,
    "result;": 2696,
    "savetosd_24bit(void)": 2697,
    "(3": 2698,
    "savepng": 2699,
    "/lovyangfx_test.png": 2700,
    "savetosd(void)": 2701,
    "createpng": 2702,
    "png": 2703,
    "samd51": 2704,
    "172x172": 2705,
    "192x192": 2706,
    "psram": 2707,
    "dlen;": 2708,
    "uint8_t*)lcd.createpng(&dlen": 2709,
    "(!png)": 2711,
    "success": 2712,
    "uint8_t*)png": 2713,
    "dlen);": 2714,
    "free(png);": 2715,
    "lcd.setcolor(tft_white);": 2716,
    "lcd.writecolor(": 2717,
    "lcd.color888(x": 2718,
    "sd.end();": 2719,
    "delay(1000);": 2720,
    "sd.begin(sdcard_ss_pin": 2721,
    "25000000);": 2722,
    "(!savetosd());": 2723,
    "success.": 2724,
    "lcd.drawpngfile(sd": 2725,
    "random(-20": 2726,
    "20)": 2727,
    "20));": 2728,
    "serverwithlisteners": 2729,
    "stop": 2730,
    "services.": 2731,
    "testing": 2732,
    "teensy": 2733,
    "entirely": 2734,
    "work.": 2735,
    "managing": 2736,
    "attaching": 2737,
    "rudimentary": 2738,
    "behaviour": 2739,
    "6.": 2740,
    "timeouts": 2741,
    "7.": 2742,
    "connection.": 2743,
    "basis": 2744,
    "logic": 2745,
    "illustration.": 2746,
    "here.": 2747,
    "simplehttpclient": 2748,
    "makes": 2750,
    "upon": 2751,
    "acquiring": 2752,
    "reads": 2753,
    "until": 2754,
    "connection-close.": 2755,
    "machine.": 2756,
    "parsed.": 2757,
    "khost[]{": 2758,
    "kconnect": 2759,
    "ksendrequest": 2760,
    "kreadresponse": 2761,
    "kend": 2762,
    "re": 2763,
    "doing": 2764,
    "kstart;": 2765,
    "gotip": 2766,
    "responsestarttime": 2767,
    "responsesize": 2768,
    "readbuf[1024];": 2769,
    "ide)": 2770,
    "connect();": 2771,
    "sendrequest();": 2772,
    "readresponse();": 2773,
    "sparkfun_blynk_board": 2774,
    "sparkfun": 2775,
    "board.": 2776,
    "1.0": 2777,
    "(compatible": 2778,
    "board)": 2779,
    "menu": 2780,
    "subset": 2781,
    "test/demonstrate": 2782,
    "calculating": 2783,
    "shorter": 2784,
    "term": 2785,
    "averages": 2786,
    "most": 2787,
    "recent": 2788,
    "points.": 2789,
    "<streaming.h>": 2790,
    "//github.com/janelia-arduino/streaming": 2791,
    "arraysize{30};": 2792,
    "foo(arraysize);": 2793,
    "f(": 2794,
    "__file__": 2795,
    "ncompiled": 2796,
    "__date__": 2797,
    "__time__": 2798,
    "points": 2799,
    "interval": 2800,
    "i=1;": 2801,
    "i<=42;": 2802,
    "foo.reading(i);": 2803,
    "avgtest(": 2804,
    "overall": 2805,
    "foo.getavg()": 2806,
    "28);": 2807,
    "last": 2808,
    "foo.getavg(10)": 2809,
    "38);": 2810,
    "foo.getavg(3)": 2811,
    "41);": 2812,
    "foo.getavg(2)": 2813,
    "42);": 2814,
    "foo.getavg(1)": 2815,
    "foo.getavg(0)": 2816,
    "foo.getavg(30)": 2817,
    "foo.getavg(31)": 2819,
    "endl;": 2820,
    "foo.reset();": 2821,
    "fewer": 2822,
    "i<=17;": 2823,
    "9);": 2824,
    "13);": 2825,
    "17);": 2826,
    "tft_graphicstest_pdq": 2827,
    "adapted": 2828,
    "xark": 2829,
    "pdq": 2830,
    "graphicstest": 2831,
    "sketch.": 2832,
    "end": 2833,
    "original": 2834,
    "info.": 2835,
    "glcd": 2836,
    "font": 2837,
    "only.": 2838,
    "<lgfx_tft_espi.hpp>": 2839,
    "<tft_espi.h>": 2840,
    "max": 2841,
    "total": 2842,
    "tn": 2843,
    "lovyan": 2844,
    "test!": 2845,
    "tft.init();": 2846,
    "tft.setrotation(0);": 2847,
    "tft.startwrite();": 2848,
    "serial.println(f(": 2849,
    "benchmark": 2850,
    "(microseconds)": 2851,
    "usechad": 2852,
    "testhad();": 2853,
    "had": 2854,
    "pushcolor": 2855,
    "serial.println(usechad);": 2856,
    "delay(100);": 2857,
    "usecfillscreen": 2858,
    "testfillscreen();": 2859,
    "screen": 2860,
    "serial.println(usecfillscreen);": 2861,
    "usectext": 2862,
    "testtext();": 2863,
    "serial.println(usectext);": 2864,
    "usecpixels": 2865,
    "testpixels();": 2866,
    "serial.println(usecpixels);": 2867,
    "useclines": 2868,
    "testlines(tft_blue);": 2869,
    "serial.println(useclines);": 2870,
    "usecfastlines": 2871,
    "testfastlines(tft_red": 2872,
    "horiz/vert": 2873,
    "serial.println(usecfastlines);": 2874,
    "usecrects": 2875,
    "testrects(tft_green);": 2876,
    "rectangles": 2877,
    "(outline)": 2878,
    "serial.println(usecrects);": 2879,
    "usecfilledrects": 2880,
    "testfilledrects(tft_yellow": 2881,
    "tft_magenta);": 2882,
    "(filled)": 2883,
    "serial.println(usecfilledrects);": 2884,
    "usecfilledcircles": 2885,
    "testfilledcircles(10": 2886,
    "serial.println(usecfilledcircles);": 2887,
    "useccircles": 2888,
    "testcircles(10": 2889,
    "serial.println(useccircles);": 2890,
    "usectriangles": 2891,
    "testtriangles();": 2892,
    "triangles": 2893,
    "serial.println(usectriangles);": 2894,
    "usecfilledtrangles": 2895,
    "teensy3": 2896,
    "template_esp32": 2897,
    "demo.": 2898,
    "development": 2899,
    "testing.": 2900,
    "setting.h": 2901,
    "would": 2902,
    "product": 2903,
    "contact": 2904,
    "businesses": 2905,
    "//www.blynk.io/": 2906,
    "use_wrover_board": 2907,
    "use_custom_board": 2908,
    "settings.h": 2909,
    "app_debug": 2910,
    "blynkprovisioning.h": 2911,
    "blynkprovisioning.begin();": 2912,
    "handles": 2913,
    "blynkprovisioning.run();": 2914,
    "template_esp8266": 2915,
    "use_sparkfun_blynk_board": 2916,
    "use_node_mcu_board": 2917,
    "use_witty_cloud_board": 2918,
    "esp8266-based": 2919,
    "template_mkr1000": 2920,
    "additional": 2921,
    "//github.com/cmaglie/flashstorage": 2922,
    "//github.com/michael71/timer5": 2923,
    "use_mkr1000_board": 2924,
    "theairboard_wifly": 2925,
    "airboard": 2926,
    "//www.theairboard.cc/quick-start/": 2927,
    "debugserial(10": 2928,
    "<theairboard.h>": 2929,
    "tinyduino_wifi": 2930,
    "tinycircuits": 2931,
    "tools->board": 2932,
    "tools->processor": 2933,
    "atmega": 2934,
    "(3.3v": 2936,
    "8mhz)": 2937,
    "<blynksimpletinyduino.h>": 2938,
    "wlan_sec_unsec": 2939,
    "wlan_sec_wep": 2940,
    "wlan_sec_wpa": 2941,
    "wlan_sec_wpa2": 2942,
    "transitionfx": 2943,
    "push": 2944,
    "sprites": 2945,
    "style!": 2946,
    "lgfx_spritefx": 2947,
    "layer": 2948,
    "brought": 2949,
    "tobozo": 2950,
    "copyleft": 2951,
    "(c+)": 2952,
    "demo": 2953,
    "ways": 2954,
    "sprite": 2955,
    "transitions.": 2956,
    "transition": 2957,
    "effects": 2958,
    "spin": 2959,
    "zommed": 2960,
    "slice": 2961,
    "sliced": 2962,
    "merged": 2963,
    "stretch": 2964,
    "spread": 2965,
    "edge": 2966,
    "easing": 2967,
    "plenty!": 2968,
    "strech": 2969,
    "does": 2970,
    "delay": 2971,
    "between": 2972,
    "lgfx_spritefx(&tft);": 2973,
    "stuff": 2974,
    "sprite...": 2975,
    "ready": 2976,
    "pushed": 2977,
    "sprite->pushsprite(": 2978,
    "sprite->spin(": 2979,
    "sprite->slice(": 2980,
    "sprite->stretch(": 2981,
    "lgfx_spritefx.hpp": 2982,
    "examples.": 2983,
    "assets.h": 2984,
    "images": 2985,
    "easingfuncdesc_t": 2986,
    "name;": 2987,
    "easing_fn_t": 2988,
    "func;": 2989,
    "img_t": 2990,
    "databases": 2991,
    "patch(<asyncclient>": 2992,
    "<database>": 2993,
    "<updatemask>": 2994,
    "holds": 2995,
    "update.": 2996,
    "fields": 2997,
    "updated.": 2998,
    "comma-separated": 2999,
    "fully": 3000,
    "qualified": 3001,
    "names": 3002,
    "fields.": 3003,
    "user.displayname": 3004,
    "photo": 3005
  }
}