{
  "libraryIncludes": {
    "ESP8266WiFi.h": 11,
    "SPI.h": 10,
    "BlynkSimpleEsp8266.h": 9,
    "BlynkSimpleStream.h": 9,
    "SoftwareSerial.h": 7,
    "WiFi.h": 5,
    "WiFi101.h": 3,
    "BlynkSimpleWiFiShield101.h": 2,
    "Adafruit_CC3000.h": 2,
    "ESP8266_Lib.h": 2,
    "BlynkSimpleShieldEsp8266.h": 2,
    "WiFlyHQ.h": 2,
    "BlynkSimpleWiFly.h": 2,
    "SoftwareServo.h": 1,
    "Ethernet.h": 1,
    "GSM.h": 1,
    "BlynkSimpleMKR1000.h": 1,
    "WiFiNINA.h": 1,
    "BlynkSimpleWiFiNINA.h": 1,
    "BlynkSimpleWifi.h": 1
  },
  "pinConfigurations": {
    "pin_2": {
      "pin": "2",
      "mode": "OUTPUT"
    }
  },
  "functionTemplates": {
    "setup": "delay(500);\n  Serial.begin(115200);\n\n  /**************************************************************\n   *\n   * Workflow to connect the device to WiFi network.\n   * Here is how it works:\n   * 1. At the first start hardware acts as an Access Point and\n   *    broadcasts it's own WiFi.\n   * 2. myPlant smartphone app connects to this Access Point\n   * 3. myPlant smartphone app request new Auth Token and passes\n   *    it together with user's WiFi SSID and password\n   * 4. Hardware saves this information to EEPROM\n   * 5. Hardware reboots and now connects to user's WiFi Network\n   * 6. Hardware connects to Blynk Cloud and is ready to work with app\n   *\n   * Next time the hardware reboots, it will use the same configuration\n   * to connect. User can RESET the board and re-initiate provisioning\n   *\n   * Explore the Settings.h for parameters\n   *\n   **************************************************************/\n\n  BlynkProvisioning.begin();\n\n  example_init(); // Initialize this example",
    "loop": "// This handles the network and cloud connection\n  BlynkProvisioning.run();\n\n  // Run this example periodic actions\n  example_run();",
    "myTimerEvent": "// 发送数据的频率不要超过每秒10次。\n  Blynk.virtualWrite(V5, millis() / 1000);",
    "connectNetwork": "Serial.print(\"Connecting to \");\n  Serial.println(ssid);\n  WiFi.begin(ssid, pass);\n\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(500);\n    Serial.print(\".\");",
    "example_init": "// Update sensors each 3 seconds\n  timer.setInterval(3000L, []() {\n    // Soil moisture\n    if (sensorSoilMoisture < 33) {\n      Blynk.virtualWrite(V1, \"DRY\");",
    "example_run": "timer.run();"
  },
  "serialConfigurations": {
    "9600": 44,
    "115200": 4
  },
  "commonKeywords": {
    "to": 327,
    "blynk": 245,
    "//": 245,
    "http": 236,
    "the": 211,
    "and": 196,
    "this": 153,
    "is": 140,
    "you": 119,
    "your": 114,
    "=": 111,
    "in": 111,
    "#include": 100,
    "char": 97,
    ";": 87,
    "library": 85,
    "for": 80,
    "it": 77,
    "example": 76,
    "{": 69
  },
  "filePatterns": {
    "network": 41,
    "generic": 5,
    "led": 3,
    "sensor": 1
  },
  "sensorTypes": {
    "temperature": 1,
    "humidity": 1,
    "light": 1
  },
  "communicationProtocols": {
    "WiFi": 33,
    "SPI": 10
  },
  "trainingMetrics": {
    "accuracyHistory": [],
    "valAccuracyHistory": [],
    "lossHistory": [
      6.70815896987915,
      6.675570011138916,
      6.322798728942871,
      5.589376926422119,
      5.342698574066162,
      5.332943439483643,
      5.348680019378662,
      5.3378520011901855,
      5.307815074920654,
      5.2645158767700195,
      5.217781066894531,
      5.204557418823242,
      5.206336498260498,
      5.211541652679443,
      5.203652381896973,
      5.194840908050537,
      5.188645362854004,
      5.193362712860107,
      5.200438022613525,
      5.197391510009766,
      5.197331428527832,
      5.188277721405029,
      5.188472270965576,
      5.177584648132324,
      5.180902004241943,
      5.180893898010254,
      5.179524898529053,
      5.170952796936035,
      5.166427135467529,
      5.170575141906738,
      5.167945861816406,
      5.1648430824279785,
      5.157994747161865,
      5.157109260559082,
      5.15449857711792,
      5.149665355682373,
      5.151915073394775,
      5.140758991241455,
      5.129397392272949,
      5.122088432312012,
      5.1102614402771,
      5.097248077392578,
      5.081920623779297,
      5.064087390899658,
      5.048000335693359,
      5.030831336975098,
      5.018819332122803,
      5.001469135284424,
      4.974193572998047,
      4.959174633026123,
      4.940301418304443,
      4.923875331878662,
      4.8939290046691895,
      4.877134799957275,
      4.872063636779785,
      4.850127696990967,
      4.829587459564209,
      4.8154754638671875,
      4.764768123626709,
      4.74994421005249,
      4.725472927093506,
      4.695675849914551,
      4.65029764175415,
      4.646409511566162,
      4.606865406036377,
      4.644447326660156,
      4.618363857269287,
      4.557975769042969,
      4.5311279296875,
      4.502482891082764,
      4.4759202003479,
      4.446091651916504,
      4.428771018981934,
      4.409764289855957,
      4.388378143310547,
      4.3626627922058105,
      4.359591484069824,
      4.350146770477295,
      4.3083014488220215,
      4.281087875366211,
      4.286790370941162,
      4.246102333068848,
      4.234443187713623,
      4.2064032554626465,
      4.185746192932129,
      4.19537353515625,
      4.161287784576416,
      4.198856830596924,
      4.168266773223877,
      4.164525508880615,
      4.1413469314575195,
      4.166742324829102,
      4.197553634643555,
      4.105040073394775,
      4.142193794250488,
      4.081029415130615,
      4.0439887046813965,
      4.020731449127197,
      3.9998281002044678,
      4.003082275390625
    ],
    "valLossHistory": [
      6.6806135177612305,
      6.414503574371338,
      5.383194923400879,
      5.317661762237549,
      5.467947006225586,
      5.543295860290527,
      5.561342716217041,
      5.526890277862549,
      5.460425853729248,
      5.400527477264404,
      5.362621307373047,
      5.34531831741333,
      5.347382068634033,
      5.355034351348877,
      5.3680195808410645,
      5.391449928283691,
      5.418807029724121,
      5.444141387939453,
      5.4633612632751465,
      5.467616081237793,
      5.460355281829834,
      5.440813064575195,
      5.4179582595825195,
      5.407920837402344,
      5.406004428863525,
      5.406058311462402,
      5.407620906829834,
      5.413336277008057,
      5.421785831451416,
      5.432473182678223,
      5.43843936920166,
      5.436202049255371,
      5.428141117095947,
      5.420367240905762,
      5.4176201820373535,
      5.414192199707031,
      5.410481929779053,
      5.4055023193359375,
      5.40873908996582,
      5.405004024505615,
      5.401846885681152,
      5.38673210144043,
      5.378659248352051,
      5.357209205627441,
      5.329195499420166,
      5.328487396240234,
      5.304145812988281,
      5.29298734664917,
      5.294487476348877,
      5.298746585845947,
      5.302150726318359,
      5.29207706451416,
      5.277463436126709,
      5.281670093536377,
      5.2479987144470215,
      5.246535301208496,
      5.223777770996094,
      5.20395040512085,
      5.196509838104248,
      5.19266939163208,
      5.180663585662842,
      5.16569709777832,
      5.177002429962158,
      5.165031433105469,
      5.196400165557861,
      5.17404317855835,
      5.1504902839660645,
      5.141088008880615,
      5.120845794677734,
      5.114038944244385,
      5.109583377838135,
      5.106137752532959,
      5.112027168273926,
      5.110373020172119,
      5.107382774353027,
      5.10752534866333,
      5.126763820648193,
      5.096673965454102,
      5.079995632171631,
      5.120510101318359,
      5.086233615875244,
      5.072681427001953,
      5.07519006729126,
      5.090857982635498,
      5.134912967681885,
      5.108950138092041,
      5.108144760131836,
      5.133998870849609,
      5.156578063964844,
      5.095485210418701,
      5.175774574279785,
      5.095859527587891,
      5.159667491912842,
      5.131593704223633,
      5.155679702758789,
      5.106968879699707,
      5.139969825744629,
      5.125429153442383,
      5.152468204498291,
      5.078452110290527
    ],
    "bestAccuracy": 0,
    "bestValAccuracy": 0,
    "finalLoss": 4.003082275390625,
    "finalValLoss": 5.078452110290527
  }
}