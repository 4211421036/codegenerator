{
  "libraryIncludes": {
    "ESP8266WiFi.h": 11,
    "SPI.h": 10,
    "BlynkSimpleEsp8266.h": 9,
    "BlynkSimpleStream.h": 9,
    "SoftwareSerial.h": 7,
    "WiFi.h": 5,
    "WiFi101.h": 3,
    "BlynkSimpleWiFiShield101.h": 2,
    "Adafruit_CC3000.h": 2,
    "ESP8266_Lib.h": 2,
    "BlynkSimpleShieldEsp8266.h": 2,
    "WiFlyHQ.h": 2,
    "BlynkSimpleWiFly.h": 2,
    "SoftwareServo.h": 1,
    "Ethernet.h": 1,
    "GSM.h": 1,
    "BlynkSimpleMKR1000.h": 1,
    "WiFiNINA.h": 1,
    "BlynkSimpleWiFiNINA.h": 1,
    "BlynkSimpleWifi.h": 1
  },
  "pinConfigurations": {
    "pin_2": {
      "pin": "2",
      "mode": "OUTPUT"
    }
  },
  "functionTemplates": {
    "setup": "delay(500);\n  Serial.begin(115200);\n\n  /**************************************************************\n   *\n   * Workflow to connect the device to WiFi network.\n   * Here is how it works:\n   * 1. At the first start hardware acts as an Access Point and\n   *    broadcasts it's own WiFi.\n   * 2. myPlant smartphone app connects to this Access Point\n   * 3. myPlant smartphone app request new Auth Token and passes\n   *    it together with user's WiFi SSID and password\n   * 4. Hardware saves this information to EEPROM\n   * 5. Hardware reboots and now connects to user's WiFi Network\n   * 6. Hardware connects to Blynk Cloud and is ready to work with app\n   *\n   * Next time the hardware reboots, it will use the same configuration\n   * to connect. User can RESET the board and re-initiate provisioning\n   *\n   * Explore the Settings.h for parameters\n   *\n   **************************************************************/\n\n  BlynkProvisioning.begin();\n\n  example_init(); // Initialize this example",
    "loop": "// This handles the network and cloud connection\n  BlynkProvisioning.run();\n\n  // Run this example periodic actions\n  example_run();",
    "myTimerEvent": "// 发送数据的频率不要超过每秒10次。\n  Blynk.virtualWrite(V5, millis() / 1000);",
    "connectNetwork": "Serial.print(\"Connecting to \");\n  Serial.println(ssid);\n  WiFi.begin(ssid, pass);\n\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(500);\n    Serial.print(\".\");",
    "example_init": "// Update sensors each 3 seconds\n  timer.setInterval(3000L, []() {\n    // Soil moisture\n    if (sensorSoilMoisture < 33) {\n      Blynk.virtualWrite(V1, \"DRY\");",
    "example_run": "timer.run();"
  },
  "serialConfigurations": {
    "9600": 44,
    "115200": 4
  },
  "commonKeywords": {
    "to": 327,
    "blynk": 245,
    "//": 245,
    "http": 236,
    "the": 211,
    "and": 196,
    "this": 153,
    "is": 140,
    "you": 119,
    "your": 114,
    "=": 111,
    "in": 111,
    "#include": 100,
    "char": 97,
    ";": 87,
    "library": 85,
    "for": 80,
    "it": 77,
    "example": 76,
    "{": 69
  },
  "filePatterns": {
    "network": 41,
    "generic": 5,
    "led": 3,
    "sensor": 1
  },
  "sensorTypes": {
    "temperature": 1,
    "humidity": 1,
    "light": 1
  },
  "communicationProtocols": {
    "WiFi": 33,
    "SPI": 10
  },
  "trainingMetrics": {
    "accuracyHistory": [],
    "valAccuracyHistory": [],
    "lossHistory": [
      6.706583023071289,
      6.6663713455200195,
      6.158055782318115,
      5.895279407501221,
      5.315040111541748,
      5.330564022064209,
      5.356340408325195,
      5.345619201660156,
      5.315892219543457,
      5.275446891784668,
      5.23878812789917,
      5.201372146606445,
      5.19512939453125,
      5.198622703552246,
      5.210378170013428,
      5.2092509269714355,
      5.198476314544678,
      5.191669940948486,
      5.183829307556152,
      5.180934906005859,
      5.181682109832764,
      5.181377410888672,
      5.176636695861816,
      5.179161071777344,
      5.176586627960205,
      5.172717571258545,
      5.172645568847656,
      5.166356086730957,
      5.16575813293457,
      5.165031433105469,
      5.166173458099365,
      5.160979270935059,
      5.16111946105957,
      5.159933567047119,
      5.153334617614746,
      5.145808219909668,
      5.139742374420166,
      5.134201526641846,
      5.125533103942871,
      5.108420372009277,
      5.0988616943359375,
      5.095602512359619,
      5.08024263381958,
      5.063913345336914,
      5.045108795166016,
      5.026655197143555,
      5.003927707672119,
      4.982407569885254,
      4.961503982543945,
      4.937355995178223,
      4.911909103393555,
      4.881622791290283,
      4.86423397064209,
      4.891875267028809,
      4.968868732452393,
      4.88616943359375,
      4.815926551818848,
      4.784532070159912,
      4.761654853820801,
      4.741405487060547,
      4.71104621887207,
      4.701289176940918,
      4.677416801452637,
      4.6615800857543945,
      4.640914440155029,
      4.618326187133789,
      4.5767927169799805,
      4.549694538116455,
      4.538432598114014,
      4.51558780670166,
      4.4902801513671875,
      4.475685119628906,
      4.459873676300049,
      4.4406938552856445,
      4.415226936340332,
      4.405900955200195,
      4.392244338989258,
      4.355477333068848,
      4.33974027633667,
      4.314422607421875,
      4.294694900512695,
      4.275573253631592,
      4.275981903076172,
      4.253265380859375,
      4.243805885314941,
      4.215733528137207,
      4.192926406860352,
      4.1719489097595215,
      4.16694974899292,
      4.185637950897217,
      4.1564741134643555,
      4.141481876373291,
      4.139332294464111,
      4.077291011810303,
      4.070441722869873,
      4.034543514251709,
      4.025501728057861,
      3.9992637634277344,
      3.976715564727783,
      3.971872091293335
    ],
    "valLossHistory": [
      6.677514553070068,
      6.334755897521973,
      5.733844757080078,
      5.191882133483887,
      5.30112886428833,
      5.355328559875488,
      5.352328777313232,
      5.3068461418151855,
      5.241919994354248,
      5.169598579406738,
      5.106403827667236,
      5.066334247589111,
      5.048654079437256,
      5.04877233505249,
      5.051333904266357,
      5.052891731262207,
      5.060056686401367,
      5.070964813232422,
      5.079203128814697,
      5.084741592407227,
      5.084690570831299,
      5.082097053527832,
      5.077953338623047,
      5.073083877563477,
      5.06534481048584,
      5.057955265045166,
      5.049257278442383,
      5.042593002319336,
      5.042977809906006,
      5.041354656219482,
      5.039767742156982,
      5.040449142456055,
      5.034360885620117,
      5.034659385681152,
      5.034329891204834,
      5.031755447387695,
      5.024539947509766,
      5.021459102630615,
      5.006662368774414,
      4.994711875915527,
      4.983546733856201,
      4.971179962158203,
      4.953842639923096,
      4.937686443328857,
      4.927787780761719,
      4.913055896759033,
      4.8919243812561035,
      4.876307487487793,
      4.851102352142334,
      4.833314418792725,
      4.806018829345703,
      4.791044235229492,
      4.809697151184082,
      4.863926887512207,
      4.787919998168945,
      4.765605449676514,
      4.727916717529297,
      4.699613094329834,
      4.67435359954834,
      4.645850658416748,
      4.634220600128174,
      4.598997116088867,
      4.592957019805908,
      4.571954250335693,
      4.540748596191406,
      4.520564556121826,
      4.4934916496276855,
      4.476920127868652,
      4.44231653213501,
      4.43472957611084,
      4.407423496246338,
      4.406978130340576,
      4.4012908935546875,
      4.373668670654297,
      4.364383697509766,
      4.333272457122803,
      4.307475566864014,
      4.2898077964782715,
      4.271275043487549,
      4.254537582397461,
      4.238180637359619,
      4.254073143005371,
      4.2291483879089355,
      4.2356486320495605,
      4.192872524261475,
      4.16796875,
      4.1487932205200195,
      4.152967929840088,
      4.2033538818359375,
      4.156849384307861,
      4.147824287414551,
      4.123622894287109,
      4.066258907318115,
      4.049183368682861,
      4.018781661987305,
      4.003137588500977,
      3.994734287261963,
      3.9676365852355957,
      3.943495512008667,
      3.935009479522705
    ],
    "bestAccuracy": 0,
    "bestValAccuracy": 0,
    "finalLoss": 3.971872091293335,
    "finalValLoss": 3.935009479522705
  }
}