{"vocab": {"enter": 306, "mac": 515, "address": 46, "and": 60, "ip": 456, "for": 357, "your": 997, "controller": 207, "below": 110, "select": 776, "the": 890, "according": 38, "to": 910, "local": 505, "network": 577, "google": 388, "dns": 275, "server": 787, "enc28j60": 300, "esp32": 314, "s3": 754, "optional": 612, "values": 953, "override": 624, "default": 235, "settings": 794, "this": 899, "example": 327, "shows": 803, "how": 412, "clear": 174, "sd": 768, "helper": 404, "create": 217, "service": 788, "account": 39, "use": 940, "library": 493, "go": 386, "https": 414, "client": 175, "email": 291, "private": 678, "key": 469, "no_description": 584, "arduinojson": 69, "org": 616, "copyright": 211, "benoit": 111, "blanchon": 117, "2014": 17, "2018": 18, "mit": 547, "license": 494, "json": 466, "with": 985, "initialize": 438, "serial": 783, "port": 659, "teensy": 881, "simple": 807, "internal": 450, "temperature": 883, "sketch": 812, "demonstrates": 247, "usage": 938, "of": 602, "non": 585, "in": 426, "mode": 548, "it": 461, "can": 158, "be": 103, "used": 942, "emulate": 295, "an": 58, "ir": 458, "like": 496, "change": 163, "these": 894, "calibration": 152, "adc": 42, "reading": 706, "known": 473, "const": 203, "print": 673, "put": 693, "main": 516, "code": 180, "here": 405, "run": 750, "repeatedly": 722, "i2c": 416, "communications": 189, "configuration": 195, "normal": 586, "conversion": 208, "bmp280": 130, "has": 398, "setting": 793, "defaults": 236, "pass": 636, "sound": 822, "control": 206, "you": 996, "on": 605, "both": 137, "option": 611, "its": 462, "over": 623, "time": 903, "or": 614, "could": 214, "by": 148, "requires": 729, "sensor": 782, "connected": 199, "pin": 648, "runs": 752, "anything": 63, "at": 80, "speed": 828, "memory": 530, "without": 986, "any": 62, "esp8266": 315, "make": 517, "off": 603, "button": 145, "touch": 913, "adafruit": 40, "is": 460, "data": 224, "raw": 703, "screen": 766, "left": 485, "usb": 939, "uncomment": 928, "following": 356, "line": 497, "enable": 296, "debug": 231, "output": 621, "define": 237, "enable_debug": 297, "struct": 864, "store": 857, "measurement": 528, "from": 369, "set": 790, "framerate": 365, "game": 374, "60": 27, "fps": 363, "let": 489, "sure": 871, "was": 966, "not": 587, "muted": 567, "previous": 672, "initializes": 439, "atmsynth": 81, "samplerate": 760, "begin": 108, "playback": 654, "song": 821, "convert": 209, "value": 952, "spi": 829, "devices": 256, "higher": 409, "number": 596, "more": 555, "debugging": 232, "messages": 533, "display": 273, "stored": 858, "ssids": 835, "pwds": 694, "config": 194, "portal": 660, "false": 332, "true": 918, "even": 322, "credentials": 218, "are": 71, "just": 467, "leave": 481, "them": 891, "all": 52, "blank": 118, "reconnect": 714, "reuse": 738, "display_stored_credentials_in_cp": 274, "core": 212, "v3": 949, "filesystem": 345, "file": 342, "object": 599, "should": 801, "defined": 238, "fs": 370, "global": 382, "function": 371, "api": 65, "obtained": 601, "firebase": 349, "console": 202, "project": 683, "overview": 625, "include": 427, "only": 608, "one": 607, "initiate": 440, "sx1262": 873, "connections": 201, "replace": 723, "board": 132, "many": 520, "millis": 538, "motors": 559, "will": 983, "given": 381, "if": 421, "camera": 157, "backward": 97, "see": 775, "have": 399, "blynk_template_id": 127, "tmpxxxxxx": 909, "blynk_template_name": 128, "device": 255, "blynk_auth_token": 124, "yourauthtoken": 998, "blynk": 123, "cloud": 179, "while": 978, "wifi": 979, "status": 842, "delay": 243, "class": 172, "char": 167, "variables": 955, "external": 331, "access": 37, "methods": 535, "try": 919, "card": 159, "init": 435, "errors": 312, "v1": 946, "wave": 968, "shield": 798, "optimize": 610, "read": 705, "some": 819, "may": 523, "timeout": 904, "forward": 361, "scroll": 767, "through": 901, "files": 344, "directory": 268, "play": 653, "wav": 967, "nss": 592, "10": 0, "dio1": 266, "nrst": 591, "repeat": 721, "after": 48, "test": 884, "pulsesensor": 690, "now": 590, "that": 889, "everything": 326, "ready": 710, "start": 837, "signal": 804, "flash": 355, "led": 482, "show": 802, "things": 897, "didn": 259, "work": 988, "reset": 730, "comment": 187, "out": 620, "order": 615, "method": 534, "parameters": 632, "must": 566, "hardware": 397, "current": 220, "write": 994, "database": 225, "provide": 687, "token": 911, "generation": 377, "process": 679, "info": 433, "rtdb": 749, "payload": 640, "printing": 675, "other": 617, "functions": 372, "examples": 328, "authentications": 88, "signinasuser": 805, "emailpassword": 292, "ino": 441, "needed": 575, "state": 838, "called": 156, "when": 975, "wifimanager": 982, "auto": 90, "generated": 376, "ssid": 834, "warning": 965, "send": 778, "report": 725, "every": 325, "status_report_interval": 843, "seconds": 772, "we": 971, "don": 279, "need": 574, "updates": 934, "frequently": 368, "there": 893, "no": 583, "ethernet": 318, "connection": 200, "dhcp": 257, "dynamic": 286, "random": 700, "static": 840, "index": 432, "path": 639, "post": 664, "message": 532, "ss": 833, "cs": 219, "us": 937, "serviceauth": 789, "required": 728, "binding": 113, "firebaseapp": 350, "authentication": 87, "handler": 396, "support": 869, "tested": 885, "14": 8, "sx1278": 874, "dio0": 265, "configure": 196, "manager": 518, "up": 932, "so": 816, "latest": 478, "sample": 759, "get": 378, "version": 956, "connect": 198, "storage": 856, "15": 10, "install": 444, "safestring": 755, "looptimer": 511, "included": 428, "using": 945, "bytes": 150, "space": 823, "tx": 923, "buffer": 142, "size": 811, "80": 29, "13": 7, "most": 557, "arduino": 67, "boards": 133, "bridge": 139, "wait": 962, "until": 931, "monitor": 554, "present": 668, "author": 89, "rob": 742, "tillaart": 902, "purpose": 691, "demo": 245, "url": 936, "end": 302, "base": 98, "prints": 677, "bits": 115, "but": 144, "what": 974, "ide": 419, "per": 644, "minutes": 544, "newer": 580, "shields": 799, "printed": 674, "sticker": 846, "check": 169, "debounce": 229, "setup": 795, "sinricpro": 810, "add": 43, "callbacks": 155, "open": 609, "leonardo": 487, "rate": 702, "byte": 149, "information": 434, "as": 76, "100": 1, "timer": 905, "please": 656, "keep": 468, "interval": 453, "than": 888, "milliseconds": 539, "ms": 564, "re": 704, "instead": 446, "irq": 459, "chip": 170, "system": 876, "stream": 859, "error": 311, "strings": 862, "save": 762, "ram": 699, "input": 442, "available": 92, "commands": 186, "stop": 855, "then": 892, "command": 185, "defines": 239, "protocol": 685, "pressed": 670, "right": 741, "power": 665, "stomp": 854, "websocket": 973, "certificate": 162, "own": 626, "kh": 471, "update": 933, "cert": 161, "2021": 20, "valid": 951, "16": 12, "les": 488, "ports": 661, "positions": 663, "eeprom": 290, "lr1110": 513, "transport": 916, "mdns": 527, "list": 501, "peter": 647, "2023": 21, "got": 389, "custom": 221, "rf": 739, "9600": 32, "second": 771, "communication": 188, "radio": 698, "argument": 73, "frequency": 367, "reconnection": 715, "third": 898, "party": 635, "since": 808, "v4": 950, "bearssl": 104, "engine": 304, "ssl": 836, "require": 727, "attach": 82, "states": 839, "necessary": 573, "libraries": 492, "few": 340, "robot": 743, "speaker": 825, "text": 886, "deprecated": 250, "echo": 288, "replaced": 724, "going": 387, "sleep": 814, "5v": 26, "pins": 650, "audio": 85, "rp2040": 747, "specified": 826, "they": 895, "sdfat": 770, "gpio": 390, "numbers": 597, "1000": 2, "added": 44, "id": 418, "name": 568, "want": 964, "modem": 550, "parameter": 631, "pixels": 652, "strip": 863, "pixel": 651, "type": 924, "khz": 472, "neopixel": 576, "products": 681, "leds": 484, "classic": 173, "fill": 346, "note": 588, "won": 987, "does": 277, "loop": 510, "samples": 761, "into": 454, "each": 287, "receive": 712, "callback": 154, "public": 688, "basic": 100, "way": 969, "definitions": 241, "lcd": 479, "interface": 448, "rows": 746, "v10": 947, "blynk_pin_forced_config": 125, "forced": 358, "cp": 215, "once": 606, "v20": 948, "blynk_pin_forced_pers_config": 126, "persistent": 646, "forever": 359, "successfully": 866, "flag": 354, "uses": 944, "still": 847, "working": 989, "upload": 935, "rtc": 748, "fat16": 334, "fat32": 335, "exfat": 329, "before": 107, "eth": 317, "uint8_t": 926, "int": 447, "suitable": 868, "character": 168, "ground": 393, "two": 922, "encoder": 301, "outputs": 622, "motor": 558, "direction": 267, "air": 51, "string": 861, "response": 733, "headers": 401, "header": 400, "attached": 83, "our": 619, "attempt": 84, "gps": 392, "modules": 553, "driver": 282, "turns": 921, "built": 143, "datalogger": 226, "turn": 920, "works": 990, "featherwing": 338, "max": 522, "brightness": 140, "take": 878, "average": 93, "readings": 707, "networks": 578, "first": 352, "which": 977, "password": 637, "auth": 86, "app": 66, "nut": 598, "icon": 417, "also": 56, "specify": 827, "com": 184, "http": 413, "hid": 407, "descriptor": 251, "tinyusb": 907, "single": 809, "press": 669, "manual": 519, "mbed": 524, "virtual": 959, "921600": 31, "globals": 383, "compatibility": 190, "style": 865, "sketches": 813, "area": 72, "intermediate": 449, "arrays": 75, "circuit": 171, "playground": 655, "mega": 529, "components": 193, "advanced": 47, "multiple": 565, "above": 35, "stm32": 848, "supported": 870, "nucleo": 594, "144": 9, "64": 28, "32": 25, "discovery": 271, "stm32f1": 849, "stm32f3": 850, "stm32f4": 851, "stm32h7": 852, "stm32l0": 853, "etc": 316, "sam": 757, "due": 285, "quality": 696, "event": 323, "dispatch": 272, "min": 540, "setupethernet": 796, "do": 276, "nothing": 589, "transitions": 914, "same": 758, "debouncing": 230, "pushbutton": 692, "www": 995, "sending": 779, "instance": 445, "packets": 628, "udp": 925, "safestring_constructoranddebugging": 756, "found": 362, "different": 260, "task": 879, "async": 77, "result": 734, "empty": 294, "again": 49, "software": 818, "compile": 191, "back": 96, "ble": 119, "changes": 165, "case": 160, "guitool": 394, "automatically": 91, "returns": 737, "position": 662, "return": 736, "already": 55, "received": 713, "strength": 860, "module": 552, "continue": 205, "switch": 872, "between": 112, "lines": 498, "button_pin": 146, "demonstrate": 246, "d2": 223, "gpio2": 391, "baud": 102, "hello": 403, "move": 560, "next": 581, "initialization": 437, "peripheral": 645, "been": 106, "copy": 210, "disable": 269, "tasks": 880, "analog": 59, "light": 495, "inputs": 443, "color": 182, "mqtt": 561, "give": 380, "station": 841, "telegram": 882, "bot": 135, "botfather": 136, "ntp": 593, "delete": 244, "std": 844, "wificlient": 981, "login": 507, "details": 253, "feed": 339, "native": 571, "variable": 954, "sensitive": 781, "secret": 773, "tab": 877, "arduino_secrets": 68, "level": 490, "changed": 164, "depending": 249, "frame": 364, "littlefs": 503, "spiffs": 830, "array": 74, "map": 521, "because": 105, "feather": 337, "based": 99, "breakout": 138, "under": 929, "ipaddress": 457, "num": 595, "de": 228, "request": 726, "sends": 780, "humidity": 415, "results": 735, "serial1": 784, "hearbeat": 402, "20": 16, "esp": 313, "ap": 64, "192": 15, "168": 13, "digital": 263, "clock": 177, "enabled": 298, "resolution": 732, "bit": 114, "slow": 815, "high": 408, "17": 14, "8080": 30, "158": 11, "dsc": 283, "series": 785, "pc1500": 641, "pc1550": 642, "pc16": 643, "readme": 708, "md": 525, "dscclassicseries": 284, "configures": 197, "keybus": 470, "depend": 248, "model": 549, "another": 61, "wifi101": 980, "something": 820, "close": 178, "too": 912, "large": 474, "minimum": 542, "image": 422, "times": 906, "where": 976, "wpa": 992, "wpa2": 993, "scores": 765, "ways": 970, "asynchttprequest": 79, "important": 425, "thing": 896, "mind": 541, "asynchronous": 78, "javascript": 463, "driven": 281, "reason": 711, "program": 682, "gathering": 375, "processing": 680, "user": 943, "registerd": 720, "blocking": 122, "channel": 166, "names": 569, "handle": 395, "page": 629, "nativeethernet": 572, "low": 512, "battery": 101, "about": 34, "11": 4, "log": 506, "enables": 299, "web": 972, "date": 227, "red": 716, "black": 116, "scl": 764, "sda": 769, "reads": 709, "hexdump": 406, "length": 486, "decimal": 233, "println": 676, "21": 23, "interrupt": 452, "images": 423, "packet": 627, "clients": 176, "unbind": 927, "resetapp": 731, "sync": 875, "via": 958, "new": 579, "definition": 240, "rgb": 740, "routine": 745, "old": 604, "tft": 887, "voor": 961, "learning": 480, "avoid": 94, "prototypes": 686, "mqttserver": 563, "broker": 141, "join": 464, "namespace": 570, "socket": 817, "io": 455, "dht": 258, "presence": 667, "events": 324, "uno": 930, "bmx280": 131, "github": 379, "2019": 19, "2024": 22, "patch": 638, "ethernet2": 319, "ethernetlarge": 321, "declare": 234, "mqtt_host": 562, "110": 5, "customizing": 222, "prompt": 684, "look": 509, "extending": 330, "mins": 543, "trigger": 917, "always": 57, "stepper": 845, "reduce": 717, "call": 153, "pulse": 689, "accelerometer": 36, "255": 24, "md_max72xx": 526, "fw": 373, "nina": 582, "query": 697, "range": 701, "options": 613, "fix": 353, "codes": 181, "draw": 280, "bmp": 129, "voltage": 960, "register": 719, "incoming": 431, "pressure": 671, "filter": 347, "initial": 436, "otherwise": 618, "part": 634, "menu": 531, "modify": 551, "construct": 204, "axis": 95, "endstop": 303, "home": 411, "far": 333, "emergency": 293, "format": 360, "calculate": 151, "lib": 491, "joystick": 465, "ethernetbonjour": 320, "free": 366, "gnu": 385, "degrees": 242, "12": 6, "implementation": 424, "sck": 763, "mosi": 556, "miso": 545, "begin_spi": 109, "includes": 429, "objects": 600, "ensure": 305, "colors": 183, "buttons": 147, "field": 341, "allow": 53, "longer": 508, "shorter": 800, "three": 900, "internally": 451, "hold": 410, "eduintro": 289, "adafruit_imagereader": 41, "loading": 504, "dimensions": 264, "root": 744, "wales": 963, "additional": 45, "security": 774, "led_builtin": 483, "src": 832, "zero": 999, "lis": 500, "setfullscalerange": 791, "pre": 666, "find": 348, "pwm_pin": 695, "dig_pin_a": 261, "dig_pin_b": 262, "listen": 502, "allows": 54, "such": 867, "microcontroller": 536, "workshop": 991, "a0": 33, "blink": 120, "spdx": 824, "filecopyrighttext": 343, "shawn": 797, "silverman": 806, "pobox": 657, "identifier": 420, "agpl": 50, "later": 477, "tls": 908, "complete": 192, "arduinolearningboard": 70, "including": 430, "firmware": 351, "domain": 278, "linker": 499, "ping": 649, "point": 658, "regex": 718, "serve": 786, "missing": 546, "pages": 630, "lunasat": 514, "fcm": 336, "1024": 3, "larger": 475, "parrot": 633, "cpp": 216, "sets": 792, "block": 121, "versions": 957, "transmission": 915, "rx": 753, "running": 751, "wire": 984, "correct": 213, "design": 252, "epd_dc": 309, "epd_reset": 310, "epd_cs": 308, "sram_cs": 831, "epd_busy": 307, "body": 134, "detection": 254, "gmotor": 384, "use_this_ss_pin": 941, "midi": 537, "selected": 777, "disabled": 270, "last": 476}, "idf": [3.4769111760118028, 6.212644805862429, 6.67217713524087, 6.518026455413612, 5.4435117183245625, 6.212644805862429, 5.789787955042396, 5.225258152304544, 5.938207960160669, 4.20125672742761, 5.7558864033667145, 6.021589569099721, 5.2652634869182435, 4.922977280431611, 5.979029954680925, 4.9375760798527635, 5.979029954680925, 6.323870440972654, 6.112561347305447, 6.384495062789089, 6.518026455413612, 6.066041331670554, 5.938207960160669, 6.384495062789089, 6.212644805862429, 4.166651198250134, 6.592134427567333, 5.046209920855559, 4.159871511264756, 6.384495062789089, 5.546165872384646, 6.266712027132706, 5.979029954680925, 6.44903358392666, 6.323870440972654, 5.468204330914934, 6.212644805862429, 6.161351511474879, 4.259243985077958, 6.384495062789089, 4.420885336634375, 6.021589569099721, 6.8544986920348245, 4.894403907987555, 5.546165872384646, 6.266712027132706, 3.6002557233293326, 6.212644805862429, 4.41215165666562, 5.979029954680925, 6.384495062789089, 6.161351511474879, 3.6974982708847115, 6.323870440972654, 6.323870440972654, 5.350421295258551, 5.372894151110609, 6.266712027132706, 3.529462671338233, 5.6017357235394565, 2.0855104208173385, 6.212644805862429, 4.624484291875614, 6.518026455413612, 6.323870440972654, 4.967429043002445, 4.853018691824701, 3.763456238676509, 6.112561347305447, 6.161351511474879, 6.67217713524087, 3.7409833828244503, 5.979029954680925, 6.67217713524087, 5.062739222806769, 6.161351511474879, 3.9048103569822405, 5.861246919024541, 6.44903358392666, 6.44903358392666, 3.7864457569012075, 5.789787955042396, 6.212644805862429, 5.4435117183245625, 5.66057622356239, 5.079546341123151, 4.63529520797983, 5.131732094293721, 6.212644805862429, 5.6017357235394565, 5.898987247007388, 6.112561347305447, 5.419414166745502, 6.44903358392666, 5.419414166745502, 5.938207960160669, 5.5735648465727605, 6.266712027132706, 6.323870440972654, 5.2652634869182435, 6.021589569099721, 6.7591885122305, 6.112561347305447, 3.052290552613885, 6.518026455413612, 5.861246919024541, 6.384495062789089, 4.853018691824701, 3.9048103569822405, 6.8544986920348245, 4.075679420044407, 6.066041331670554, 5.149750599796399, 5.5735648465727605, 5.979029954680925, 6.266712027132706, 6.384495062789089, 6.066041331670554, 5.5735648465727605, 6.44903358392666, 6.384495062789089, 6.384495062789089, 6.266712027132706, 4.336802219423833, 4.826350444742539, 5.029949399983779, 5.046209920855559, 4.702736488775363, 4.762634630356431, 5.630723260412709, 6.67217713524087, 6.7591885122305, 4.237102859200745, 3.529462671338233, 6.67217713524087, 6.161351511474879, 6.323870440972654, 6.161351511474879, 6.021589569099721, 6.518026455413612, 6.8544986920348245, 6.7591885122305, 4.9375760798527635, 5.419414166745502, 5.046209920855559, 4.120131182615241, 6.212644805862429, 5.938207960160669, 3.9259751681742836, 5.861246919024541, 5.898987247007388, 6.384495062789089, 6.44903358392666, 5.6017357235394565, 4.750364537764617, 5.898987247007388, 5.225258152304544, 6.066041331670554, 3.4701084286890502, 4.998200701669198, 5.372894151110609, 6.8544986920348245, 6.021589569099721, 4.075679420044407, 5.861246919024541, 5.898987247007388, 5.6913478822291435, 5.824879274853666, 6.44903358392666, 4.039089972612115, 5.66057622356239, 6.161351511474879, 5.013949058637338, 6.066041331670554, 4.702736488775363, 4.493644690916803, 6.44903358392666, 5.789787955042396, 6.323870440972654, 5.013949058637338, 3.889225625965542, 6.161351511474879, 5.350421295258551, 5.898987247007388, 4.775057150354989, 6.212644805862429, 5.723096580543724, 5.519497625302485, 5.205840066447443, 4.853018691824701, 6.212644805862429, 6.112561347305447, 6.44903358392666, 5.6913478822291435, 4.244428899292818, 4.894403907987555, 5.096640774482451, 5.789787955042396, 3.9048103569822405, 3.96412693413866, 3.829207616239289, 4.297271380667198, 4.139803948213946, 5.6017357235394565, 6.212644805862429, 5.131732094293721, 4.813278363175186, 4.2742818624425, 6.323870440972654, 5.630723260412709, 5.979029954680925, 5.029949399983779, 5.66057622356239, 6.021589569099721, 6.112561347305447, 5.046209920855559, 6.518026455413612, 4.173477163320534, 4.447553583716536, 4.328770047726569, 5.630723260412709, 5.6017357235394565, 6.323870440972654, 6.518026455413612, 3.3794314618062136, 6.112561347305447, 6.95985920769265, 6.021589569099721, 6.44903358392666, 6.161351511474879, 6.44903358392666, 4.133203264182594, 4.289549334573287, 6.67217713524087, 6.112561347305447, 3.5045946047602197, 6.266712027132706, 2.9791396709782703, 5.079546341123151, 6.112561347305447, 5.723096580543724, 5.6017357235394565, 6.95985920769265, 4.922977280431611, 6.384495062789089, 5.079546341123151, 6.592134427567333, 5.28588277412098, 6.44903358392666, 6.323870440972654, 5.979029954680925, 6.67217713524087, 6.67217713524087, 6.112561347305447, 6.8544986920348245, 4.113658668109624, 5.861246919024541, 5.468204330914934, 6.518026455413612, 4.83959567149256, 5.630723260412709, 6.95985920769265, 6.95985920769265, 5.519497625302485, 6.021589569099721, 5.245060779600724, 5.7558864033667145, 5.723096580543724, 5.7558864033667145, 5.979029954680925, 6.8544986920348245, 4.229830099871665, 6.323870440972654, 4.222609851898179, 5.66057622356239, 4.702736488775363, 4.726266986185557, 6.266712027132706, 6.384495062789089, 4.377960291917341, 6.161351511474879, 6.384495062789089, 6.021589569099721, 6.266712027132706, 6.323870440972654, 4.180350042608296, 5.5735648465727605, 5.029949399983779, 5.7558864033667145, 6.266712027132706, 5.824879274853666, 5.6017357235394565, 6.384495062789089, 6.323870440972654, 5.861246919024541, 6.323870440972654, 4.592735593561034, 5.979029954680925, 5.938207960160669, 6.44903358392666, 6.518026455413612, 6.161351511474879, 5.861246919024541, 6.323870440972654, 6.518026455413612, 6.8544986920348245, 3.819545705327552, 6.8544986920348245, 6.8544986920348245, 6.8544986920348245, 6.8544986920348245, 5.11403251719432, 6.161351511474879, 4.826350444742539, 4.512692885887498, 5.046209920855559, 4.146448490932615, 6.266712027132706, 4.057217357204672, 6.112561347305447, 6.95985920769265, 6.066041331670554, 4.522354796799235, 5.096640774482451, 6.323870440972654, 4.139803948213946, 5.824879274853666, 3.6119063405493077, 6.066041331670554, 6.7591885122305, 6.518026455413612, 5.546165872384646, 4.328770047726569, 6.161351511474879, 6.7591885122305, 6.7591885122305, 7.077642243349034, 6.592134427567333, 6.44903358392666, 6.7591885122305, 5.7558864033667145, 6.7591885122305, 3.9585867537630444, 6.266712027132706, 5.4435117183245625, 5.979029954680925, 6.212644805862429, 6.518026455413612, 6.266712027132706, 4.9375760798527635, 5.372894151110609, 6.8544986920348245, 4.9375760798527635, 6.384495062789089, 4.894403907987555, 4.714432528538554, 3.62369429630135, 1.9962378783645711, 5.013949058637338, 4.738243177232272, 6.384495062789089, 5.789787955042396, 6.518026455413612, 5.723096580543724, 6.212644805862429, 5.789787955042396, 6.518026455413612, 5.938207960160669, 5.789787955042396, 3.128805264798172, 6.67217713524087, 3.894393596123985, 4.493644690916803, 6.8544986920348245, 5.6913478822291435, 6.44903358392666, 6.592134427567333, 5.66057622356239, 3.8840842264651236, 6.518026455413612, 6.161351511474879, 6.44903358392666, 6.021589569099721, 6.112561347305447, 7.365324315800815, 6.44903358392666, 4.908588542979511, 6.112561347305447, 4.56196393489428, 6.323870440972654, 6.518026455413612, 6.592134427567333, 5.938207960160669, 6.67217713524087, 6.95985920769265, 5.66057622356239, 4.998200701669198, 4.813278363175186, 3.980934052455041, 4.312896698570279, 6.112561347305447, 6.112561347305447, 6.518026455413612, 6.7591885122305, 5.245060779600724, 3.9753002347367854, 6.7591885122305, 6.518026455413612, 5.493522138899224, 4.714432528538554, 6.44903358392666, 6.266712027132706, 4.133203264182594, 4.465735902799727, 3.947597632187449, 6.112561347305447, 4.826350444742539, 5.350421295258551, 5.2652634869182435, 5.898987247007388, 6.212644805862429, 2.987473052537414, 5.468204330914934, 5.861246919024541, 6.384495062789089, 5.546165872384646, 2.6755066557524394, 3.5586618260304954, 5.350421295258551, 6.44903358392666, 6.44903358392666, 6.161351511474879, 5.6017357235394565, 5.306936183318812, 6.021589569099721, 5.168099738464596, 6.021589569099721, 5.350421295258551, 3.3579911305683443, 5.723096580543724, 6.112561347305447, 4.603206893428329, 4.63529520797983, 6.384495062789089, 6.323870440972654, 5.046209920855559, 5.306936183318812, 5.630723260412709, 5.046209920855559, 6.161351511474879, 5.861246919024541, 6.384495062789089, 5.2652634869182435, 6.021589569099721, 5.029949399983779, 5.66057622356239, 3.6080077001336504, 4.8666243438804795, 5.861246919024541, 6.112561347305447, 2.6017268932182054, 3.5010919742090176, 6.161351511474879, 6.323870440972654, 6.066041331670554, 6.67217713524087, 5.723096580543724, 4.603206893428329, 4.592735593561034, 4.613789002758866, 6.112561347305447, 6.066041331670554, 6.592134427567333, 6.384495062789089, 5.898987247007388, 6.021589569099721, 6.44903358392666, 6.161351511474879, 6.021589569099721, 5.6017357235394565, 7.077642243349034, 5.546165872384646, 4.377960291917341, 6.44903358392666, 6.518026455413612, 6.021589569099721, 5.824879274853666, 6.212644805862429, 7.54764587259477, 5.2652634869182435, 5.66057622356239, 6.323870440972654, 4.420885336634375, 2.8766879460686754, 4.982696515133233, 6.323870440972654, 5.11403251719432, 4.592735593561034, 5.7558864033667145, 5.938207960160669, 6.8544986920348245, 6.161351511474879, 6.384495062789089, 6.592134427567333, 6.021589569099721, 4.069487449796487, 6.67217713524087, 6.384495062789089, 6.592134427567333, 5.7558864033667145, 5.029949399983779, 6.518026455413612, 5.186791871476749, 6.384495062789089, 6.518026455413612, 4.088179582808639, 4.800374958339278, 4.952391165637904, 5.7558864033667145, 6.384495062789089, 5.723096580543724, 5.979029954680925, 5.824879274853666, 5.11403251719432, 6.518026455413612, 6.212644805862429, 6.112561347305447, 6.67217713524087, 6.518026455413612, 6.323870440972654, 4.289549334573287, 6.066041331670554, 4.403493593922505, 4.237102859200745, 6.266712027132706, 5.861246919024541, 6.161351511474879, 6.44903358392666, 5.4435117183245625, 6.518026455413612, 6.112561347305447, 6.44903358392666, 6.323870440972654, 6.518026455413612, 6.44903358392666, 6.066041331670554, 6.384495062789089, 5.630723260412709, 5.11403251719432, 5.7558864033667145, 6.112561347305447, 6.212644805862429, 4.541963268187611, 5.938207960160669, 4.657274114698605, 4.394909850231114, 6.021589569099721, 5.861246919024541, 5.029949399983779, 6.212644805862429, 6.384495062789089, 5.5735648465727605, 6.323870440972654, 7.211173635973557, 6.518026455413612, 5.468204330914934, 4.646224278512021, 5.824879274853666, 5.149750599796399, 6.518026455413612, 6.112561347305447, 6.384495062789089, 5.328442388539775, 5.225258152304544, 4.353062740295614, 5.013949058637338, 6.266712027132706, 3.6041242001072527, 5.723096580543724, 4.775057150354989, 6.161351511474879, 5.824879274853666, 6.8544986920348245, 4.353062740295614, 3.581134681882554, 6.161351511474879, 6.021589569099721, 3.5925633777061767, 4.702736488775363, 5.493522138899224, 4.8666243438804795, 5.6017357235394565, 4.826350444742539, 6.161351511474879, 4.159871511264756, 6.44903358392666, 4.057217357204672, 5.979029954680925, 5.350421295258551, 4.081909969795044, 6.518026455413612, 5.186791871476749, 2.6801114221391877, 5.079546341123151, 6.44903358392666, 2.8748170381328637, 4.045095996672327, 4.113658668109624, 3.889225625965542, 4.259243985077958, 6.518026455413612, 6.67217713524087, 4.63529520797983, 5.861246919024541, 3.1706317797444328, 5.861246919024541, 5.519497625302485, 4.139803948213946, 6.161351511474879, 5.2652634869182435, 4.775057150354989, 4.3448994296564525, 6.384495062789089, 5.519497625302485, 5.493522138899224, 5.2652634869182435, 5.824879274853666, 6.67217713524087, 6.384495062789089, 6.67217713524087, 6.518026455413612, 5.861246919024541, 5.225258152304544, 6.518026455413612, 5.66057622356239, 6.212644805862429, 4.894403907987555, 4.894403907987555, 5.979029954680925, 6.518026455413612, 4.787635932561849, 6.323870440972654, 6.323870440972654, 6.323870440972654, 5.205840066447443, 6.95985920769265, 5.013949058637338, 6.323870440972654, 3.041191659545836, 6.67217713524087, 4.120131182615241, 6.384495062789089, 6.44903358392666, 5.938207960160669, 5.7558864033667145, 6.384495062789089, 5.493522138899224, 6.384495062789089, 5.898987247007388, 3.9922978111053564, 4.522354796799235, 6.161351511474879, 6.161351511474879, 6.592134427567333, 6.384495062789089, 4.750364537764617, 6.44903358392666, 6.066041331670554, 5.938207960160669, 5.2652634869182435, 5.6913478822291435, 6.44903358392666, 5.6017357235394565, 3.9980284858143413, 5.938207960160669, 5.419414166745502, 5.66057622356239, 5.979029954680925, 6.518026455413612, 5.395883669335308, 6.021589569099721, 6.95985920769265, 5.328442388539775, 4.484254950566964, 6.266712027132706, 6.518026455413612, 6.066041331670554, 5.519497625302485, 5.861246919024541, 5.979029954680925, 6.44903358392666, 6.021589569099721, 6.384495062789089, 4.657274114698605, 5.66057622356239, 6.95985920769265, 6.161351511474879, 5.789787955042396, 5.898987247007388, 5.5735648465727605, 5.149750599796399, 6.266712027132706, 5.395883669335308, 6.161351511474879, 4.826350444742539, 3.9259751681742836, 5.245060779600724, 5.6017357235394565, 6.212644805862429, 6.066041331670554, 6.021589569099721, 6.384495062789089, 6.112561347305447, 5.306936183318812, 5.468204330914934, 6.212644805862429, 6.266712027132706, 6.44903358392666, 6.95985920769265, 6.518026455413612, 5.898987247007388, 6.44903358392666, 5.6017357235394565, 5.66057622356239, 6.066041331670554, 5.395883669335308, 5.28588277412098, 6.066041331670554, 5.149750599796399, 4.83959567149256, 4.009589308215418, 5.979029954680925, 6.518026455413612, 5.205840066447443, 5.493522138899224, 6.518026455413612, 6.592134427567333, 6.384495062789089, 5.5735648465727605, 6.384495062789089, 6.67217713524087, 6.44903358392666, 6.021589569099721, 6.066041331670554, 5.350421295258551, 6.021589569099721, 6.384495062789089, 5.979029954680925, 5.861246919024541, 5.546165872384646, 4.3208018780773925, 6.323870440972654, 5.11403251719432, 6.112561347305447, 5.789787955042396, 5.824879274853666, 6.212644805862429, 4.229830099871665, 5.519497625302485, 5.546165872384646, 5.789787955042396, 6.161351511474879, 4.762634630356431, 6.066041331670554, 6.8544986920348245, 6.384495062789089, 5.079546341123151, 6.8544986920348245, 4.56196393489428, 6.8544986920348245, 5.898987247007388, 5.205840066447443, 4.244428899292818, 6.066041331670554, 6.384495062789089, 4.297271380667198, 3.829207616239289, 6.8544986920348245, 3.9585867537630444, 6.066041331670554, 6.266712027132706, 5.898987247007388, 4.003792190531091, 2.880440295687226, 5.789787955042396, 6.266712027132706, 6.44903358392666, 3.5222941818596207, 5.824879274853666, 6.161351511474879, 3.2571864314463785, 6.95985920769265, 6.021589569099721, 5.493522138899224, 3.7233617814746305, 3.62369429630135, 6.066041331670554, 6.384495062789089, 4.512692885887498, 6.066041331670554, 6.67217713524087, 4.56196393489428, 5.395883669335308, 4.603206893428329, 5.079546341123151, 6.384495062789089, 6.384495062789089, 5.079546341123151, 5.395883669335308, 5.6913478822291435, 6.066041331670554, 5.2652634869182435, 4.180350042608296, 6.161351511474879, 6.7591885122305, 6.592134427567333, 4.8666243438804795, 5.938207960160669, 5.372894151110609, 4.551913599040779, 5.898987247007388, 5.66057622356239, 5.350421295258551, 6.44903358392666, 6.266712027132706, 6.266712027132706, 5.824879274853666, 5.979029954680925, 5.372894151110609, 4.702736488775363, 6.266712027132706, 6.8544986920348245, 6.8544986920348245, 4.551913599040779, 4.668447415296731, 5.66057622356239, 5.28588277412098, 3.878969125798353, 5.168099738464596, 5.861246919024541, 4.880417666012815, 6.323870440972654, 4.813278363175186, 5.789787955042396, 6.67217713524087, 6.44903358392666, 6.161351511474879, 5.861246919024541, 4.1942391547689635, 4.229830099871665, 4.229830099871665, 4.229830099871665, 4.229830099871665, 4.229830099871665, 6.7591885122305, 5.723096580543724, 6.161351511474879, 4.726266986185557, 5.306936183318812, 5.938207960160669, 6.266712027132706, 5.079546341123151, 6.592134427567333, 6.67217713524087, 5.28588277412098, 5.979029954680925, 4.998200701669198, 6.67217713524087, 6.384495062789089, 4.967429043002445, 4.126645863636435, 5.306936183318812, 5.6017357235394565, 6.518026455413612, 5.468204330914934, 5.630723260412709, 5.6913478822291435, 6.266712027132706, 6.266712027132706, 5.395883669335308, 5.861246919024541, 3.7864457569012075, 6.266712027132706, 5.11403251719432, 4.377960291917341, 5.395883669335308, 5.7558864033667145, 5.350421295258551, 6.518026455413612, 3.819545705327552, 1.5208141816494964, 5.11403251719432, 5.225258152304544, 4.592735593561034, 4.572116306358298, 6.384495062789089, 6.066041331670554, 6.266712027132706, 5.7558864033667145, 2.741986825857275, 5.6017357235394565, 5.186791871476749, 6.021589569099721, 3.899588413001089, 5.979029954680925, 5.519497625302485, 6.112561347305447, 6.44903358392666, 6.67217713524087, 4.762634630356431, 1.6422840245401997, 4.522354796799235, 6.518026455413612, 6.384495062789089, 6.44903358392666, 6.44903358392666, 6.95985920769265, 6.384495062789089, 4.039089972612115, 5.328442388539775, 5.149750599796399, 6.7591885122305, 5.306936183318812, 6.592134427567333, 5.419414166745502, 6.592134427567333, 6.44903358392666, 5.979029954680925, 4.512692885887498, 5.898987247007388, 5.519497625302485, 4.493644690916803, 4.3208018780773925, 5.328442388539775, 5.519497625302485, 6.67217713524087, 5.079546341123151, 5.979029954680925, 4.775057150354989, 4.922977280431611, 2.640890708985906, 6.95985920769265, 4.081909969795044, 5.225258152304544, 5.079546341123151, 3.5258720032075046, 5.493522138899224, 4.982696515133233, 5.046209920855559, 5.149750599796399, 6.384495062789089, 6.384495062789089, 4.3208018780773925, 4.113658668109624, 5.4435117183245625, 5.096640774482451, 5.6913478822291435, 6.518026455413612, 5.979029954680925, 6.323870440972654, 6.212644805862429, 7.211173635973557, 3.9585867537630444, 6.266712027132706, 5.079546341123151, 5.6017357235394565, 4.775057150354989, 6.44903358392666, 6.518026455413612, 6.592134427567333, 6.323870440972654, 3.7321337675474675, 6.066041331670554, 4.998200701669198, 5.519497625302485, 3.894393596123985, 6.212644805862429, 5.186791871476749, 4.952391165637904, 3.562372405427031, 6.44903358392666, 6.44903358392666, 5.861246919024541, 3.443350979519501, 6.066041331670554, 2.9770671313762973, 5.419414166745502, 6.44903358392666, 4.967429043002445, 5.630723260412709, 5.7558864033667145, 6.323870440972654, 6.518026455413612, 6.44903358392666, 5.013949058637338, 7.54764587259477, 3.017199232802615, 2.775267767622772, 4.826350444742539, 6.266712027132706], "paths": ["arduino_code/AsyncMultiWebServer_ESP32_ENC.ino", "arduino_code/Clear.ino", "arduino_code/AsyncMultiWebServer.ino", "arduino_code/JsonParserExample.ino", "arduino_code/wifi_downlink_control.ino", "arduino_code/simpleCelsius.ino", "arduino_code/IrSenderNonModInvert.ino", "arduino_code/Capacitive_Calibration.ino", "arduino_code/BMP280_I2C_Normal.ino", "arduino_code/VolumeRamp.ino", "arduino_code/IrReceiverPoll.ino", "arduino_code/onoffbutton.ino", "arduino_code/PowerSensor.ino", "arduino_code/volumeSlide02.ino", "arduino_code/arduino-test.ino", "arduino_code/BMP280_SPI_Normal_Multiple.ino", "arduino_code/Async_ConfigOnDoubleReset.ino", "arduino_code/ServiceAuthFile.ino", "arduino_code/SX126x_PingPong.ino", "arduino_code/Autonomous_Car.ino", "arduino_code/ESP8266_ESP32.ino", "arduino_code/Issue85.ino", "arduino_code/SafeStringsInClasses_1.ino", "arduino_code/SoftVolumeHC.ino", "arduino_code/SX128x_Channel_Activity_Detection_Blocking.ino", "arduino_code/FFT_02.ino", "arduino_code/PulseSensorLIbrary_V2_System_Test.ino", "arduino_code/mifare1k_dump_spi.ino", "arduino_code/CS5490_AC_Current_Gain_Tuning_demo.ino", "arduino_code/DatabaseRules.ino", "arduino_code/AutoConnectWithFeedbackLED.ino", "arduino_code/DHT11ESP8266_Debug.ino", "arduino_code/DweetPost_LAN8720.ino", "arduino_code/Generic_WebSocketServer_EthernetENC.ino", "arduino_code/SetIamPolicy.ino", "arduino_code/Async_ConfigPortalParamsOnSwitch.ino", "arduino_code/LCD_Menu_Joystick.ino", "arduino_code/APRS_Position_LoRa.ino", "arduino_code/PulseSensor_UNO_R4_WiFi_LEDmatrix_Plotter.ino", "arduino_code/WriteToDashboard_ESP32.ino", "arduino_code/Input_Blink_Tasks.ino", "arduino_code/MailboxReadMessage.ino", "arduino_code/uvi_demo.ino", "arduino_code/Print64Test.ino", "arduino_code/EsploraRemote.ino", "arduino_code/HeartRate.ino", "arduino_code/Teensy41_NoteOnOffEverySec.ino", "arduino_code/DebounceUsingTimeout.ino", "arduino_code/MultiSwitch_beginner.ino", "arduino_code/withoutLib_HS.ino", "arduino_code/SetupAndTeardownTest.ino", "arduino_code/Wave.ino", "arduino_code/bitmapdraw_featherwing.ino", "arduino_code/append.ino", "arduino_code/SafeString_read.ino", "arduino_code/OverdriveMode.ino", "arduino_code/Infrared_Send.ino", "arduino_code/WebSocketClientStomp_NINA.ino", "arduino_code/SecuredTwoWay-Esp8266-Client.ino", "arduino_code/Async_AutoConnect.ino", "arduino_code/Programme5.ino", "arduino_code/LR11x0_LR_FHSS_Modem.ino", "arduino_code/WebSocketClient_Sticky_SocketIO_NINA.ino", "arduino_code/DCCEXProtocol_mDNS.ino", "arduino_code/BHYFirmwareUpdate.ino", "arduino_code/RF_Recieve.ino", "arduino_code/LegacyTokenAuthen.ino", "arduino_code/MouseController.ino", "arduino_code/t6iot_basic.ino", "arduino_code/R08_Remote_Control.ino", "arduino_code/Orientation.ino", "arduino_code/Portenta_H7_WebSocketClient.ino", "arduino_code/LowPowerButton.ino", "arduino_code/qtpy_audio_bff_example.ino", "arduino_code/Generic_WebSocketClient_EthernetENC.ino", "arduino_code/Table_Simple.ino", "arduino_code/BlynkHTTPClient.ino", "arduino_code/NeoPixel_strandtest.ino", "arduino_code/SimpleServerEsp32.ino", "arduino_code/IRrecvDumpV2.ino", "arduino_code/EEPROM.ino", "arduino_code/Microphone.ino", "arduino_code/Azure_IoT_Hub_WiFi.ino", "arduino_code/Blynk.ino", "arduino_code/Generic_WebSocketClient_W5500.ino", "arduino_code/ButtonStates.ino", "arduino_code/Example1_AsyncWebServer.ino", "arduino_code/COMonitoringWITHFNN.ino", "arduino_code/Cursor.ino", "arduino_code/drum06.ino", "arduino_code/DHT11_W5100.ino", "arduino_code/TeensyRtcTimestamp.ino", "arduino_code/Analog_input_4_20mA.ino", "arduino_code/AsyncMultiWebServer_WT32_ETH01.ino", "arduino_code/mqtt_publish_large.ino", "arduino_code/quadalphanum_mini.ino", "arduino_code/matrix16x8.ino", "arduino_code/EthernetENC_Blynk_SAM_DUE.ino", "arduino_code/encoderMotorRPM.ino", "arduino_code/BSEC2GasScannerClassify.ino", "arduino_code/Generic_WebSocketServerHttpHeaderValidation_WiFiNINA.ino", "arduino_code/MQTT_ThingStream_LAN8720.ino", "arduino_code/SX128x_FLRC_Modem.ino", "arduino_code/GPS_HardwareSerial_LOCUS_Status.ino", "arduino_code/Example1_Basic_Readings.ino", "arduino_code/Example2_Presence_Sensing.ino", "arduino_code/Connect_WiFiNINA.ino", "arduino_code/ConfigOnDoubleReset.ino", "arduino_code/Generic_WebSocketClient_WiFiNINA.ino", "arduino_code/Arduino_WiFi_Shield.ino", "arduino_code/ModbusRTUClientToggle.ino", "arduino_code/more_drivers.ino", "arduino_code/Test_Motor_Communication.ino", "arduino_code/Energia_Ethernet.ino", "arduino_code/WebServerFreeRTOS.ino", "arduino_code/hid_boot_mouse.ino", "arduino_code/IrWidgetAggregating.ino", "arduino_code/GetData.ino", "arduino_code/BellModem_Transmit.ino", "arduino_code/ESP8266_WebSocketServerHttpHeaderValidation.ino", "arduino_code/magic_wand_M5StackFire.ino", "arduino_code/mega_demo.ino", "arduino_code/Generic_Ethernet_AQSensor_GP2Y1014AU0F.ino", "arduino_code/nRF52_Ethernet_MotionSensor.ino", "arduino_code/squarelinestudio_lvgl_v8.ino", "arduino_code/roboface.ino", "arduino_code/PraktikSerial2Arah.ino.ino", "arduino_code/UDPSendReceiveString.ino", "arduino_code/CAN_write.ino", "arduino_code/SafeStringSubstring.ino", "arduino_code/adt7410test.ino", "arduino_code/NoAuth.ino", "arduino_code/ReadPressure.ino", "arduino_code/StandardFirmataBLE.ino", "arduino_code/SafeStringCaseChanges.ino", "arduino_code/PassThroughMono.ino", "arduino_code/SafeStringIndexOf.ino", "arduino_code/ESP32_WebSocketClientSSL.ino", "arduino_code/DisplayReadings.ino", "arduino_code/drum02.ino", "arduino_code/AsyncCaptivePortal.ino", "arduino_code/02_Record_Replay_challenge.ino", "arduino_code/SdFat_ReadWrite.ino", "arduino_code/A4990MotorShieldDemo.ino", "arduino_code/GetYahooWeatherReport.ino", "arduino_code/W5500_Blynk_Email_SAMD.ino", "arduino_code/ESP32_LTE_Demo.ino", "arduino_code/HelloKeypad.ino", "arduino_code/WiFi_Ethernet_Complex_ESP32.ino", "arduino_code/ECCX08HMAC.ino", "arduino_code/ALB_Serial1.ino", "arduino_code/SensorTagButton.ino", "arduino_code/Scheduler_example15_STDFunction.ino", "arduino_code/AnalogLogger.ino", "arduino_code/CameraCapture.ino", "arduino_code/WebServer_NativeEthernet.ino", "arduino_code/analog_sensors.ino", "arduino_code/ESP8266-OTA.ino", "arduino_code/ChannelPost.ino", "arduino_code/FlashMemSprite.ino", "arduino_code/mqtt_arbitrary_data.ino", "arduino_code/Arduino_Ethernet2.ino", "arduino_code/sfStream.ino", "arduino_code/DCCEXProtocol_Basic.ino", "arduino_code/WiFiClient.ino", "arduino_code/GettingStartedProject.ino", "arduino_code/GsmWebServer.ino", "arduino_code/MQTTS_ThingStream.ino", "arduino_code/RF69_Receive_Interrupt.ino", "arduino_code/PraktikArduinoPushButton1.ino", "arduino_code/Generic_Ethernet_ContactSensor.ino", "arduino_code/Scheduler_example00_Blink.ino", "arduino_code/PhotoFromURL.ino", "arduino_code/AsyncFSWebServer_Complex.ino", "arduino_code/AVR_MinMemUsage.ino", "arduino_code/SAMD_Ethernet_Light.ino", "arduino_code/ESP32_BLE.ino", "arduino_code/arcada_menu_test.ino", "arduino_code/ALB_Stepper.ino", "arduino_code/ADKTerminalTest.ino", "arduino_code/SAMD_Ethernet_AQSensor_GP2Y1014AU0F.ino", "arduino_code/test_drive.ino", "arduino_code/combined-example.ino", "arduino_code/ina_poweroled.ino", "arduino_code/i2c_MAG3110.ino", "arduino_code/Generic_WebSocketServerAllFunctionsDemo_WiFiNINA.ino", "arduino_code/Generic_WebSocketServerAllFunctionsDemo_EthernetENC.ino", "arduino_code/JsonGeneratorExample.ino", "arduino_code/kleurentest.ino", "arduino_code/ModbusRTUTemperatureSensor.ino", "arduino_code/EsploraTemperatureSensor.ino", "arduino_code/BlynkNCP_LowLevel.ino", "arduino_code/STM32_ESP8266Shield.ino", "arduino_code/SX127x_Transmit_Blocking.ino", "arduino_code/adc.ino", "arduino_code/Edgent_ESP8266.ino", "arduino_code/OTASketchDownloadWifi.ino", "arduino_code/Generic_WebSocketClientSocketIO_EthernetENC.ino", "arduino_code/nRF52_Ethernet_MultiSwitch_beginner.ino", "arduino_code/ArduinoIoTCloud-Callbacks.ino", "arduino_code/03LED_Fade.ino", "arduino_code/msc_internal_flash_samd.ino", "arduino_code/Telegram.ino", "arduino_code/magic_wand_M5StickC.ino", "arduino_code/AsyncUDPServer.ino", "arduino_code/select.ino", "arduino_code/post.ino", "arduino_code/EthernetModbusServerLED.ino", "arduino_code/IsTimeSet.ino", "arduino_code/gesture_sensor.ino", "arduino_code/WiFiEspAtBlynk.ino", "arduino_code/EthernetWebServer_BigData.ino", "arduino_code/CameraCaptureRawBytes.ino", "arduino_code/MakeVoiceCall.ino", "arduino_code/mqttCommand.ino", "arduino_code/PrintBenchmarkSD.ino", "arduino_code/AccessoryShieldMouse.ino", "arduino_code/DCCEXProtocol_Track_type.ino", "arduino_code/01_creating_a_button.ino", "arduino_code/ConnectionTest.ino", "arduino_code/WebLed.ino", "arduino_code/ntag213_dump.ino", "arduino_code/AFSK_Tone.ino", "arduino_code/HueBlink_LAN8720.ino", "arduino_code/OBD_Processor.ino", "arduino_code/WiFiModbusServerLED.ino", "arduino_code/AsyncHTTPRequest_ESP_WiFiManager.ino", "arduino_code/AsyncTCP.ino", "arduino_code/Generic_Ethernet_TV.ino", "arduino_code/ESPAsyncWebServer.ino", "arduino_code/timers_pwmout.ino", "arduino_code/ConfigOnMRD_ESP32_minimal.ino", "arduino_code/MultiKey.ino", "arduino_code/Teensy_WebSocketClientStompOverSockJs_WiFiNINA.ino", "arduino_code/VirtualKeypad-Web.ino", "arduino_code/BatteryMonitor.ino", "arduino_code/StandardFirmataEthernet.ino", "arduino_code/TeensySdioLogger.ino", "arduino_code/PiSpeakHC.ino", "arduino_code/Esp32-Server.ino", "arduino_code/MonitorCSI.ino", "arduino_code/Temp_probes_Thermocouples.ino", "arduino_code/ControlAssist-BrowserLog.ino", "arduino_code/RS485_fullduplex.ino", "arduino_code/Date.ino", "arduino_code/AM2315_ESP8266.ino", "arduino_code/FlashLED.ino", "arduino_code/WIO_Terminal_DoorBell.ino", "arduino_code/05LCD_SimpleModePushing.ino", "arduino_code/WebSocketClientSSL_WiFi101.ino", "arduino_code/DHT12_test_RP2040.ino", "arduino_code/custom_character_generator.ino", "arduino_code/ControlLedBuiltIn.ino", "arduino_code/FFT_mic.ino", "arduino_code/WIO_Terminal_GarageDoor.ino", "arduino_code/ProjectUVBlocking.ino", "arduino_code/SafeString_readUntil.ino", "arduino_code/Generic_Ethernet_DoorBell.ino", "arduino_code/Example7_Basic_Readings_Interrupts.ino", "arduino_code/ToxicFacilitiesSearch.ino", "arduino_code/Generic_WebSocketClientSocketIO_W5500.ino", "arduino_code/Sparkfun_Blynk_Board.ino", "arduino_code/discrete_system.ino", "arduino_code/Read.ino", "arduino_code/EdgeImpulse_FOMO_NO_PSRAM.ino", "arduino_code/RawDataAdvertising.ino", "arduino_code/WebSocketServer.ino", "arduino_code/RunQuery.ino", "arduino_code/tempoAdd01.ino", "arduino_code/Pico.ino", "arduino_code/L298NX2-No-Enable.ino", "arduino_code/Generic_WiFiNINA_AQSensor.ino", "arduino_code/WebSocketServerAllFunctionsDemo.ino", "arduino_code/Fade.ino", "arduino_code/magic_wand_arcada.ino", "arduino_code/MqttPub.ino", "arduino_code/BMP280_I2C_Forced.ino", "arduino_code/simpleFahrenheit.ino", "arduino_code/DHT_Multi_ESP32.ino", "arduino_code/firstrun_ledBlink.ino", "arduino_code/ALB_Blink.ino", "arduino_code/arcada_callback.ino", "arduino_code/muziek.ino", "arduino_code/WebClientRepeating_ESP_SPI2.ino", "arduino_code/SdCardTest.ino", "arduino_code/OTASketchDownload_SD.ino", "arduino_code/Scheduler_example01.ino", "arduino_code/MQTTClient_Basic.ino", "arduino_code/ESP32_WebSocketClientSocketIO.ino", "arduino_code/SafeStringPrint.ino", "arduino_code/test_build.ino", "arduino_code/WIO_Terminal_MultiSwitch_intermediate.ino", "arduino_code/DHT_ESP8266.ino", "arduino_code/WiFiPing.ino", "arduino_code/read_write.ino", "arduino_code/Teensy_WebSocketServerAllFunctionsDemo_EthernetENC.ino", "arduino_code/spacebrewString.ino", "arduino_code/Generic_WiFiNINA_DoorBell.ino", "arduino_code/PIR_demo_lastValue.ino", "arduino_code/Secured-Esp32-Client.ino", "arduino_code/HttpClient.ino", "arduino_code/DataHarvester.ino", "arduino_code/AvrAdcLogger.ino", "arduino_code/all_sensor_read.ino", "arduino_code/Homey.ino", "arduino_code/BMx280_TwoWire.ino", "arduino_code/WriteBuffer.ino", "arduino_code/Empty.ino", "arduino_code/onoffbutton_breakout.ino", "arduino_code/SafeStringAssignmentAndConcatOperator.ino", "arduino_code/dyndns-it_Client.ino", "arduino_code/StrandtestArduinoBLECallback.ino", "arduino_code/MQTTClient_Basic_LAN8720.ino", "arduino_code/License.ino", "arduino_code/FullyFeatured_ESP8266.ino", "arduino_code/02Menu.ino", "arduino_code/btnNav.ino", "arduino_code/RP2040_ESP_AT_DuckDNS_Client.ino", "arduino_code/OnDemandConfigPortal.ino", "arduino_code/AFMotor_MultiStepper.ino", "arduino_code/ESP8266WM_MRD_ForcedConfig.ino", "arduino_code/TeensyTimerToolExample.ino", "arduino_code/SdFormatter.ino", "arduino_code/RTC.ino", "arduino_code/UpdateTimeInputState.ino", "arduino_code/SX126x_Receive_Interrupt.ino", "arduino_code/SerialSARAPassthrough.ino", "arduino_code/FidgetSpinner.ino", "arduino_code/enc_interrupt.ino", "arduino_code/Generic_Ethernet_Lock.ino", "arduino_code/basic_callback.ino", "arduino_code/MD_MAX72xx_Message_Serial.ino", "arduino_code/W5500_WM_Config_SAMD.ino", "arduino_code/WiFiNINA_SSL_Test.ino", "arduino_code/DCCEXProtocol_Delegate.ino", "arduino_code/WebClientMulti_SSL.ino", "arduino_code/Accelerometer_Basic_Example.ino", "arduino_code/DeleteUser.ino", "arduino_code/soilsensor_example.ino", "arduino_code/Thermopile_Basic_Example.ino", "arduino_code/simple_oled_SSD1306.ino", "arduino_code/ESP8266_GSM.ino", "arduino_code/LMD18200.ino", "arduino_code/Get.ino", "arduino_code/R01_Logo.ino", "arduino_code/WebServerSSL.ino", "arduino_code/PID_Position_test.ino", "arduino_code/rename.ino", "arduino_code/Talk_US_Male.ino", "arduino_code/Ambient_Color.ino", "arduino_code/t6iot2_basic.ino", "arduino_code/WebSocketClientSocketIO_W5500.ino", "arduino_code/Stroboscope.ino", "arduino_code/AsyncSimpleGET_STM32.ino", "arduino_code/MusicPlayer.ino", "arduino_code/EspRecovery.ino", "arduino_code/TinkerkitExample.ino", "arduino_code/KeypadInterface.ino", "arduino_code/EnhancedAdvertising.ino", "arduino_code/pdm_analogout_dma.ino", "arduino_code/arcada_audio_waveplayer.ino", "arduino_code/bar_lvgl.ino", "arduino_code/ciaoBraccio.ino", "arduino_code/testBMP280.ino", "arduino_code/ALB_Serial2.ino", "arduino_code/AutoRecover.ino", "arduino_code/codeCtrl.ino", "arduino_code/SafeStringWithArraysOfCstrings.ino", "arduino_code/AT_Debug.ino", "arduino_code/MemoryCard.ino", "arduino_code/Factory_Set_Initial_Servo_Position.ino", "arduino_code/StreamGSM.ino", "arduino_code/02_Manual_Control_Two_Axis.ino", "arduino_code/oppo_cooked.ino", "arduino_code/Scheduler_example00_Blink_Namespace.ino", "arduino_code/Example8_SPO2.ino", "arduino_code/STM32_WebSocketClientSocketIO_LAN8742A.ino", "arduino_code/balanceDAC.ino", "arduino_code/simple_new_operator.ino", "arduino_code/hid_composite.ino", "arduino_code/joystick_control_RGB.ino", "arduino_code/RegisteringServices.ino", "arduino_code/ArduinoEnvironmentalMonitor.ino", "arduino_code/SX126x_Channel_Activity_Detection_Blocking.ino", "arduino_code/ShowSensorList.ino", "arduino_code/AsyncCaptivePortalAdvanced_ESP32_ENC.ino", "arduino_code/SR04.ino", "arduino_code/GenUploadURL.ino", "arduino_code/LR11x0_GNSS_Satellites.ino", "arduino_code/zerodma.ino", "arduino_code/Arduino_SoftwareSerial.ino", "arduino_code/Remove.ino", "arduino_code/DHT_IoTtweet.ino", "arduino_code/ColorSensor.ino", "arduino_code/pixeldust_logo.ino", "arduino_code/test_camera.ino", "arduino_code/ModbusRTUClientParameters.ino", "arduino_code/arpeggio02.ino", "arduino_code/CC3000.ino", "arduino_code/adafruit_lsm6dso32_test.ino", "arduino_code/ESP32_FSWebServer_DRD.ino", "arduino_code/FinalSimulationTest.ino", "arduino_code/SendCBOR.ino", "arduino_code/AWS_IoT_GSM.ino", "arduino_code/FullyFeaturedSSL_WT32_ETH01.ino", "arduino_code/Async_ConfigOnDRD_FS_MQTT_Ptr_Medium.ino", "arduino_code/SX127x_Transmit_Interrupt.ino", "arduino_code/spi_rfm95.ino", "arduino_code/withWebSocket.ino", "arduino_code/AsyncCaptivePortal_ESP32_W5500.ino", "arduino_code/pretty_meter.ino", "arduino_code/ButtonInterrupt.ino", "arduino_code/mqtt_esp8266_callback.ino", "arduino_code/Compass.ino", "arduino_code/Teensy_WebSocketServerFragmentation_W5500.ino", "arduino_code/EsploraJoystickMouse.ino", "arduino_code/Async_ConfigOnDoubleReset_TZ.ino", "arduino_code/IrReceiverSampler_SenderPwm.ino", "arduino_code/i2c_eeprom_write.ino", "arduino_code/Async_AdvancedWebServer_SendChunked_MQTT.ino", "arduino_code/AsyncCaptivePortalAdvanced_ESP32_W5500.ino", "arduino_code/Mini_I2C_Gamepad_QT.ino", "arduino_code/Search.ino", "arduino_code/ESP8266.ino", "arduino_code/Magnetometer_Basic_Example.ino", "arduino_code/WT32_ETH01_WebSocketClient_Sticky_SocketIO.ino", "arduino_code/mqtt_will.ino", "arduino_code/mqtt_esp8266.ino", "arduino_code/Edgent_ESP32.ino", "arduino_code/CallbackLED.ino", "arduino_code/PID5752_QuadEncoder_demo.ino", "arduino_code/MultipleClients-Teensy41-Server.ino", "arduino_code/ESP8266_WebSocketServer.ino", "arduino_code/PraktikTampilanLCDBerjalan.ino", "arduino_code/Hooked.ino", "arduino_code/wifi_dht22.ino", "arduino_code/Helloworld_RGB.ino", "arduino_code/AVR_Initiator.ino", "arduino_code/MIDIUSB_read.ino", "arduino_code/stepper_oneStepAtATime.ino", "arduino_code/PushData.ino", "arduino_code/EepromRead.ino", "arduino_code/temperature_read.ino", "arduino_code/Teensy_WebSocketClientSocketIO_EthernetENC.ino", "arduino_code/PWM_DIR.ino", "arduino_code/MQTT_ThingStream_WiFiMulti.ino", "arduino_code/Wifi2Serial.ino", "arduino_code/Delay.ino", "arduino_code/Example5_HeartRate.ino", "arduino_code/OLED_example_Adafruit.ino", "arduino_code/arcada_alerts_test.ino", "arduino_code/Dual.ino", "arduino_code/ESPAsync_WiFi.ino", "arduino_code/ReceiveSMS.ino", "arduino_code/Button.ino", "arduino_code/MD_MAX72xx_PushWheel.ino", "arduino_code/RepeatStopAndRun.ino", "arduino_code/LAN8720_Ethernet_WM_Config.ino", "arduino_code/i2c_probeBus.ino", "arduino_code/SyncPhysicalButton.ino", "arduino_code/Fishino.ino", "arduino_code/SAMD_WiFiNINA_MultiSwitch_beginner.ino", "arduino_code/SerialDisplay.ino", "arduino_code/Teensy_WebSocketServerAllFunctionsDemo_NativeEthernet.ino", "arduino_code/Car_Test.ino", "arduino_code/SimpleBacklight.ino", "arduino_code/ConfigurationAP.ino", "arduino_code/Verify.ino", "arduino_code/micro_speech_M5StackFire.ino", "arduino_code/enc_digitalRead.ino", "arduino_code/ripples.ino", "arduino_code/login-phone.ino", "arduino_code/Async_HelloServer_LAN8720.ino", "arduino_code/CancelInterval.ino", "arduino_code/SDCard.ino", "arduino_code/msc_sdfat.ino", "arduino_code/ControlAssist-Simple.ino", "arduino_code/TextDirection.ino", "arduino_code/U8GLib.ino", "arduino_code/smocktest.ino", "arduino_code/Basic.ino", "arduino_code/06SuperChart.ino", "arduino_code/FeatherWingST7735.ino", "arduino_code/WT32_ETH01_WebSocketClientSocketIO.ino", "arduino_code/AT_Spy.ino", "arduino_code/clock_sevenseg_ds1307.ino", "arduino_code/Generic_Ethernet_Light.ino", "arduino_code/LED.ino", "arduino_code/Scheduler_example12_Priority.ino", "arduino_code/UploadToDropbox.ino", "arduino_code/WIOTerminal_WebSocketClient.ino", "arduino_code/BlynkFootprintTest.ino", "arduino_code/Generic_WiFiNINA_ContactSensor.ino", "arduino_code/PWM.ino", "arduino_code/CircuitPlaygroundFirmata_Express_CodeOrg.ino", "arduino_code/video_capture.ino", "arduino_code/joystick_test.ino", "arduino_code/PinManagement.ino", "arduino_code/ServoKnobContinuous.ino", "arduino_code/SmartConfigReconnect.ino", "arduino_code/Infrared_NeoPixel.ino", "arduino_code/Take_Picture.ino", "arduino_code/BreakoutSSD1351.ino", "arduino_code/GPS_HardwareSerial_Timing.ino", "arduino_code/ConfigOnDRD_ESP32_minimal.ino", "arduino_code/03_navigate_challenge_I.ino", "arduino_code/USB_host.ino", "arduino_code/SdFat_Flash_and_SDcard.ino", "arduino_code/Intel_Galileo.ino", "arduino_code/device_info_max3421e.ino", "arduino_code/FullyFeatured_STM32.ino", "arduino_code/SD.ino", "arduino_code/SimpleWebServer_NativeEthernet.ino", "arduino_code/nRF52_WiFiNINA_AQSensor.ino", "arduino_code/StreamNoAuth.ino", "arduino_code/AppendMapValue.ino", "arduino_code/SAMD_LTE_Demo.ino", "arduino_code/AUnitTest.ino", "arduino_code/nRF52_WiFiNINA_TV.ino", "arduino_code/GenerateJSON.ino", "arduino_code/SafeStringFromCharPtr.ino", "arduino_code/AM2315_W5500.ino", "arduino_code/LIS3DHTR_SPI_ADC.ino", "arduino_code/dual_motor.ino", "arduino_code/Hello_Luna.ino", "arduino_code/PulseSensor_ATtiny85_Serial.ino", "arduino_code/ArduinoMenu_LilyGo_TTGO_T-display_demo.ino", "arduino_code/SingleDelay.ino", "arduino_code/SetupPersistentAP.ino", "arduino_code/EsploraLedShow.ino", "arduino_code/motor_demo.ino", "arduino_code/ReadBenchmark.ino", "arduino_code/volumeSlide03.ino", "arduino_code/shield_sdlog.ino", "arduino_code/Servos.ino", "arduino_code/AwfExample.ino", "arduino_code/BlynkBuildTest.ino", "arduino_code/WebSocketServerHttpHeaderValidation.ino", "arduino_code/AsyncMultiWebServer_STM32.ino", "arduino_code/Part_1_05_Do_More_While_Playing.ino", "arduino_code/LWMQTTClient.ino", "arduino_code/WebClient_LAN8720.ino", "arduino_code/TemperatureWebPanel.ino", "arduino_code/grblWrite_BuildInfo.ino", "arduino_code/Scheduler_example02.ino", "arduino_code/mic_tft.ino", "arduino_code/STM32_WebSocketServerAllFunctionsDemo_LAN8742A.ino", "arduino_code/EchoServer.ino", "arduino_code/wolfssl_version.ino", "arduino_code/Generic_WebSocketServer_LEDcontrol_W5500.ino", "arduino_code/RTTY_Transmit.ino", "arduino_code/ArbitraryData.ino", "arduino_code/octopus_demo.ino", "arduino_code/SimpleHoneypot.ino", "arduino_code/AirQualitySensor_GP2Y1014AU0F.ino", "arduino_code/all.ino", "arduino_code/EPD.ino", "arduino_code/MbedTLSDemo.ino", "arduino_code/SafeStringReader_CmdsTimed.ino", "arduino_code/lis3mdl_demo.ino", "arduino_code/ESP8266_Standalone_Manual_IP.ino", "arduino_code/ALB_LCD1.ino", "arduino_code/Azure_IoT_Hub_GSM.ino", "arduino_code/Stream_Receive.ino", "arduino_code/ControlAssist-Minimal.ino", "arduino_code/RisingDecreasing.ino", "arduino_code/Object.ino", "arduino_code/WebSocketClientSocketIO_RP2040W.ino", "arduino_code/Portenta_H7_DuckDNS_Client.ino", "arduino_code/ALB_MPU6050.ino", "arduino_code/simpleMovements.ino", "arduino_code/Teensy_WebSocketServerFragmentation_EthernetENC.ino", "arduino_code/SKr3_waves.ino", "arduino_code/ESP8266WM_ForcedConfig.ino", "arduino_code/song01.ino", "arduino_code/ReadBuffer.ino", "arduino_code/AsyncMultiWebServer_ESP32_W6100.ino", "arduino_code/readlog.ino", "arduino_code/Factory_Set_ID_Interactive.ino", "arduino_code/Async_ESP32_FSWebServer_DRD.ino", "arduino_code/RedBear_Duo_BLE.ino", "arduino_code/Manual_Offset_Calibration.ino", "arduino_code/Recorder.ino", "arduino_code/L298N-Fade.ino", "arduino_code/ProntoReadDump.ino", "arduino_code/WildFire_V3.ino", "arduino_code/touchscreendemo.ino", "arduino_code/WebMenu.ino", "arduino_code/WiFi101_OTA.ino", "arduino_code/SAMD_Ethernet_Switch.ino", "arduino_code/IMU_Gyroscope.ino", "arduino_code/AVR_NonDefaultSession.ino", "arduino_code/Battery_Charging.ino", "arduino_code/Infrared_Record.ino", "arduino_code/WiFiMultiFileProject.ino", "arduino_code/AllIOPorts.ino", "arduino_code/host_device_info.ino", "arduino_code/PhotoFromSD.ino", "arduino_code/StringPrint.ino", "arduino_code/Generic_WebSocketServer_W5500.ino", "arduino_code/WebSocketClient_RP2040W.ino", "arduino_code/SmartIRRepeater.ino", "arduino_code/MQTTClient_Basic_WiFiMulti.ino", "arduino_code/SafeStringReader_flushInput.ino", "arduino_code/TemperatureSensor.ino", "arduino_code/Formatting.ino", "arduino_code/ForwardAndReverse.ino", "arduino_code/HardwareSyncStateFromApp.ino", "arduino_code/MDNS_Echo_Server.ino", "arduino_code/UdpSender.ino", "arduino_code/PulseSensor_Speaker.ino", "arduino_code/Generic_WebSocketServerFragmentation_WiFiNINA.ino", "arduino_code/Async_AutoConnectWithFSParametersAndCustomIP.ino", "arduino_code/ReadPlot.ino", "arduino_code/arpeggio03.ino", "arduino_code/MD_MAX72xx_Dynamic_HW.ino", "arduino_code/MQTTClient_Auth_WiFiMulti.ino", "arduino_code/ECCX08Signing.ino", "arduino_code/bufstream.ino", "arduino_code/DumpFile.ino", "arduino_code/CustomCharacter.ino", "arduino_code/SLAVE_ID_CONFIG.ino", "arduino_code/Async_WebSocketsServer.ino", "arduino_code/Scheduler_example05_StatusRequest.ino", "arduino_code/SafeStringCharacters.ino", "arduino_code/spipdm_analogout.ino", "arduino_code/Teensy_WebSocketClient_EthernetENC.ino", "arduino_code/Analog_input_NTC.ino", "arduino_code/ESP8266_WebSocketClientStompOverSockJs.ino", "arduino_code/drum01.ino", "arduino_code/Sleep.ino", "arduino_code/EchoBot.ino", "arduino_code/OTA_SD_Portenta.ino", "arduino_code/SAMD_WiFiNINA_Thermostat.ino", "arduino_code/tft.ino", "arduino_code/WIOTerminal_WebSocketServer.ino", "arduino_code/Generic_WiFiNINA_AQSensor_GP2Y1014AU0F.ino", "arduino_code/DHT20_test_rp2040.ino", "arduino_code/ConfigOnDoubleReset_TZ.ino", "arduino_code/05_display_challenge.ino", "arduino_code/nRF52_WiFiNINA_Speaker.ino", "arduino_code/VirtualPinWrite.ino", "arduino_code/SNTPTime.ino", "arduino_code/frecuencySlide02.ino", "arduino_code/STM32WLx_Receive_Interrupt.ino", "arduino_code/ConnectWithWEP.ino", "arduino_code/Touch_Polling.ino", "arduino_code/Async_RegexPatterns_STM32.ino", "arduino_code/GSMNetwork.ino", "arduino_code/WiFiStatus.ino", "arduino_code/EthernetENC_Blynk_nRF52.ino", "arduino_code/TwoCards.ino", "arduino_code/Bridge.ino", "arduino_code/WiFiSimpleReceive.ino", "arduino_code/WiFiUdpSendReceiveString.ino", "arduino_code/RF_Transmit_Temperature.ino", "arduino_code/external_neopixels.ino", "arduino_code/W5500_WM_Config_SAM_DUE.ino", "arduino_code/SimpleHTTPExample_LAN8720.ino", "arduino_code/arcada_clue_sensorplotter.ino", "arduino_code/inputOutput.ino", "arduino_code/RegistAPNsTokens.ino", "arduino_code/DimSwitch.ino", "arduino_code/openByIndex.ino", "arduino_code/Generic_Ethernet_Fan.ino", "arduino_code/BMP280_SPI_Normal.ino", "arduino_code/ALB_Joystick.ino", "arduino_code/hallowingm0_arcadatest.ino", "arduino_code/WebSocketClient_WiFi.ino", "arduino_code/ShallowedData.ino", "arduino_code/Arduino_Zero_M0_Serial.ino", "arduino_code/SdErrorCodes.ino", "arduino_code/LCD.ino", "arduino_code/accelsensor.ino", "arduino_code/IrSignal.ino", "arduino_code/AdvancedWebServer_STM32.ino", "arduino_code/arcada_pygamer_test.ino", "arduino_code/DialTone_7segment.ino", "arduino_code/EEPROM_read.ino", "arduino_code/FullyFeatured_WT32_ETH01.ino", "arduino_code/LoRaWAN_ABP.ino", "arduino_code/RandomNumbers.ino", "arduino_code/mqtt_yun.ino", "arduino_code/SetTimeout.ino", "arduino_code/OSCPrinter.ino", "arduino_code/serialControl.ino", "arduino_code/nRF52_Ethernet_Thermostat.ino", "arduino_code/bme680oled.ino", "arduino_code/ReadCsvArray.ino", "arduino_code/Azure_IoT_Hub_NB.ino", "arduino_code/BreakoutST7789-320x240.ino", "arduino_code/TestModem.ino", "arduino_code/IRsendProntoDemo.ino", "arduino_code/ThingSpeakTalkBackSend.ino", "arduino_code/IncrementFieldValue.ino", "arduino_code/WebServerBlink.ino", "arduino_code/TurnOnMitsubishiHeavyAc.ino", "arduino_code/multiple_encoders.ino", "arduino_code/LittleFSParameters.ino", "arduino_code/W5500_Blynk_Email.ino", "arduino_code/03_Direction_Control.ino", "arduino_code/Geiger_Counter_BLE.ino", "arduino_code/mqtt_2subs_esp8266.ino", "arduino_code/hid_mouse_tremor_filter.ino", "arduino_code/CS5490_Basics.ino", "arduino_code/Simple_LunaSat_Client.ino", "arduino_code/nRF52_Ethernet_GarageDoor.ino", "arduino_code/ChangeATBaudRate.ino", "arduino_code/MIDIUSB_buzzer.ino", "arduino_code/PWM_LEDServer.ino", "arduino_code/Async_AutoConnectWithFeedbackLED.ino", "arduino_code/AdcWakeup.ino", "arduino_code/i2c_readwrite.ino", "arduino_code/I2C_ADDR_CONFIG.ino", "arduino_code/IMURangeSettings.ino", "arduino_code/StreamFiles.ino", "arduino_code/BlockingMillisDelay.ino", "arduino_code/EthernetModbusClientToggle.ino", "arduino_code/W5500_Blynk_Email_Teensy.ino", "arduino_code/MDNS_WiFiWebServer.ino", "arduino_code/Geiger_Counter_BT.ino", "arduino_code/SafeStringStartsWithEndsWith.ino", "arduino_code/SmartConfigCreate.ino", "arduino_code/DallasTemperature.ino", "arduino_code/Template_ESP32.ino", "arduino_code/AsyncCaptivePortalAdvanced_ESP32_W6100.ino", "arduino_code/test_signal.ino", "arduino_code/image_lvgl.ino", "arduino_code/basicDB.ino", "arduino_code/PDMSerialPlotter.ino", "arduino_code/status.ino", "arduino_code/OldStandardFirmata.ino", "arduino_code/nRF52_WiFiNINA_Thermostat.ino", "arduino_code/Generic_Ethernet_AQSensor.ino", "arduino_code/Teensy_WebSocketServerFragmentation_WiFiNINA.ino", "arduino_code/QuadChannelOutput.ino", "arduino_code/SAMD_WiFiNINA_AQSensor.ino", "arduino_code/SimpleSynth.ino", "arduino_code/Lock_with_feedback.ino", "arduino_code/SIM70X0_MQTT_Demo.ino", "arduino_code/i2c_eeprom_crc.ino", "arduino_code/efont.ino", "arduino_code/Portenta_H7_WebSocketClientSocketIO.ino", "arduino_code/FirstDamperControl.ino", "arduino_code/SAMD_WiFiNINA_MultiSwitch_intermediate.ino", "arduino_code/LinkWatcher.ino", "arduino_code/FullyFeatured_QNEthernet.ino", "arduino_code/ConnectWithWPA.ino", "arduino_code/motor_demo_speed.ino", "arduino_code/PrintBenchmark.ino", "arduino_code/Pager_Transmit.ino", "arduino_code/DHT11ESP8266.ino", "arduino_code/WebSocketClient_ENC.ino", "arduino_code/Serial.ino", "arduino_code/ScanCallback.ino", "arduino_code/SmartSecureCar.ino", "arduino_code/WIO_Terminal_TemperatureSensor.ino", "arduino_code/Push.ino", "arduino_code/arduino_advanced_sample.ino", "arduino_code/Birthday_Candles.ino", "arduino_code/OTA_Qspi_Flash_download_onthefly.ino", "arduino_code/AsyncCaptivePortalAdvanced.ino", "arduino_code/RF69_Receive_Blocking.ino", "arduino_code/SX128x_GFSK_Modem.ino", "arduino_code/tsc2007_oleddemo.ino", "arduino_code/Example6_FIFO_Readings.ino", "arduino_code/LinkStatus.ino", "arduino_code/Client.ino", "arduino_code/sendWithButton.ino", "arduino_code/03_learnings_challenge_I.ino", "arduino_code/onreceive.ino", "arduino_code/ThinkInkDisplays.ino", "arduino_code/AVR_Callbacks.ino", "arduino_code/PostWithHeaders.ino", "arduino_code/withoutLib_SS.ino", "arduino_code/CheckFirmwareVersion.ino", "arduino_code/HandleDisconnect.ino", "arduino_code/TinyGSM-SMS.ino", "arduino_code/PressureSensor.ino", "arduino_code/AsyncWebServer_MQTT.ino", "arduino_code/i2c_eeprom_clear.ino", "arduino_code/W5100_Blynk.ino", "arduino_code/WIO_Terminal_ContactSensor.ino", "arduino_code/ReadSensorsImperial.ino", "arduino_code/LED_Color.ino", "arduino_code/noteCut02.ino", "arduino_code/AnonymousSignin.ino", "arduino_code/ChatServer.ino", "arduino_code/WIO_Terminal_Speaker.ino", "arduino_code/Template_ESP8266.ino", "arduino_code/nRF52_Ethernet_AQSensor_GP2Y1014AU0F.ino", "arduino_code/SNTPClient.ino", "arduino_code/ChatAction.ino", "arduino_code/AWS_IoT_WiFi.ino", "arduino_code/WebServer_LAN8720.ino", "arduino_code/Teensy_WebSocketClientSocketIO_WiFiNINA.ino", "arduino_code/ESPAsync_WiFi_MQTT.ino", "arduino_code/ArduinoWiFi101.ino", "arduino_code/RTC_Advanced.ino", "arduino_code/06zeRGBa.ino", "arduino_code/WebSocketClientSocketIO.ino", "arduino_code/05_Ultrasonic_Sensor.ino", "arduino_code/Knob.ino", "arduino_code/AsyncDNServerFull_ESP32_SC_W6100.ino", "arduino_code/FTP_Demo.ino", "arduino_code/CaptivePortal.ino", "arduino_code/RF_Request_Response.ino", "arduino_code/Scheduler_example14_Yield.ino", "arduino_code/Hellschreiber_Transmit.ino", "arduino_code/SafeStringReader_Cmds.ino", "arduino_code/hid_mouse_log_filter.ino", "arduino_code/Create_Update_Read.ino", "arduino_code/AsyncHTTPMultiRequests_ESP.ino", "arduino_code/C33-Low-Power.ino", "arduino_code/PagerServer.ino", "arduino_code/EsploraAccelerometer.ino", "arduino_code/BI_Ethernet_Blynk.ino", "arduino_code/IMU.ino", "arduino_code/serveStaticLoadFile.ino", "arduino_code/MD_MAX72xx_Shift.ino", "arduino_code/ESP32_WiFi_SSL.ino", "arduino_code/StringStream.ino", "arduino_code/ExternalWakeup.ino", "arduino_code/Incremental_Name.ino", "arduino_code/RestClient.ino", "arduino_code/AsyncHTTPMultiRequests_ESP32_W6100.ino", "arduino_code/BSEC.ino", "arduino_code/ServerAsDataStorage_SingleValue.ino", "arduino_code/Teensy_WebSocketClientSSL_WiFiNINA.ino", "arduino_code/ConfigPortalParamsOnSwitch.ino", "arduino_code/Teensy_WebSocketServer_QNEthernet.ino", "arduino_code/ssd1306_128x64_i2c.ino", "arduino_code/strandtest_nodelay.ino", "arduino_code/WiFiEspAT2UDP.ino", "arduino_code/OLED_featherwing.ino", "arduino_code/LIS3DHTR_SPI_Temperature.ino", "arduino_code/DS3231_alarm.ino", "arduino_code/WiFiUdpNtpClient.ino", "arduino_code/AsyncHTTPRequest_ESP_Multi.ino", "arduino_code/EEPROM_Clear.ino", "arduino_code/NeoPixel.ino", "arduino_code/motor_demo_pos.ino", "arduino_code/DCCEXProtocol_Serial.ino", "arduino_code/SimpleAnalogFirmata.ino", "arduino_code/uvi_color.ino", "arduino_code/RedBear_Duo_WiFi.ino", "arduino_code/JSONKitchenSink.ino", "arduino_code/ConfigOnDRD_FS_MQTT_Ptr_Complex.ino", "arduino_code/Generic_WebSocketClientSocketIO_WiFiNINA.ino", "arduino_code/MqttSub.ino", "arduino_code/Blynk_ON_OFF_LED.ino", "arduino_code/LedControl.ino", "arduino_code/Hello_NeoPixels.ino", "arduino_code/AY3891x_EX7_Chiptunes_SD.ino", "arduino_code/GsmLocation.ino", "arduino_code/Queue.ino", "arduino_code/freetouch.ino", "arduino_code/BasicCert.ino", "arduino_code/SimpleRGB.ino", "arduino_code/IRGCTCPServer.ino", "arduino_code/MD_MAX72xx_ScrollChart.ino", "arduino_code/Async_AdvancedWebServer_MemoryIssues_Send_CString.ino", "arduino_code/WebSocketClientSSL.ino", "arduino_code/regenboog.ino", "arduino_code/Diagnostics.ino", "arduino_code/meta_asserts.ino", "arduino_code/StreamHttpClient.ino", "arduino_code/mandelbrot.ino", "arduino_code/nRF52840_BLE_Scanner.ino", "arduino_code/ConfigOnStartup.ino", "arduino_code/Part_3_03_TFT_Display.ino", "arduino_code/MoveBy.ino", "arduino_code/nRF52_WiFiNINA_Switch.ino", "arduino_code/StrandtestArduinoBLE.ino", "arduino_code/AsyncDNSServer_ESP32_ENC.ino", "arduino_code/AdvancedWebServer_LAN8720.ino", "arduino_code/politie.ino", "arduino_code/hello-world.ino", "arduino_code/Esp32JS.ino", "arduino_code/SimpleDigitalFirmata.ino", "arduino_code/SAMD_WiFiNINA_MultiSwitch_advance.ino", "arduino_code/ECCX08CSR.ino", "arduino_code/ESP8266_WebSocketClient.ino", "arduino_code/LEDBlink.ino", "arduino_code/Async_WebSocketsServer_Xtreme.ino", "arduino_code/RawHardwareTest.ino", "arduino_code/Tweeter.ino", "arduino_code/RadioReceiver.ino", "arduino_code/text_test.ino", "arduino_code/nRF52_Ethernet_DimSwitch.ino", "arduino_code/MD_MAX72xx_HW_Mapper.ino", "arduino_code/FlashStorage_read.ino", "arduino_code/BasicAuthGet_LAN8720.ino", "arduino_code/ServiceAccountFile.ino", "arduino_code/ArduinoIoTCloud-Schedule.ino", "arduino_code/send_data_to_dashboard.ino", "arduino_code/MQTTClient_Auth.ino", "arduino_code/CopyFromSD.ino", "arduino_code/Async_HelloServer2.ino", "arduino_code/WIOT_MultiSwitch_LCD.ino", "arduino_code/MD_MAX72XX_Message_ESP32.ino", "arduino_code/ESP8266_GSM_SHT3x.ino", "arduino_code/RF69_Receive_Address.ino", "arduino_code/IrrigationSimpleLCD.ino", "arduino_code/spi_registers.ino", "arduino_code/gotoAdvanced01.ino", "arduino_code/ControlMultiple.ino", "arduino_code/01_Braccio_Record_and_Replay.ino", "arduino_code/SSTV_Transmit.ino", "arduino_code/ntpTest.ino", "arduino_code/LR11x0_Transmit_Interrupt.ino", "arduino_code/I2C_RELAY_CTL.ino", "arduino_code/ReadKeypad.ino", "arduino_code/IRQCounter.ino", "arduino_code/FileRead.ino", "arduino_code/AsyncFSBrowser_WT32_ETH01.ino", "arduino_code/SX123x_Receive_Blocking.ino", "arduino_code/dht22test.ino", "arduino_code/DHT11ESP32.ino", "arduino_code/01HelloWorld.ino", "arduino_code/onewiretest.ino", "arduino_code/MD_MAX72xx_PrintText.ino", "arduino_code/ToneExample.ino", "arduino_code/transposition03.ino", "arduino_code/Autoscroll.ino", "arduino_code/TCPClientMultiple.ino", "arduino_code/SafeStringRemove.ino", "arduino_code/loopback.ino", "arduino_code/AY3891x_EX6_Chiptunes_Flash.ino", "arduino_code/arcada_pybadge_test.ino", "arduino_code/TheAirBoard_WiFly.ino", "arduino_code/SmartRelay.ino", "arduino_code/01_playing_with_a_joint_angle_gauge.ino", "arduino_code/ALB_LED.ino", "arduino_code/Generic_WebSocketServerFragmentation_W5500.ino", "arduino_code/SX126x_LR_FHSS_Modem.ino", "arduino_code/Serial_HM10_HC08.ino", "arduino_code/touchscreendemoshield.ino", "arduino_code/Rc5Renderer.ino", "arduino_code/WIO_Terminal_AQSensor.ino", "arduino_code/person_detection_ESP32-Camera.ino", "arduino_code/LR11x0_GNSS_Autonomous_Position.ino", "arduino_code/MD_MAX72xx_RobotEyes.ino", "arduino_code/3_fonts.ino", "arduino_code/TimeInterval-stopwatchStartMillis.ino", "arduino_code/TrashProject.ino", "arduino_code/File.ino", "arduino_code/adafruit_lsm6ds33_test.ino", "arduino_code/DefaultWiFiNetwork.ino", "arduino_code/Buttons.ino", "arduino_code/LunaSat_Full_Functionality_Tester.ino", "arduino_code/R11_Hello_User.ino", "arduino_code/Beep.ino", "arduino_code/L298N-No-Enable.ino", "arduino_code/SendJsonCustomParameters.ino", "arduino_code/Run.ino", "arduino_code/ArduinoIoTCloud-BlockForOTA.ino", "arduino_code/FixedWidthServer.ino", "arduino_code/arpeggio01.ino", "arduino_code/SoftwareSerialDemo.ino", "arduino_code/UserSPIDriver.ino", "arduino_code/ShellCommands.ino", "arduino_code/Datetime.ino", "arduino_code/Scheduler_example10_Benchmark.ino", "arduino_code/graphicstest_hallowing_m0.ino", "arduino_code/PT8211Sine.ino", "arduino_code/Arduino_MKR_ETH_SSL.ino", "arduino_code/PIR.ino", "arduino_code/ReceiveVoiceCall.ino", "arduino_code/VolumeFreeSpace.ino", "arduino_code/IMU_Magnetometer.ino", "arduino_code/i2c_MAX44009.ino", "arduino_code/ControlAssist-ToggleLed.ino", "arduino_code/ESP32_GSM_SHT3x.ino", "arduino_code/PIR_demo.ino", "arduino_code/LGACSend.ino", "arduino_code/OpenWindowAlarm.ino", "arduino_code/bmp280_sensortest.ino", "arduino_code/UserChipSelectFunction.ino", "arduino_code/stm32.ino", "arduino_code/CreateDocument.ino", "arduino_code/StreamDatabaseSecret.ino", "arduino_code/WebSocketClientSocketIO_WiFi.ino", "arduino_code/RawWrite.ino", "arduino_code/CarOtonomDetected.ino", "arduino_code/hello_world_arcada.ino", "arduino_code/Hello_Buttons.ino", "arduino_code/adafruitio_secure_airlift.ino", "arduino_code/BlynkBlink.ino", "arduino_code/RestServer.ino", "arduino_code/Scheduler_example06_IDLE.ino", "arduino_code/SafeStringLengthTrim.ino", "arduino_code/Teensy_WebSocketServer_EthernetENC.ino", "arduino_code/WiFiMulti.ino", "arduino_code/Full.ino", "arduino_code/wolfssl_client.ino", "arduino_code/AM2315_W5100.ino", "arduino_code/RF69_Transmit_Interrupt.ino", "arduino_code/74HC595.ino", "arduino_code/Teensy_WebSocketServerAllFunctionsDemo_W5500.ino", "arduino_code/ConnectWithWPA2Enterprise.ino", "arduino_code/LowLatencyLogger.ino", "arduino_code/ControlRGB_MKR1010.ino", "arduino_code/AutoConnectWithFeedback.ino", "arduino_code/rpi_on_off.ino", "arduino_code/Teensy_WebSocketClientStompOverSockJs_NativeEthernet.ino", "arduino_code/MotorStepperPushButton.ino", "arduino_code/ProximitySensor.ino", "arduino_code/AX25_Transmit.ino", "arduino_code/central.ino", "arduino_code/CustomPushID.ino", "arduino_code/gpio_list.ino", "arduino_code/basic_verbose.ino", "arduino_code/04TimeInputStateUpdate.ino", "arduino_code/Aggregations.ino", "arduino_code/Motion_Detection_Higher_Resolution.ino", "arduino_code/DCCEXProtocol_Roster_etc.ino", "arduino_code/WebSocketClientOTA.ino", "arduino_code/01_Check_Inputs.ino", "arduino_code/keyboardTest.ino", "arduino_code/selfhost-de_Client.ino", "arduino_code/continuous_system.ino", "arduino_code/LiquidCrystal.ino", "arduino_code/HomeAutomation.ino", "arduino_code/noteCut01.ino", "arduino_code/BMx280_I2C_ESP8266.ino", "arduino_code/ESP8266_WebSocketClientSocketIOack.ino", "arduino_code/Teensy40_Serial_USB.ino", "arduino_code/Generic_WebSocketServer_WiFiNINA.ino", "arduino_code/ThinkInk_mono.ino", "arduino_code/Demo.ino", "arduino_code/multi_motor.ino", "arduino_code/adafruit_lsm6ds_pedometer.ino", "arduino_code/targetSel.ino", "arduino_code/FileWriteScript.ino", "arduino_code/Scheduler_example25_SCHEDULER_CHAIN.ino", "arduino_code/GoogleFormPost_basic.ino", "arduino_code/AUnitMetaTest.ino", "arduino_code/ChunkDecoding.ino", "arduino_code/Teensy3.ino", "arduino_code/RGBWstrandtest.ino", "arduino_code/i2c_TCS3772.ino", "arduino_code/tsc2007_demo.ino", "arduino_code/Thermistor.ino", "arduino_code/EmulateEEPROM.ino", "arduino_code/PhotoFromFileID.ino", "arduino_code/HomeAssistant-MQTT.ino", "arduino_code/simpleServer.ino", "arduino_code/CommonAcControl.ino", "arduino_code/TurnOnTrotecAC.ino", "arduino_code/SDWebServer.ino", "arduino_code/EthernetENC_Blynk_SAMD.ino", "arduino_code/gaussian_smoother.ino", "arduino_code/Reset.ino", "arduino_code/ReadCsvFile.ino", "arduino_code/pdm_tft_fancy.ino", "arduino_code/SAMD_WiFiNINA_Switch.ino", "arduino_code/TestExe.ino", "arduino_code/FFT.ino", "arduino_code/nRF52_WiFiNINA_ContactSensor.ino", "arduino_code/TimeInterval-intervalMillis.ino", "arduino_code/WiFi_Ethernet_Complex_ESP8266.ino", "arduino_code/BTS7960.ino", "arduino_code/strandtest_wheel.ino", "arduino_code/Endianess.ino", "arduino_code/ProjectPakTeguh.ino", "arduino_code/SimpleHTTPClient.ino", "arduino_code/SendAnEmail.ino", "arduino_code/nRF52_WiFiNINA_MotionSensor.ino", "arduino_code/BMP280_ESP8266_I2C_Normal_DefinedPins.ino", "arduino_code/helderheid.ino", "arduino_code/Teensy40_ESP8266Shield_Single.ino", "arduino_code/Accelerometer_Tilt_Angle.ino", "arduino_code/TestTutorialKit.ino", "arduino_code/Braccio_Basic.ino", "arduino_code/spi_readwrite.ino", "arduino_code/Digistump_Digispark.ino", "arduino_code/Test.ino", "arduino_code/AppLowDelay.ino", "arduino_code/BallMaze.ino", "arduino_code/ESP32_BT_WF.ino", "arduino_code/MFUthings_basic.ino", "arduino_code/BreakoutST7789-170x320.ino", "arduino_code/PulseSensor_ESP32.ino", "arduino_code/Generic_WebSocketServerHttpHeaderValidation_EthernetENC.ino", "arduino_code/CpuUsage.ino", "arduino_code/ALB_Relay.ino", "arduino_code/SAMD_WiFiNINA_PowerSensor.ino", "arduino_code/ALB_RFID.ino", "arduino_code/SdInfo.ino", "arduino_code/graphicstest_featherwing.ino", "arduino_code/SdReadTest.ino", "arduino_code/MultiSwitch_advance.ino", "arduino_code/ConfigOnSwitchFS.ino", "arduino_code/AsyncDNServerFull_ESP32_SC_W5500.ino", "arduino_code/RP2040_Ethernet_DuckDNS_Client.ino", "arduino_code/DES.ino", "arduino_code/ReadLogger.ino", "arduino_code/AsyncDNSServer.ino", "arduino_code/ArduinoWiFi.ino", "arduino_code/fulltest.ino", "arduino_code/AppWithListenersTemplate.ino", "arduino_code/transposition01.ino", "arduino_code/ALB_TouchSensor1.ino", "arduino_code/CC1101_Receive_Interrupt.ino", "arduino_code/SAMD_Ethernet_ContactSensor.ino", "arduino_code/Generic_WiFiNINA_MultiSwitch_beginner.ino", "arduino_code/Map.ino", "arduino_code/provisioning.ino", "arduino_code/ReceiveAndRelayMessage.ino", "arduino_code/WebClientRepeating_WiFiMulti.ino", "arduino_code/Thermopile_Hand_Detection.ino", "arduino_code/SimpleTemperature.ino", "arduino_code/Teensy_WebSocketServerHttpHeaderValidation_NativeEthernet.ino", "arduino_code/AsyncCaptivePortal_ESP32_W6100.ino", "arduino_code/nRF52_Ethernet_Lock.ino", "arduino_code/BasicHttpsClient.ino", "arduino_code/nRF52_WiFiNINA_MultiSwitch_beginner.ino", "arduino_code/BME280_full_example.ino", "arduino_code/fgetsRewrite.ino", "arduino_code/Unlocker.ino", "arduino_code/WeatherMonitorStream.ino", "arduino_code/AWS_IoT_Opta_WiFi.ino", "arduino_code/Teensy_WebSocketClient_QNEthernet.ino", "arduino_code/FirebaseDemo.ino", "arduino_code/SimpleRTC.ino", "arduino_code/Infrared_Read.ino", "arduino_code/Web-AC-control.ino", "arduino_code/PrintDelay.ino", "arduino_code/Camera_Capture.ino", "arduino_code/Part_1_03_Playing_Music.ino", "arduino_code/AY3891x_EX2_Test_Registers.ino", "arduino_code/NodeMCU.ino", "arduino_code/TianStandby.ino", "arduino_code/TFT_graphicstest_PDQ.ino", "arduino_code/BMx280_I2C_NormalMode.ino", "arduino_code/FlameDetector.ino", "arduino_code/CommandLine.ino", "arduino_code/SAMD_WiFiNINA_DoorBell.ino", "arduino_code/W5500_WM_Config_RP2040.ino", "arduino_code/WebSocketClientStompOverSockJs_NINA.ino", "arduino_code/basic_config_state_ULP_LP.ino", "arduino_code/webusb_serial.ino", "arduino_code/setCursor.ino", "arduino_code/DS3231_oscillator_test.ino", "arduino_code/rotaryEvent.ino", "arduino_code/SinModel.ino", "arduino_code/ESP32.ino", "arduino_code/AsyncCaptivePortalAdvanced_ESP32_SC_W6100.ino", "arduino_code/PrintPersistentSettings.ino", "arduino_code/daphc.ino", "arduino_code/Display.ino", "arduino_code/Template_MKR1000.ino", "arduino_code/nRF52_WiFiNINA_GarageDoor.ino", "arduino_code/fft_test.ino", "arduino_code/ALB_SoundSensor2.ino", "arduino_code/MD_MAX72xx_Hourglass.ino", "arduino_code/multiread.ino", "arduino_code/ESP32_MRD_GSM.ino", "arduino_code/SignalFrench.ino", "arduino_code/ReadTempAndHumidity.ino", "arduino_code/nRF24_Receive_Blocking.ino", "arduino_code/color_sense.ino", "arduino_code/03Email.ino", "arduino_code/GPIO_programmable.ino", "arduino_code/Lock.ino", "arduino_code/Programme4.ino", "arduino_code/arduino_wifinina.ino", "arduino_code/SAMD_WiFiNINA_Blinds.ino", "arduino_code/Create_Edit_Parse.ino", "arduino_code/ESP8266_WebSocketClientOTA.ino", "arduino_code/EscControl.ino", "arduino_code/L298NX2-Two-Callback.ino", "arduino_code/onDemandNonBlocking.ino", "arduino_code/mask_arcadatest.ino", "arduino_code/WifiRestServer.ino", "arduino_code/telegramOTA.ino", "arduino_code/Minimal-Esp32-Client.ino", "arduino_code/AsyncDNSServer_WT32_ETH01.ino", "arduino_code/src.ino", "arduino_code/WebSocketClientSSLWithCA.ino", "arduino_code/IRQCounterMap.ino", "arduino_code/Scheduler_example18_StatusRequest_LTS_WDT_Timeout.ino", "arduino_code/BlinkRedLed.ino", "arduino_code/FileUtilsReadBlock.ino", "arduino_code/SX127x_FSK_Modem.ino", "arduino_code/Input.ino", "arduino_code/BI_Ethernet_WM_Config.ino", "arduino_code/WaterfallSpectrum.ino", "arduino_code/WatermarkTau.ino", "arduino_code/ESP32_BLE_WF.ino", "arduino_code/stepper_speedControl.ino", "arduino_code/no_serial.ino", "arduino_code/ahrs.ino", "arduino_code/Hello_Blink.ino", "arduino_code/Hologram_Dash.ino", "arduino_code/Teensy_WebSocketServerHttpHeaderValidation_QNEthernet.ino", "arduino_code/BreakoutST7789-172x320.ino", "arduino_code/PartyParrot.ino", "arduino_code/Standalone.ino", "arduino_code/SimpleSendChar.ino", "arduino_code/Authorization.ino", "arduino_code/adabox015_clue_plotter.ino", "arduino_code/ESP32_NoteOnOffEverySec.ino", "arduino_code/Girs.ino", "arduino_code/interrupts1Hz.ino", "arduino_code/SetProperty_MultiValue.ino", "arduino_code/FullVariableTest.ino", "arduino_code/TurnOnMitsubishiAC.ino", "arduino_code/nRF52_WiFiNINA_MultiSwitch_intermediate.ino", "arduino_code/SX128x_Settings.ino", "arduino_code/AsyncFSWebServer.ino", "arduino_code/uart_menu.ino", "arduino_code/LearningHashDecoder.ino", "arduino_code/IoT_Example.ino", "arduino_code/WT32_ETH01_WebSocketServer.ino", "arduino_code/APRS_Position.ino", "arduino_code/current_voltage_read.ino", "arduino_code/mouse_ramdisk.ino", "arduino_code/MP3Player.ino", "arduino_code/Test_Inputs.ino", "arduino_code/RS485Passthrough.ino", "arduino_code/ConsoleRead.ino", "arduino_code/RS485Sender.ino", "arduino_code/WebClientRepeating.ino", "arduino_code/TurnTest.ino", "arduino_code/SendTopic.ino", "arduino_code/Generic_WebSocketServer_LEDcontrol_WiFiNINA.ino", "arduino_code/msc_sd.ino", "arduino_code/Scheduler_example19_Dynamic_Tasks_SelfDestruct.ino", "arduino_code/Generic_Ethernet_DimSwitch.ino", "arduino_code/DHT11_OLED.ino", "arduino_code/cap_touch_demo.ino", "arduino_code/LR11x0_Firmware_Update.ino", "arduino_code/CleanEEPROM.ino", "arduino_code/Dual_NeoSlider.ino", "arduino_code/GasLeakageAlarm.ino", "arduino_code/BlynkIrRemote.ino", "arduino_code/NBSSLWebClient.ino", "arduino_code/normalized.ino", "arduino_code/AutoConnectWithTimeout.ino", "arduino_code/WiFiDiscoveringServices.ino", "arduino_code/BlinkBothCores.ino", "arduino_code/TouchTest.ino", "arduino_code/SimplePut.ino", "arduino_code/SignInWithCustomToken.ino", "arduino_code/AsyncSimpleServer_ESP32_ENC.ino", "arduino_code/ClapDetector.ino", "arduino_code/FlashStorage_get.ino", "arduino_code/ESP32_WebSocketClient.ino", "arduino_code/MQTT_And_OTA_Ethernet.ino", "arduino_code/frecuencySlide01.ino", "arduino_code/remoteOTA.ino", "arduino_code/ESP32-Cam.ino", "arduino_code/ThingSpeak.ino", "arduino_code/Digital_input.ino", "arduino_code/nRF52_WiFiNINA_MultiSwitch_advance.ino", "arduino_code/Nec1Renderer.ino", "arduino_code/FullExample.ino", "arduino_code/AsyncHTTPMultiRequests_ESP32_ENC.ino", "arduino_code/test_servo.ino", "arduino_code/ArduinoIoTCloud-Advanced.ino", "arduino_code/pcf8563_interrupt.ino", "arduino_code/mqtt_ethernet.ino", "arduino_code/WeMosD1_mini_relay_shield.ino", "arduino_code/filter_example.ino", "arduino_code/05LCD_AdvancedMode.ino", "arduino_code/UnicodeFilenames.ino", "arduino_code/msc_ramdisk_dual.ino", "arduino_code/SD2Flash2BootAVRHex.ino", "arduino_code/lcd_debug.ino", "arduino_code/HTTPGET.ino", "arduino_code/getcurrent.ino", "arduino_code/01GPS_Stream.ino", "arduino_code/SHA256.ino", "arduino_code/ErrorCallback.ino", "arduino_code/ControlAssist-Joystick.ino", "arduino_code/ALB_Buzzer.ino", "arduino_code/DirectoryFunctions.ino", "arduino_code/more_servos.ino", "arduino_code/Async_AutoConnectWithFeedback.ino", "arduino_code/incbin-print-self.ino", "arduino_code/Generic_WebSocketClientStompOverSockJs_EthernetENC.ino", "arduino_code/Light.ino", "arduino_code/ConfigOnSwitchFS_MQTT_Ptr.ino", "arduino_code/mqtt_retain.ino", "arduino_code/StreamConcurentcy.ino", "arduino_code/EmailPassword.ino", "arduino_code/W5500_Blynk_RP2040.ino", "arduino_code/GsmScanNetworks.ino", "arduino_code/SafeStringPrefixOperator.ino", "arduino_code/03GetData.ino", "arduino_code/SH1107_128x128.ino", "arduino_code/clock_sevenseg_gps.ino", "arduino_code/JSONArray.ino", "arduino_code/WiFiSSLClientNoSNI.ino", "arduino_code/AsyncTCP_Client.ino", "arduino_code/GPS_I2C_Parsing.ino", "arduino_code/SelfProvisioning.ino", "arduino_code/TimedWakeup.ino", "arduino_code/ALB_Button.ino", "arduino_code/DHT20_I2C_speed.ino", "arduino_code/pcf8563.ino", "arduino_code/BMx280_SPIClass.ino", "arduino_code/ESP32WM_ForcedConfig.ino", "arduino_code/AUnitMoreTest.ino", "arduino_code/WebClient_ESP_SPI2.ino", "arduino_code/ESP32C3_ConfigExample.ino", "arduino_code/BreakoutST7789-280x240.ino", "arduino_code/ESP8266_WebSocketClient_Sticky_SocketIO.ino", "arduino_code/RedBearLab_BLE_Nano.ino", "arduino_code/LR11x0_WiFi_Scan_Blocking.ino", "arduino_code/W5500_Blynk_nRF52.ino", "arduino_code/DHT11.ino", "arduino_code/AutoConnect.ino", "arduino_code/GCP_IoT_Core_NB.ino", "arduino_code/IANSv3.ino", "arduino_code/NMEA_EXTENSIONS.ino", "arduino_code/simple_pid_controller.ino", "arduino_code/OTA.ino", "arduino_code/pattern_game.ino", "arduino_code/LCD_SimpleMode.ino", "arduino_code/programme6.ino", "arduino_code/ConsolePixel.ino", "arduino_code/STM32_WebSocketServer_LAN8742A.ino", "arduino_code/Firebase.ino", "arduino_code/mifare1K_dump_serial.ino", "arduino_code/BackgroundRead.ino", "arduino_code/DuplexEcho.ino", "arduino_code/PraktikSistemKeamanan.ino", "arduino_code/minimal.ino", "arduino_code/ServoKnob.ino", "arduino_code/SdFat_format.ino", "arduino_code/ButtonLED.ino", "arduino_code/LCDGFXDemo.ino", "arduino_code/Uptime.ino", "arduino_code/BlinkyJS.ino", "arduino_code/Timer1Example.ino", "arduino_code/TrellisTalkthrough.ino", "arduino_code/Generic_WiFiNINA_Switch.ino", "arduino_code/jm_LiquidCrystal_I2C_demo.ino", "arduino_code/Temperature_Basic_Example.ino", "arduino_code/Async_AutoConnectWithFSParameters.ino", "arduino_code/nRF52_ESP_AT_DuckDNS_Client.ino", "arduino_code/Increment.ino", "arduino_code/Generic_WebSocketClientStomp_W5500.ino", "arduino_code/SAMD_WiFiNINA_ContactSensor.ino", "arduino_code/WiFiModbusClientToggle.ino", "arduino_code/Async_ESP_FSWebServer_DRD.ino", "arduino_code/Scroll.ino", "arduino_code/photoCell.ino", "arduino_code/SimpleGet_LAN8720.ino", "arduino_code/touchpaint_pyportal.ino", "arduino_code/adafruit_lsm6ds_shake.ino", "arduino_code/R02_Line_Follow.ino", "arduino_code/Temperature.ino", "arduino_code/PhysicalLayer_Interface.ino", "arduino_code/joystick_control_relay.ino", "arduino_code/MovingIcons.ino", "arduino_code/SerialXconnect.ino", "arduino_code/SAM_DUE_ESP8266Shield.ino", "arduino_code/ChangeScheduled.ino", "arduino_code/Dynu_Client.ino", "arduino_code/FlashStoreAndRetrieve.ino", "arduino_code/BMx280_I2C.ino", "arduino_code/AsyncCaptivePortal_ESP32_SC_W5500.ino", "arduino_code/HumidityTemperature_DHT22.ino", "arduino_code/Async_RegexPatterns_STM32_LAN8720.ino", "arduino_code/Fail_Safe_flasher.ino", "arduino_code/A4963_tool.ino", "arduino_code/Generic_WiFiNINA_TV.ino", "arduino_code/MovingCircles.ino", "arduino_code/LR11x0_GFSK_Modem.ino", "arduino_code/AsyncDNServerFull_ESP32_W6100.ino", "arduino_code/SendJsonSimplestSeparateCredentials.ino", "arduino_code/ATmega_SD.ino", "arduino_code/WiFiMulti_RP2040W.ino", "arduino_code/CustomStorageNanoConnect.ino", "arduino_code/AsyncUdpNTPClient.ino", "arduino_code/bme680test.ino", "arduino_code/IANSv4.ino", "arduino_code/Example9_RateTesting.ino", "arduino_code/AsyncTCP_Server.ino", "arduino_code/LZSS.ino", "arduino_code/02StyledButton.ino", "arduino_code/BlinkWithMyDelay.ino", "arduino_code/Teensy_WebSocketClient_NativeEthernet.ino", "arduino_code/Scheduler_example03.ino", "arduino_code/SAMD_WiFiNINA_MotionSensor.ino", "arduino_code/Part_2_04_Microphone_Check.ino", "arduino_code/AY3891x_EX3_Simple_Tone.ino", "arduino_code/TV.ino", "arduino_code/AdvancedWebServer_Teensy4x_SPI1.ino", "arduino_code/02_Step_Control.ino", "arduino_code/attiny_blink.ino", "arduino_code/OTASketchDownload.ino", "arduino_code/FileUtilsHttpDownload.ino", "arduino_code/AccessToken.ino", "arduino_code/LongTextScroll.ino", "arduino_code/Part_2_03_Samples.ino", "arduino_code/vibrato01.ino", "arduino_code/FullyFeaturedSSL_ESP32_ENC.ino", "arduino_code/color_sensor.ino", "arduino_code/Pushbullet.ino", "arduino_code/micro_speech_ATOM-Echo.ino", "arduino_code/GsmWebClient.ino", "arduino_code/mifare1k_dump.ino", "arduino_code/TTGO_TCALL_SHT3x.ino", "arduino_code/proximity_sensor.ino", "arduino_code/LineFollowWithPause.ino", "arduino_code/ScheduledIn.ino", "arduino_code/mqtt_publish_in_callback.ino", "arduino_code/ESP8266_Standalone_SmartConfig.ino", "arduino_code/TransitionFX.ino", "arduino_code/BasicHttpClient.ino", "arduino_code/AmplitudeSerialPlotter.ino", "arduino_code/WebSocketClient_W5500.ino", "arduino_code/SAMD_Ethernet_Thermostat.ino", "arduino_code/DHT12_plotter.ino", "arduino_code/SetMyCommands.ino", "arduino_code/dap_bass_enhance.ino", "arduino_code/CopyTo.ino", "arduino_code/ESP_FSWebServer_DRD.ino", "arduino_code/Scheduler_template.ino", "arduino_code/AX25_Transmit_AFSK.ino", "arduino_code/ConfigOnDRD_ESP8266_minimal.ino", "arduino_code/WIO_Terminal_TV.ino", "arduino_code/3WiresValve.ino", "arduino_code/Hellschreiber_Transmit_AFSK.ino", "arduino_code/SafeString_ReadCmds.ino", "arduino_code/nvm.ino", "arduino_code/wipe.ino", "arduino_code/R06_Wheel_Calibration.ino", "arduino_code/MQTT_ThingStream.ino", "arduino_code/volumeSlide01.ino", "arduino_code/Blynk_Run.ino", "arduino_code/AppendArray.ino", "arduino_code/ENC28J60_WM_Config.ino", "arduino_code/CancelTimeout.ino", "arduino_code/ThinkInk_gray4.ino", "arduino_code/myPlant_ESP8266.ino", "arduino_code/CheckFirmware.ino", "arduino_code/CheckWiFiLinkFirmwareVersion.ino", "arduino_code/AsyncCaptivePortal_ESP32_SC_ENC.ino", "arduino_code/ESP32_LoopTimer.ino", "arduino_code/RGB_LED_Stripe_5050.ino", "arduino_code/ArduinoIoTCloud_Travis_CI.ino", "arduino_code/StackingTest.ino", "arduino_code/WavFilePlayerUSB.ino", "arduino_code/Priority.ino", "arduino_code/simple_reading.ino", "arduino_code/RobotController.ino", "arduino_code/Bitcrusher.ino", "arduino_code/SimpleText.ino", "arduino_code/CustomAuthFile.ino", "arduino_code/WizFi250.ino", "arduino_code/accelTap.ino", "arduino_code/AutoConnectWithFSParametersAndCustomIP.ino", "arduino_code/drum04.ino", "arduino_code/JSONObject.ino", "arduino_code/adafruit_ags02ma_test.ino", "arduino_code/Timer3Example.ino", "arduino_code/JsonConfigFile.ino", "arduino_code/LR11x0_Receive_Blocking.ino", "arduino_code/Async_PostServer_LAN8720.ino", "arduino_code/MJPEG_Stream.ino", "arduino_code/calibration_single_point.ino", "arduino_code/NetworkSwitching.ino", "arduino_code/ReadPressureImperial.ino", "arduino_code/AsyncCustomHeader_STM32.ino", "arduino_code/Patch.ino", "arduino_code/Suscribir.ino", "arduino_code/repeater.ino", "arduino_code/board_test.ino", "arduino_code/FinalDamperControl.ino", "arduino_code/RPC_DweetBlink.ino", "arduino_code/Stepper.ino", "arduino_code/tremolo02.ino", "arduino_code/DHT20.ino", "arduino_code/LITTLEFS_time.ino", "arduino_code/channel_https.ino", "arduino_code/Async_HelloServer2_LAN8720.ino", "arduino_code/SAMD_Ethernet_MotionSensor.ino", "arduino_code/Nano33BLESenseRev2Firmware.ino", "arduino_code/SignInWithRefreshIDToken.ino", "arduino_code/SX127x_Transmit_FHSS.ino", "arduino_code/HttpClientConsole.ino", "arduino_code/LinkItONE.ino", "arduino_code/PassThroughUSB.ino", "arduino_code/Glissando01.ino", "arduino_code/ALB_LCD2.ino", "arduino_code/DualMerger.ino", "arduino_code/DecrementIncrement.ino", "arduino_code/AsyncSimpleServer_ESP32_W5500.ino", "arduino_code/SdFat.ino", "arduino_code/Change_Baud_Rate.ino", "arduino_code/ControlAssist-ConnectionCtrl.ino", "arduino_code/Twilio-SMS.ino", "arduino_code/sensortest.ino", "arduino_code/STM32WLx_Channel_Activity_Detection.ino", "arduino_code/lsm9doftest.ino", "arduino_code/BlinkDelay_Task.ino", "arduino_code/encoder_basic.ino", "arduino_code/ProjectMikrokontrollerLEDSuhu.ino", "arduino_code/Async_RegexPatterns_ESP32_ENC.ino", "arduino_code/BasicStepping.ino", "arduino_code/TestIamPermissions.ino", "arduino_code/first.ino", "arduino_code/StepTest.ino", "arduino_code/highcharts.ino", "arduino_code/eventlog.ino", "arduino_code/CustomTokenFile.ino", "arduino_code/nRF24_Transmit_Blocking.ino", "arduino_code/TeensySdioDemo.ino", "arduino_code/Generic_WiFiNINA_Lock.ino", "arduino_code/WebClient_SSL.ino", "arduino_code/SerialNINAPassthrough.ino", "arduino_code/tapdemo.ino", "arduino_code/W5500_WM_Config_nRF52.ino", "arduino_code/wifi_softap.ino", "arduino_code/LunaSat_Solar_Panel_Voltage.ino", "arduino_code/02_Manual_Control_Challenge.ino", "arduino_code/Callbacks.ino", "arduino_code/i2c_BMP280.ino", "arduino_code/SX126x_Transmit_Interrupt.ino", "arduino_code/SX127x_Settings.ino", "arduino_code/HttpBasicAuth.ino", "arduino_code/PIRStates.ino", "arduino_code/SafeStringEquAssignErrTests.ino", "arduino_code/SimpleWebServerWiFi.ino", "arduino_code/PulseSensor_Servo_Motor.ino", "arduino_code/AccelGyro.ino", "arduino_code/App.ino", "arduino_code/AsyncUdpSendReceive.ino", "arduino_code/StandardFirmataWiFi.ino", "arduino_code/Scheduler_example16_Multitab.ino", "arduino_code/Morse_Receive_AM.ino", "arduino_code/bicolor8x8.ino", "arduino_code/WIO_Terminal_Lock.ino", "arduino_code/CC1101_Transmit_Address.ino", "arduino_code/Geiger_Counter_OLED_BT_BLE_WF.ino", "arduino_code/SMS_Response.ino", "arduino_code/Teensy_WebSocketClientStompOverSockJs_EthernetENC.ino", "arduino_code/AltPinSerial.ino", "arduino_code/RGB_serial_control.ino", "arduino_code/OpenMV_RPC_Controller.ino", "arduino_code/Generic_Ethernet_PowerSensor.ino", "arduino_code/EsploraSoundSensor.ino", "arduino_code/Scheduler_example28_Tickless.ino", "arduino_code/RS232.ino", "arduino_code/Teensy_WebSocketServerFragmentation_QNEthernet.ino", "arduino_code/SX128x_Ranging.ino", "arduino_code/ESP8266WM_MRD_Config.ino", "arduino_code/AsyncDweetGet.ino", "arduino_code/nRF8001.ino", "arduino_code/SaveBMP.ino", "arduino_code/AdvancedWebServer_ESP32_SPI2.ino", "arduino_code/Camera.ino", "arduino_code/NonBlockingWrite.ino", "arduino_code/U8x8.ino", "arduino_code/LR11x0_Channel_Activity_Detection_Blocking.ino", "arduino_code/AppendMapValueTimestamp.ino", "arduino_code/ReAuthenticate.ino", "arduino_code/LowLatencyLoggerADXL345.ino", "arduino_code/basic_neoswirl.ino", "arduino_code/Generic_WebSocketClientStompOverSockJs_W5500.ino", "arduino_code/StoreNameAndSurname.ino", "arduino_code/UnsubscribeTopic.ino", "arduino_code/WhistleDetector.ino", "arduino_code/STM32_Ethernet_DuckDNS_Client.ino", "arduino_code/SAMD_WiFiNINA_Speaker.ino", "arduino_code/u8g2.ino", "arduino_code/ALB_I2C_Scan.ino", "arduino_code/SpectrumAnalyzerBasic.ino", "arduino_code/SubscribeTopic.ino", "arduino_code/timer_callback.ino", "arduino_code/TugasProyekSistemAbsensi.ino", "arduino_code/arcada_filepicker.ino", "arduino_code/strandtest.ino", "arduino_code/grblUpload.ino", "arduino_code/WatchDevice.ino", "arduino_code/TimeInterval-stopwatchStartMicros.ino", "arduino_code/MelodyButtonTwoSounds.ino", "arduino_code/simpleplayer.ino", "arduino_code/checkWaitingMRD.ino", "arduino_code/Generic_WebSocketServerAllFunctionsDemo_W5500.ino", "arduino_code/Pushover.ino", "arduino_code/EsploraLedShow2.ino", "arduino_code/Teensy_WebSocketServer_LEDcontrol_EthernetENC.ino", "arduino_code/GCP_IoT_Core_GSM.ino", "arduino_code/AVR_ESP_AT_DuckDNS_Client.ino", "arduino_code/Temperature_Gradient.ino", "arduino_code/AdvancedTimeInput.ino", "arduino_code/CloseBySonoff.ino", "arduino_code/Teensy_WebSocketServerHttpHeaderValidation_WiFiNINA.ino", "arduino_code/W5500_Blynk_Email_RP2040.ino", "arduino_code/AsyncDNSServer_ESP32_SC_ENC.ino", "arduino_code/FlashStorage_write.ino", "arduino_code/SmartClimate.ino", "arduino_code/Async_AdvancedWebServer_favicon.ino", "arduino_code/MD_MAX72xx_DaftPunk.ino", "arduino_code/SAM-DUE_Ethernet_DuckDNS_Client.ino", "arduino_code/EraseEverything.ino", "arduino_code/RealTimeClock_Alarm.ino", "arduino_code/ObstacleAvoidanceDC.ino", "arduino_code/EthernetENC_Blynk.ino", "arduino_code/Generic_WebSocketServer_LEDcontrol_EthernetENC.ino", "arduino_code/07_Draw_Circle.ino", "arduino_code/No-ip_Client.ino", "arduino_code/NoteFrequency.ino", "arduino_code/WIO_Terminal_Fan.ino", "arduino_code/01_Step_Check.ino", "arduino_code/simpletest.ino", "arduino_code/CustomPrompt.ino", "arduino_code/drum07.ino", "arduino_code/WIOTerminal_WebSocketClientSSL.ino", "arduino_code/WiFiAdvancedChatServer_WiFiMulti.ino", "arduino_code/hid_device_report.ino", "arduino_code/nRF52_Ethernet_Light.ino", "arduino_code/SAM-DUE_ESP_AT_DuckDNS_Client.ino", "arduino_code/GFXcanvas.ino", "arduino_code/Torque.ino", "arduino_code/BMP280_I2C_Alt_Normal.ino", "arduino_code/basic_config_state.ino", "arduino_code/CloseByMQTT.ino", "arduino_code/STM32_WebSocketClientStomp_LAN8742A.ino", "arduino_code/SdFat_print_file.ino", "arduino_code/D11-Firmware.ino", "arduino_code/Upload.ino", "arduino_code/displayOnOffTest.ino", "arduino_code/nRF52_Ethernet_Fan.ino", "arduino_code/MKRGSMSSLClient.ino", "arduino_code/ControlCar.ino", "arduino_code/SafeStringReader_GPS.ino", "arduino_code/Connect_WiFi.ino", "arduino_code/ThingSpeakTalkBackRecv.ino", "arduino_code/Process.ino", "arduino_code/nRF52_Ethernet_DuckDNS_Client.ino", "arduino_code/Teensy_WebSocketServer_LEDcontrol_WiFiNINA.ino", "arduino_code/AllFunctions.ino", "arduino_code/ds1307nvram.ino", "arduino_code/SafeStringComparisonOperators.ino", "arduino_code/SyncClient.ino", "arduino_code/cdc_multi.ino", "arduino_code/SH1106_128x64_i2c_QTPY.ino", "arduino_code/WIO_Terminal_Thermostat.ino", "arduino_code/EncoderTest.ino", "arduino_code/LIS3DHTR_IIC_ADC.ino", "arduino_code/matrix8x8.ino", "arduino_code/Teensy_WebSocketClientSocketIO_W5500.ino", "arduino_code/TeensyPwmExample.ino", "arduino_code/Arduino_GSM.ino", "arduino_code/FlasherExample.ino", "arduino_code/arduino_misaki.ino", "arduino_code/acceldemo.ino", "arduino_code/MD_MAX72xx_Test.ino", "arduino_code/DHT20_plotter.ino", "arduino_code/EEPROM_put.ino", "arduino_code/LongPoll.ino", "arduino_code/esp32DeepSleep.ino", "arduino_code/FullyFeatured_ESP32_W5500.ino", "arduino_code/SAMD_WiFiNINA_Lock.ino", "arduino_code/HelloServer2.ino", "arduino_code/SdFat_full_usage.ino", "arduino_code/SAMD_WiFiNINA_AQSensor_GP2Y1014AU0F.ino", "arduino_code/UdpClient.ino", "arduino_code/SetInterval.ino", "arduino_code/Teensy_WebSocketClient_WiFiNINA.ino", "arduino_code/STM32_WebSocketClientStompOverSockJs_LAN8742A.ino", "arduino_code/insert.ino", "arduino_code/SimpleWebSocket.ino", "arduino_code/I2CFinder.ino", "arduino_code/ESP32WM_Config.ino", "arduino_code/L298N-Simple.ino", "arduino_code/MJPEG_Controls.ino", "arduino_code/WirelessDoorBell.ino", "arduino_code/ETag.ino", "arduino_code/MotorKnob.ino", "arduino_code/NTPClientESP8266.ino", "arduino_code/DCCEXProtocol_Loco_Control.ino", "arduino_code/Interrupts.ino", "arduino_code/Generic_Ethernet_MotionSensor.ino", "arduino_code/Nano33BLESenseFirmware.ino", "arduino_code/WebSocketClientAVR.ino", "arduino_code/WebSocketClientStompOverSockJs_W5500.ino", "arduino_code/Part_3_02_Fourier_Transform.ino", "arduino_code/ServerAsDataStorage_MultiValue.ino", "arduino_code/GPS_SoftwareSerial_LOCUS_DumpBasic.ino", "arduino_code/FirmwareUpdater.ino", "arduino_code/ALB_ClockSerial.ino", "arduino_code/setEpoch.ino", "arduino_code/SafeString_nextToken.ino", "arduino_code/SpeedByPotentiometer.ino", "arduino_code/ConnectWiFi.ino", "arduino_code/neo_animation.ino", "arduino_code/Async_ESP_FSWebServer.ino", "arduino_code/Preload.ino", "arduino_code/ESP8266_AsyncWSClient.ino", "arduino_code/Listener.ino", "arduino_code/Intel_Edison_WiFi.ino", "arduino_code/FullyFeatured_PortentaH7_WiFi.ino", "arduino_code/Generic_WiFiNINA_Blinds.ino", "arduino_code/ClickEncoderTFT.ino", "arduino_code/04PushData.ino", "arduino_code/Portenta_BLE_Bridge.ino", "arduino_code/IDToken.ino", "arduino_code/IrSenderPwm.ino", "arduino_code/hid_dual_interfaces.ino", "arduino_code/Test_Motor_Angular_Control.ino", "arduino_code/Stream_Transmit.ino", "arduino_code/AppendMapValueArray.ino", "arduino_code/LowPowerDataLogger.ino", "arduino_code/SX126x_Spectrum_Scan.ino", "arduino_code/Advanced.ino", "arduino_code/KeyboardController.ino", "arduino_code/magic_wand.ino", "arduino_code/nRF52_Ethernet_MultiSwitch_advance.ino", "arduino_code/Energia_Serial_USB.ino", "arduino_code/ControlAssist-ESPVisualizer.ino", "arduino_code/ControlSamsungAC.ino", "arduino_code/SimpleDelete_LAN8720.ino", "arduino_code/WT32_ETH01_SSL_SIO.ino", "arduino_code/FilterTest.ino", "arduino_code/Arduino_Ethernet.ino", "arduino_code/NTPClientMKR1000.ino", "arduino_code/EInkGizmo.ino", "arduino_code/Pushsafer.ino", "arduino_code/InlineKeyboardMarkup.ino", "arduino_code/LightSensor.ino", "arduino_code/LR11x0_Channel_Activity_Detection_Interrupt.ino", "arduino_code/Teensy_WebSocketClientStomp_EthernetENC.ino", "arduino_code/uvi_plotter.ino", "arduino_code/ALB_SevenSeg_Quad.ino", "arduino_code/WavePlayback.ino", "arduino_code/dobbelsteen-uitbreiding.ino", "arduino_code/05_Draw_Lines.ino", "arduino_code/Programme2.ino", "arduino_code/Pronto.ino", "arduino_code/ScienceJournal.ino", "arduino_code/arduino_simple_sample.ino", "arduino_code/hid_composite_joy_featherwing.ino", "arduino_code/rs485Central.ino", "arduino_code/NoCallback.ino", "arduino_code/teensy4CPUThrottling.ino", "arduino_code/MotorParty.ino", "arduino_code/Generic_Ethernet_GarageDoor.ino", "arduino_code/zerodma_memcpy.ino", "arduino_code/rotationtest.ino", "arduino_code/AdvancedWebServer.ino", "arduino_code/AdvancedChatServer.ino", "arduino_code/Put.ino", "arduino_code/ServiceAuth.ino", "arduino_code/SevenSegmentMikrokontroller.ino", "arduino_code/bargraph24.ino", "arduino_code/SX128x_Receive_Interrupt.ino", "arduino_code/person_detection_T-CameraV05.ino", "arduino_code/STM32_WebSocketServerFragmentation_LAN8742A.ino", "arduino_code/plugin_decimalsField.ino", "arduino_code/RF69_Settings.ino", "arduino_code/ShieldILI9341.ino", "arduino_code/loopCounter.ino", "arduino_code/Terminal.ino", "arduino_code/TCPServer.ino", "arduino_code/SetProperty_SingleValue.ino", "arduino_code/WebSocketClient.ino", "arduino_code/WebClientRepeating_RP2040_SPI1.ino", "arduino_code/Scheduler_example07_WDT.ino", "arduino_code/nRF52_WiFiNINA_Fan.ino", "arduino_code/Arduino_org_UNO_WiFi.ino", "arduino_code/PulseSensor_Pulse_Transit_Time.ino", "arduino_code/adafruitio_secure_esp8266.ino", "arduino_code/SAMD_WiFiNINA_Fan.ino", "arduino_code/Robot_Motor_Core.ino", "arduino_code/FS_EthernetWebServer.ino", "arduino_code/Scheduler_example26_SCHEDULING_OPTIONS.ino", "arduino_code/Epoch.ino", "arduino_code/Scheduler_example09_TimeCritical.ino", "arduino_code/Temp_and_Humidity.ino", "arduino_code/WebSocketServer_LEDcontrol.ino", "arduino_code/ToneSweep.ino", "arduino_code/SdFatSize.ino", "arduino_code/ParamsChildClass.ino", "arduino_code/WriteLogger.ino", "arduino_code/PhysicalPixel.ino", "arduino_code/ProgjekKuliah.ino", "arduino_code/toString.ino", "arduino_code/LightFading.ino", "arduino_code/AsyncCaptivePortalAdvanced_ESP32_SC_W5500.ino", "arduino_code/SdFat_datalogging.ino", "arduino_code/LightBlue_Bean.ino", "arduino_code/RFDuino_BLE.ino", "arduino_code/LEDArcade_1x4.ino", "arduino_code/SafeStringStream_testdata.ino", "arduino_code/EventTrigger.ino", "arduino_code/APRS_MicE.ino", "arduino_code/ConfigOnMRD_ESP8266_minimal.ino", "arduino_code/TurnOnPanasonicAC.ino", "arduino_code/Simblee_BLE.ino", "arduino_code/customField.ino", "arduino_code/flash_sector_dump.ino", "arduino_code/WiFiResolvingHostNames.ino", "arduino_code/BantuTeman.ino", "arduino_code/SX126x_Transmit_Blocking.ino", "arduino_code/adafruitio_anon_time_esp8266.ino", "arduino_code/SafeString_readUntilToken.ino", "arduino_code/Teensy_WebSocketServerAllFunctionsDemo_QNEthernet.ino", "arduino_code/ProjectKKN.ino", "arduino_code/IMU_Test.ino", "arduino_code/LowLatencyLoggerMPU6050.ino", "arduino_code/Plug_Sketch_Play.ino", "arduino_code/UsbMidiConverter.ino", "arduino_code/GetMetadata.ino", "arduino_code/CollisionCircles.ino", "arduino_code/Touch_IRQ.ino", "arduino_code/02BlynkBlink.ino", "arduino_code/EsploraTable.ino", "arduino_code/nRF52_WiFiNINA_AQSensor_GP2Y1014AU0F.ino", "arduino_code/TelnetClient.ino", "arduino_code/buttoncycler.ino", "arduino_code/IndexingData.ino", "arduino_code/driverpatch_1_14.ino", "arduino_code/ESP32_WebSocketServer.ino", "arduino_code/AccelStepper.ino", "arduino_code/balanceHP.ino", "arduino_code/SAMD_Ethernet_MultiSwitch_advance.ino", "arduino_code/UDPClientMultiple.ino", "arduino_code/Basic_IO.ino", "arduino_code/AVR_Directory.ino", "arduino_code/EsploraMusic.ino", "arduino_code/TempInputBlink_Tasks.ino", "arduino_code/Async_SimpleWebServer.ino", "arduino_code/pyportal_boing.ino", "arduino_code/motor.ino", "arduino_code/Arduino_MKR1400_GSM_ETH.ino", "arduino_code/MultiSwitch_intermediate.ino", "arduino_code/swsertest.ino", "arduino_code/Ethernet.ino", "arduino_code/login-email.ino", "arduino_code/BMx280_otherInterfaces.ino", "arduino_code/Teensy_WebSocketClient_W5500.ino", "arduino_code/RP2040_WiFiNINA_Blinds.ino", "arduino_code/WiFiStorage.ino", "arduino_code/Morse_Transmit_SSB.ino", "arduino_code/SimpleDelete.ino", "arduino_code/afraid-org_Client.ino", "arduino_code/msc_external_flash_sdcard.ino", "arduino_code/SX123x_Transmit_Blocking.ino", "arduino_code/FeatherWingHX8357.ino", "arduino_code/readAndWrite.ino", "arduino_code/SafeStringToNum.ino", "arduino_code/FlashKeyValue.ino", "arduino_code/Si443x_Transmit_Blocking.ino", "arduino_code/Arduino_Yun.ino", "arduino_code/Hello_SlideSwitch.ino", "arduino_code/SIM800_SslSetCert.ino", "arduino_code/NECUNNES.ino", "arduino_code/Arduino_MKR1010.ino", "arduino_code/VirtualPinRead.ino", "arduino_code/MD_MAX72xx_Pacman.ino", "arduino_code/PSI.ino", "arduino_code/Serial_HC05_HC06.ino", "arduino_code/BiDireccional.ino", "arduino_code/FullyFeatured_ESP32_ENC.ino", "arduino_code/LCDPrint.ino", "arduino_code/pdu_test.ino", "arduino_code/PraktikArduinoLED.ino", "arduino_code/SafeStringReader_Assign.ino", "arduino_code/BlinkUsingInterval.ino", "arduino_code/BreakoutST7735-128x128.ino", "arduino_code/TurnOnGreeAC.ino", "arduino_code/LED_StatusOfButton.ino", "arduino_code/PrintTime_Blink_millisDelay.ino", "arduino_code/SAMD_Ethernet_AQSensor.ino", "arduino_code/pdm_tft.ino", "arduino_code/ReadCsv.ino", "arduino_code/Part_2_08_Oscillators.ino", "arduino_code/Pop.ino", "arduino_code/atmel_math_power_and_scale.ino", "arduino_code/Morse_Transmit_FM.ino", "arduino_code/Async_PostServer.ino", "arduino_code/interrupt.ino", "arduino_code/W5500_Blynk_Email_SAM_DUE.ino", "arduino_code/LAN8720_Ethernet_Blynk.ino", "arduino_code/Geiger_Counter_OLED.ino", "arduino_code/Talk_US_Large.ino", "arduino_code/SX127x_Channel_Activity_Detection_Interrupt.ino", "arduino_code/SimpleWebSocket_LAN8720.ino", "arduino_code/SAMD_ESP8266Shield.ino", "arduino_code/MeterSample.ino", "arduino_code/Generic_WebSocketClientStomp_WiFiNINA.ino", "arduino_code/RadgialGauge.ino", "arduino_code/TransmitSimple.ino", "arduino_code/AES128.ino", "arduino_code/AVR_SysEx.ino", "arduino_code/wifi_downlink_control_relay.ino", "arduino_code/WebServerFileUpload.ino", "arduino_code/nRF52_Ethernet_Blinds.ino", "arduino_code/UpdateDocument.ino", "arduino_code/ALB_TouchSensor2.ino", "arduino_code/LR11x0_Transmit_Blocking.ino", "arduino_code/BreakoutST7789-240x240.ino", "arduino_code/AnalogFirmata.ino", "arduino_code/WebClient_WiFiMulti.ino", "arduino_code/pot_RGB_random_brightness.ino", "arduino_code/Robot_IR_Array_Test.ino", "arduino_code/PostServer.ino", "arduino_code/HueBlink.ino", "arduino_code/TurnOnToshibaAC.ino", "arduino_code/touchpaint.ino", "arduino_code/STM32WLx_Transmit_Blocking.ino", "arduino_code/Async_AdvancedWebServer.ino", "arduino_code/IRGCSendDemo.ino", "arduino_code/AM2315_ESP32_SSL.ino", "arduino_code/NativeEthernet_WM_Config_Teensy.ino", "arduino_code/01Button.ino", "arduino_code/poll-in-loop.ino", "arduino_code/NeoSlider.ino", "arduino_code/StrandtestBLE.ino", "arduino_code/ConfigOnDoubleReset_Multi.ino", "arduino_code/BMX280_minimal_example.ino", "arduino_code/cin_cout.ino", "arduino_code/MAX31850.ino", "arduino_code/Hello_Temperature.ino", "arduino_code/BlinkWithMyDelay_Function.ino", "arduino_code/Generic_WiFiNINA_MultiSwitch_intermediate.ino", "arduino_code/UpdateFacebookStatus.ino", "arduino_code/WiFiEchoCallback.ino", "arduino_code/WiFiWebServer.ino", "arduino_code/SimpleGet.ino", "arduino_code/ScanNetworksAdvanced.ino", "arduino_code/IrReceiverSampler.ino", "arduino_code/zerodma_spi2.ino", "arduino_code/RF_Basic_Reciever.ino", "arduino_code/FirebaseJsonDemo.ino", "arduino_code/drum03.ino", "arduino_code/joy_featherwing_ESP32.ino", "arduino_code/GPS_HardwareSerial_LOCUS_Start.ino", "arduino_code/ESP8266WM_Config.ino", "arduino_code/RPN_NRPN.ino", "arduino_code/Changing_Blynk_LED_Widget_Color.ino", "arduino_code/Arduino_Debug_Advance.ino", "arduino_code/micro_speech_M5StickC.ino", "arduino_code/W5500_Blynk_SAM_DUE.ino", "arduino_code/WebSocketClientStomp_ENC.ino", "arduino_code/2_user_setting.ino", "arduino_code/i2c_PCF2127.ino", "arduino_code/basicsenddata.ino", "arduino_code/Teensy_WebSocketServer_NativeEthernet.ino", "arduino_code/Generic_Ethernet_MultiSwitch_intermediate.ino", "arduino_code/Barometer.ino", "arduino_code/WT32_ETH01_DuckDNS_Client.ino", "arduino_code/Async_SimpleWebServer_STM32.ino", "arduino_code/flash_manipulator.ino", "arduino_code/NANO_ESP32_Blink.ino", "arduino_code/GSM.ino", "arduino_code/CombinedIOExpander.ino", "arduino_code/ActivityRecognition.ino", "arduino_code/SX126x_Receive_Blocking.ino", "arduino_code/fgets.ino", "arduino_code/Endianness.ino", "arduino_code/LIS3DHTR_SPI_AcceleratorReadings.ino", "arduino_code/Secured-Esp8266-Client.ino", "arduino_code/SX126x_FSK_Modem.ino", "arduino_code/nodeMCU-websockets-client.ino", "arduino_code/BasicPlus.ino", "arduino_code/magsensor.ino", "arduino_code/PraktikKeypaddanLCD.ino", "arduino_code/soilMoisture.ino", "arduino_code/pyportal_arcada_test.ino", "arduino_code/sevenseg.ino", "arduino_code/dap_avc_agc.ino", "arduino_code/MQTTClient_SSL_Auth.ino", "arduino_code/LM35DZMikrokontroller.ino", "arduino_code/IntSignal.ino", "arduino_code/PraktikArduinoLED2.ino", "arduino_code/dancing_dragon.ino", "arduino_code/StrandtestBLE_nodelay.ino", "arduino_code/WiFiWebClient.ino", "arduino_code/AsyncHTTPRequest_ESP.ino", "arduino_code/FormatString.ino", "arduino_code/customHTML.ino", "arduino_code/BroadcastMessage.ino", "arduino_code/gfxbuttontest_featherwing.ino", "arduino_code/three_step_threshold.ino", "arduino_code/rotation_test.ino", "arduino_code/Blue_Pill_STM32F103C.ino", "arduino_code/pictureEmbed.ino", "arduino_code/IRsendDemo.ino", "arduino_code/Teensy_WebSocketClientStomp_W5500.ino", "arduino_code/BMP280_SPI_Forced.ino", "arduino_code/CameraTestPattern.ino", "arduino_code/Send_Image.ino", "arduino_code/Arduino_MKRGSM.ino", "arduino_code/tremolo01.ino", "arduino_code/PulseSensor_nRF52_Heartrate_Monitor_Service.ino", "arduino_code/Teens41-Client.ino", "arduino_code/using-pin-change.ino", "arduino_code/WIO_Terminal_AQSensor_GP2Y1014AU0F.ino", "arduino_code/ModbusRTUServerKitchenSink.ino", "arduino_code/Async_AdvancedWebServer_Country.ino", "arduino_code/AsyncCaptivePortal_ESP32_ENC.ino", "arduino_code/ESP32ConfigExample.ino", "arduino_code/device_info.ino", "arduino_code/WiFiWebClient_WiFiMulti.ino", "arduino_code/AY3891x_EX5_Serial_Commands.ino", "arduino_code/TemporaryWiFiConnect.ino", "arduino_code/TheAirBoard_BLE_Link.ino", "arduino_code/Morse_Transmit_AM.ino", "arduino_code/SimpleLedMulti.ino", "arduino_code/Existed.ino", "arduino_code/ECCX08JWSPublicKey.ino", "arduino_code/SAMD_Ethernet_DoorBell.ino", "arduino_code/nRF52_WiFiNINA_DoorBell.ino", "arduino_code/AsyncCustomHeader.ino", "arduino_code/KSKI.ino", "arduino_code/Accel_ConstantSpeed.ino", "arduino_code/BlinkWithMyDelay_Function_Repeat.ino", "arduino_code/adafruitio_secure_esp32.ino", "arduino_code/msc_file_explorer.ino", "arduino_code/LunaSat_Transmit_Sample.ino", "arduino_code/NTPClientAvr.ino", "arduino_code/ATtiny85.ino", "arduino_code/GetTwitterStatus.ino", "arduino_code/Call.ino", "arduino_code/Example3_Temperature_Sense.ino", "arduino_code/StepperTest.ino", "arduino_code/handleFormData.ino", "arduino_code/LittleFS_test.ino", "arduino_code/02RTC.ino", "arduino_code/ScanNetworks.ino", "arduino_code/PWM_DIR_DUAL.ino", "arduino_code/AY3891x_EX1_Find_Address.ino", "arduino_code/ReadCsvStream.ino", "arduino_code/IRrecvDumpV3.ino", "arduino_code/GizmoTest.ino", "arduino_code/pitchrollheading.ino", "arduino_code/test_IMU.ino", "arduino_code/ESP32_W5500_Callbacks.ino", "arduino_code/WebSocketClientSSL_RP2040W.ino", "arduino_code/ESP32WM_MRD_Config.ino", "arduino_code/ASCIIDraw.ino", "arduino_code/Double_Buffering.ino", "arduino_code/SmartWheaterAI.ino", "arduino_code/W5500_WM_Config.ino", "arduino_code/RS485Receiver.ino", "arduino_code/acep_7ColorTest.ino", "arduino_code/AsyncWebServer_MQTT_RP2040W.ino", "arduino_code/LIS3DHTR_IIC_Temperature.ino", "arduino_code/ReadSensorConfiguration.ino", "arduino_code/LcdDinoExample.ino", "arduino_code/AsyncHTTPRequest_ESP32_W6100.ino", "arduino_code/AsyncFSBrowser_STM32_LAN8720.ino", "arduino_code/Teensy_WebSocketServerFragmentation_NativeEthernet.ino", "arduino_code/Interrupts_subclassing.ino", "arduino_code/02_Homing_procedure.ino", "arduino_code/WebClientRepeating_ESP.ino", "arduino_code/PostServer_LAN8720.ino", "arduino_code/serial_echo.ino", "arduino_code/TurnOnArgoAC.ino", "arduino_code/Server.ino", "arduino_code/SimpleTempSensor.ino", "arduino_code/gps_read.ino", "arduino_code/WeatherMonitor.ino", "arduino_code/LEDKeyboardController.ino", "arduino_code/SetDHCPHostName.ino", "arduino_code/PlaySynthMusic.ino", "arduino_code/BatchGet.ino", "arduino_code/R03_Disco_Bot.ino", "arduino_code/Scheduler_example11_Priority.ino", "arduino_code/WavFilePlayerMulti.ino", "arduino_code/03_creating_a_menu.ino", "arduino_code/STM32WLx_Channel_Activity_Detection_Interrupt.ino", "arduino_code/Accel_MultiStepper.ino", "arduino_code/CANCommander.ino", "arduino_code/ds3231.ino", "arduino_code/BlynkClient.ino", "arduino_code/ConfigOnDRD_FS_MQTT_Ptr.ino", "arduino_code/pixeldust_sand.ino", "arduino_code/nRF52_Ethernet_TemperatureSensor.ino", "arduino_code/mock_ili9341.ino", "arduino_code/ExportDocuments.ino", "arduino_code/Notification_Email_Event.ino", "arduino_code/FWUpdaterBridge.ino", "arduino_code/03LED_Blink.ino", "arduino_code/ServoButton.ino", "arduino_code/BreakoutSSD1331.ino", "arduino_code/HelloServer2_LAN8720.ino", "arduino_code/WebSocketServerHooked.ino", "arduino_code/Esp8266-Client.ino", "arduino_code/ContactSensor.ino", "arduino_code/ControlAssist-Scope.ino", "arduino_code/nRF52_Ethernet_PowerSensor.ino", "arduino_code/ESP32_GSM.ino", "arduino_code/OpenHAB-MQTT.ino", "arduino_code/WildFire_V4.ino", "arduino_code/MosFet.ino", "arduino_code/quadalphanum.ino", "arduino_code/AVR_MultipleSessions.ino", "arduino_code/micro_speech_ESP-EYE.ino", "arduino_code/WebServer_WiFiMulti.ino", "arduino_code/ds1307.ino", "arduino_code/RotateDial.ino", "arduino_code/FFT_01.ino", "arduino_code/Motion_Detection.ino", "arduino_code/DhcpAddressPrinter.ino", "arduino_code/Potentiometer.ino", "arduino_code/Blob.ino", "arduino_code/Arrays.ino", "arduino_code/SAMD_Ethernet_MultiSwitch_beginner.ino", "arduino_code/pcf8523Countdown.ino", "arduino_code/AUnitPlatformIO.ino", "arduino_code/RedBearLab_BLE_Mini.ino", "arduino_code/PulseSensor_ATtiny85_noSerial.ino", "arduino_code/Pressure.ino", "arduino_code/tachometer.ino", "arduino_code/WebSocketClient_Sticky_SocketIO_RP2040W.ino", "arduino_code/pulseWidth.ino", "arduino_code/Timestamp.ino", "arduino_code/radio_send_test.ino", "arduino_code/SerialWiFiOTA.ino", "arduino_code/FileDownload.ino", "arduino_code/Struct.ino", "arduino_code/OTA_Qspi_Flash_Ethernet.ino", "arduino_code/TelnetConsole.ino", "arduino_code/MIDIUSB_clock.ino", "arduino_code/Joystick.ino", "arduino_code/Async_RegexPatterns_WT32_ETH01.ino", "arduino_code/Thermopile_Emissivity_Correction.ino", "arduino_code/Pager_Receive.ino", "arduino_code/FullyFeaturedSSL_ESP32.ino", "arduino_code/NTPDSTTest.ino", "arduino_code/SafeStringFromCharArray.ino", "arduino_code/AsyncHTTPRequest_STM32.ino", "arduino_code/BasicExample.ino", "arduino_code/second.ino", "arduino_code/WebSocketClientStompOverSockJs.ino", "arduino_code/recognition_simple.ino", "arduino_code/WM8731MikroSine.ino", "arduino_code/LongPrintTime_Blink.ino", "arduino_code/AutoConnectNonBlockingwParams.ino", "arduino_code/Scan.ino", "arduino_code/Update.ino", "arduino_code/LCD_Motors.ino", "arduino_code/midictrl.ino", "arduino_code/arcada_touchpaint.ino", "arduino_code/AsyncDNServerFull_ESP32_SC_ENC.ino", "arduino_code/RF69_Transmit_Address.ino", "arduino_code/BulkMessages.ino", "arduino_code/SdFat_circuitpython_backupFiles.ino", "arduino_code/AkseleratorHumanisasiKompos.ino", "arduino_code/ObstacleAvoidanceServo.ino", "arduino_code/StoragePartitions.ino", "arduino_code/BasicUsage.ino", "arduino_code/MD_MAX72xx_SimplePong.ino", "arduino_code/SafeString_v_ArduinoString.ino", "arduino_code/PID.ino", "arduino_code/JVCPanasonicSendDemo.ino", "arduino_code/List.ino", "arduino_code/BroadcastChat.ino", "arduino_code/Translator.ino", "arduino_code/micro_speech.ino", "arduino_code/05LCD_SimpleModeReading.ino", "arduino_code/FullyFeatured_STM32_LAN8720.ino", "arduino_code/sd_and_radio.ino", "arduino_code/joy_wing_oled.ino", "arduino_code/peripheral.ino", "arduino_code/W5500_Blynk_Email_nRF52.ino", "arduino_code/Generic_WiFiNINA_DimSwitch.ino", "arduino_code/ConnectNoEncryption.ino", "arduino_code/AsyncCaptivePortal_WT32_ETH01.ino", "arduino_code/AsyncHTTPMultiRequests_WT32_ETH01.ino", "arduino_code/NTPClientESP32.ino", "arduino_code/record.ino", "arduino_code/AWS_IoT_NB.ino", "arduino_code/HelloWorld.ino", "arduino_code/ESP8266_Standalone_SSL.ino", "arduino_code/ControlMyIoT_slider.ino", "arduino_code/AsyncCaptivePortalAdvanced_ESP32_SC_ENC.ino", "arduino_code/dht11esp8266.ino.ino", "arduino_code/Manual_Name.ino", "arduino_code/BackwardCompatibility.ino", "arduino_code/AFSK_Imperial_March.ino", "arduino_code/PID5752_QuadEncoder_TFTDemo.ino", "arduino_code/PrintAllVirtual.ino", "arduino_code/PeakMeterMono.ino", "arduino_code/ChooseRadioAccessTechnology.ino", "arduino_code/Hooked_esp32.ino", "arduino_code/using-timerone.ino", "arduino_code/DCCEXProtocol_Consist_Control.ino", "arduino_code/CustomToken.ino", "arduino_code/SAMD_WiFiNINA_TemperatureSensor.ino", "arduino_code/Hello_SoundSensor.ino", "arduino_code/getAXTimeTest.ino", "arduino_code/rpi_uart_test.ino", "arduino_code/multiFileProject.ino", "arduino_code/SendVerification.ino", "arduino_code/CustomHeader.ino", "arduino_code/DrawLineThickness.ino", "arduino_code/ESP32_WiFi.ino", "arduino_code/QuickStart.ino", "arduino_code/DHT20_offset.ino", "arduino_code/bme680async.ino", "arduino_code/spi_modetest.ino", "arduino_code/quadalphaanimation.ino", "arduino_code/XorModel.ino", "arduino_code/Async_AdvancedWebServer_LAN8720.ino", "arduino_code/MODBUS_RELAY_CTL.ino", "arduino_code/DialTone_Serial.ino", "arduino_code/AppConnectedEvents.ino", "arduino_code/tester.ino", "arduino_code/RPC_Remote_I2C_FullDuplex.ino", "arduino_code/AsyncMultiWebServer_STM32_LAN8720.ino", "arduino_code/test_readpixel.ino", "arduino_code/GPS_HardwareSerial_LOCUS_DumpBasic.ino", "arduino_code/GLEE_LED_Blink.ino", "arduino_code/nRF52_WiFiNINA_Light.ino", "arduino_code/Async_ConfigOnDRD_FS_MQTT_Ptr.ino", "arduino_code/GPS_HardwareSerial_LOCUS_Erase.ino", "arduino_code/Publicar.ino", "arduino_code/temp_humidity_oled.ino", "arduino_code/SAMD_Ethernet_DimSwitch.ino", "arduino_code/nodeMCU-websockets-client.HTTPS.ino", "arduino_code/Scheduler_example24_CPU_LOAD.ino", "arduino_code/bmp3xx_simpletest.ino", "arduino_code/AdvanceAlarm.ino", "arduino_code/arcada_waveplayer.ino", "arduino_code/dobbelsteen.ino", "arduino_code/PID5740_ANOencoder_7Seg_demo.ino", "arduino_code/Teensy_WebSocketServer_W5500.ino", "arduino_code/Async_SimpleWebServer_STM32_LAN8720.ino", "arduino_code/ButtonStatesKeyboard.ino", "arduino_code/EEPROM_get.ino", "arduino_code/hid_generic_inout.ino", "arduino_code/03_moving_the_motors_with_the_joystick.ino", "arduino_code/AsyncUDPMulticastServer.ino", "arduino_code/Chorus.ino", "arduino_code/Async_ConfigOnDoubleReset_Multi.ino", "arduino_code/ReadCan.ino", "arduino_code/regex_patterns.ino", "arduino_code/ListCollectionIds.ino", "arduino_code/FlashStorage_CRC.ino", "arduino_code/WIO_Terminal_MotionSensor.ino", "arduino_code/graphicstest_pyportal.ino", "arduino_code/Add.ino", "arduino_code/CloseBy.ino", "arduino_code/L298NX2-Simple.ino", "arduino_code/adafruit_lsm6ds_unifiedsensors.ino", "arduino_code/WiFiUdpNtpClient_WiFiMulti.ino", "arduino_code/ControlMyIoT.ino", "arduino_code/CAN_read.ino", "arduino_code/Menu.ino", "arduino_code/DweetPost.ino", "arduino_code/FSK4_Transmit_AFSK.ino", "arduino_code/ethernet_status.ino", "arduino_code/SX127x_Channel_Activity_Detection_Blocking.ino", "arduino_code/nRF52_Ethernet_Switch.ino", "arduino_code/zerodma_spi1.ino", "arduino_code/generate_gradient.ino", "arduino_code/SoftwareSpi.ino", "arduino_code/GCP_IoT_Core_WiFi.ino", "arduino_code/stepper_oneRevolution.ino", "arduino_code/SocketAndHttp-Teensy41-Server.ino", "arduino_code/ALB_Sonar.ino", "arduino_code/TimeInterval-intervalMicros.ino", "arduino_code/PassThroughQuad.ino", "arduino_code/Async_ConfigOnSwitchFS.ino", "arduino_code/nRF52_WiFiNINA_DimSwitch.ino", "arduino_code/ArduBreakout.ino", "arduino_code/transposition02.ino", "arduino_code/WIO_Terminal_DimSwitch.ino", "arduino_code/EventKeypad.ino", "arduino_code/JsonHttpClient.ino", "arduino_code/FreezeDelay.ino", "arduino_code/AWS_IoT_Opta_Ethernet.ino", "arduino_code/RingBufInterruptsExample.ino", "arduino_code/KeybusReaderIP.ino", "arduino_code/SignInWithRefreshAccessToken.ino", "arduino_code/Anonymous.ino", "arduino_code/nRF24_Transmit_Interrupt.ino", "arduino_code/Arduino_MKR1400_GSM_ETH_SSL.ino", "arduino_code/SX1509.ino", "arduino_code/Arduino_WiFi_Shield_101.ino", "arduino_code/SAMD_Ethernet_GarageDoor.ino", "arduino_code/HT16K33.ino", "arduino_code/LED_Blink.ino", "arduino_code/bmp280test.ino", "arduino_code/FSK4_Transmit.ino", "arduino_code/FlashStorage_update.ino", "arduino_code/Audio_Spectrum.ino", "arduino_code/STM32_WebSocketServer_LEDcontrol_LAN8742A.ino", "arduino_code/OTA_Arduino_Server.ino", "arduino_code/IRrecvDemo.ino", "arduino_code/nRF52_Ethernet_AQSensor.ino", "arduino_code/CC1101_Transmit_Blocking.ino", "arduino_code/01_Controlling_Manually_Braccio.ino", "arduino_code/driverpatch_1_13.ino", "arduino_code/Talk_UK_Acorn.ino", "arduino_code/Energia_WiFi.ino", "arduino_code/LegacyToken.ino", "arduino_code/TestGPRS.ino", "arduino_code/example.ino", "arduino_code/STM32WLx_Transmit_Interrupt.ino", "arduino_code/MultiServers.ino", "arduino_code/OTA_Usage_Portenta.ino", "arduino_code/SIM7XXX_LTE_Demo.ino", "arduino_code/SimpleNoAuth.ino", "arduino_code/Generic_WebSocketServerFragmentation_EthernetENC.ino", "arduino_code/PIR_performance.ino", "arduino_code/WIO_Terminal_Switch.ino", "arduino_code/NBScanNetworks.ino", "arduino_code/mqtt_qos.ino", "arduino_code/WebClient.ino", "arduino_code/Blink.ino", "arduino_code/Teensy_WebSocketClientStompOverSockJs_W5500.ino", "arduino_code/hid_gamepad.ino", "arduino_code/SAMD_WiFiNINA_TV.ino", "arduino_code/SAMD_WiFiNINA_DuckDNS_Client.ino", "arduino_code/ESP8266_NoteOnOffEverySec.ino", "arduino_code/AFMotor_ConstantSpeed.ino", "arduino_code/Braccio_moving_range_angles.ino", "arduino_code/megaAVR_Ethernet_DuckDNS_Client.ino", "arduino_code/ReadTemperature.ino", "arduino_code/ScratchSensorBoard.ino", "arduino_code/Esp32-Client.ino", "arduino_code/PraktikTampilanLCD.ino", "arduino_code/Signup.ino", "arduino_code/i2c_L3G.ino", "arduino_code/Face_Detection.ino", "arduino_code/plugins.ino", "arduino_code/Lab14_15_TinyML_Magic_Wand.ino", "arduino_code/Talk_US_Clock.ino", "arduino_code/ResolvingHostNames.ino", "arduino_code/imageloader_tft_gizmo.ino", "arduino_code/AltcpTemplate.ino", "arduino_code/Scheduler_example19_Dynamic_Tasks.ino", "arduino_code/now.ino", "arduino_code/LoopTimer_BlinkDelay.ino", "arduino_code/WebSocketClientStomp_W5500.ino", "arduino_code/analogRead.ino", "arduino_code/dynamic.ino", "arduino_code/enom_Client.ino", "arduino_code/01_aligning_braccio.ino", "arduino_code/AdvancedWebServer_RP2040_SPI1.ino", "arduino_code/gpio_interrupts.ino", "arduino_code/bmp280_forced.ino", "arduino_code/imu_orientation.ino", "arduino_code/SH1106_128x64_SPi_QTPY.ino", "arduino_code/WiFiRegisteringServicesWithTxtRecord.ino", "arduino_code/Set.ino", "arduino_code/Multiple.ino", "arduino_code/ESP8266_NoteOnOffEverySec_softAP_mDNS.ino", "arduino_code/BatteryCharger.ino", "arduino_code/LR11x0_WiFi_Scan_Interrupt.ino", "arduino_code/D11-Bootloader.ino", "arduino_code/SAMD_Ethernet_PowerSensor.ino", "arduino_code/FullyFeatured_ESP8266_Ethernet.ino", "arduino_code/DumbIRRepeater.ino", "arduino_code/Email.ino", "arduino_code/TimeSyncNTP.ino", "arduino_code/Generic_WebSocketClientStompOverSockJs_WiFiNINA.ino", "arduino_code/RF_Basic_Transmit_Text.ino", "arduino_code/SerialPassthrough.ino", "arduino_code/SHA1.ino", "arduino_code/megaAVR_ESP_AT_DuckDNS_Client.ino", "arduino_code/adcdemo.ino", "arduino_code/Mid_Side.ino", "arduino_code/SimpleMagnetometer.ino", "arduino_code/RISETLPPM.ino", "arduino_code/ExFatLogger.ino", "arduino_code/ButtonPoll.ino", "arduino_code/testBraccio90.ino", "arduino_code/EInkFeatherWing.ino", "arduino_code/AsyncDNSServer_ESP32_SC_W6100.ino", "arduino_code/WT32_ETH01_WebSocketClient.ino", "arduino_code/ansiSerial.ino", "arduino_code/Group.ino", "arduino_code/RTC_Alarm.ino", "arduino_code/person_detection_M5CameraModelA.ino", "arduino_code/Generic_Ethernet_MultiSwitch_advance.ino", "arduino_code/ThinkInk_tricolor.ino", "arduino_code/MCUFRIEND.ino", "arduino_code/EventLogging.ino", "arduino_code/Arduino_101_BLE.ino", "arduino_code/JsonFilterExample.ino", "arduino_code/semilimes_json_test.ino", "arduino_code/MultiPath.ino", "arduino_code/DCMotorTest.ino", "arduino_code/TwoPulseSensors_On_OneArduino.ino", "arduino_code/WIO_Terminal_MultiSwitch_beginner.ino", "arduino_code/FailingTest.ino", "arduino_code/Encode_Frame_on_the_Fly.ino", "arduino_code/i2c_SI7021.ino", "arduino_code/BreakoutST7735-160x128.ino", "arduino_code/HttpBasicAuth_LAN8720.ino", "arduino_code/FeatherWingTest.ino", "arduino_code/MoveTo.ino", "arduino_code/Subset.ino", "arduino_code/Geiger_Counter_OLED_BT_WF.ino", "arduino_code/battery-sigfox-wifi.ino", "arduino_code/ControlAssist-AdcMonitor.ino", "arduino_code/DHT20_async.ino", "arduino_code/nRF52_Ethernet_DoorBell.ino", "arduino_code/Scheduler_example08_LTS.ino", "arduino_code/joystick_control_buzzer.ino", "arduino_code/Sine.ino", "arduino_code/SdFat_OpenNext.ino", "arduino_code/FullyFeatured_RP2040W.ino", "arduino_code/SX128x_Transmit_Interrupt.ino", "arduino_code/TCPClientSingle.ino", "arduino_code/pdm_analogout.ino", "arduino_code/05Map.ino", "arduino_code/HelloCanSat.ino", "arduino_code/Async_ESP32_FSWebServer.ino", "arduino_code/FirstConfiguration.ino", "arduino_code/Guitar.ino", "arduino_code/ESP32_FSWebServer.ino", "arduino_code/spacebrewBoolean.ino", "arduino_code/i2c_address_detect.ino", "arduino_code/04TimeInputSimple.ino", "arduino_code/DHT20_read_status.ino", "arduino_code/EthernetENC_WM_Config.ino", "arduino_code/Graph.ino", "arduino_code/StringExample.ino", "arduino_code/PulseSensor_UNO_R4_WiFi_LEDmatrix_Heartbeat.ino", "arduino_code/LAN8720_Ethernet_Blynk_Email.ino", "arduino_code/BMP280_ESP32_I2C_Normal_DefinedPins.ino", "arduino_code/drum05.ino", "arduino_code/WIO_Terminal_PowerSensor.ino", "arduino_code/reuse.ino", "arduino_code/GetIamPolicy.ino", "arduino_code/CircuitPlayground.ino", "arduino_code/PrintTimeDelay_Task.ino", "arduino_code/GarageDoor.ino", "arduino_code/CustomChars.ino", "arduino_code/midi_pizza_box_dj.ino", "arduino_code/Generic_WiFiNINA_Speaker.ino", "arduino_code/TurnOnKelvinatorAC.ino", "arduino_code/TTGO_TCALL_MRD_GSM.ino", "arduino_code/Teensy_WebSocketServer_WiFiNINA.ino", "arduino_code/oppo_raw.ino", "arduino_code/Analog_Out.ino", "arduino_code/LCDWriteText.ino", "arduino_code/mqtt_winc1500.ino", "arduino_code/unit_test.ino", "arduino_code/Latching.ino", "arduino_code/mcp9808.ino", "arduino_code/ProgmemExample.ino", "arduino_code/i2c_tiny_usb_adapter.ino", "arduino_code/DHT12_test_esp.ino", "arduino_code/Part_2_06_Feedback_Delay.ino", "arduino_code/AsyncDweetPost_STM32.ino", "arduino_code/LM35.ino", "arduino_code/01ValueDisplay.ino", "arduino_code/SafeString_ReadFrom_WriteTo.ino", "arduino_code/AVR_NoteOnOffEverySec.ino", "arduino_code/flash_speedtest.ino", "arduino_code/TextField.ino", "arduino_code/Si443x_Receive_Blocking.ino", "arduino_code/MotionSensor.ino", "arduino_code/SAMD_WiFiNINA_Light.ino", "arduino_code/unittests.ino", "arduino_code/Basic32Plus.ino", "arduino_code/DataFilter.ino", "arduino_code/AsyncWebServer_SendChunked.ino", "arduino_code/soundPressureLevel.ino", "arduino_code/Hello_Speaker.ino", "arduino_code/ECCX08RandomNumber.ino", "arduino_code/LORA_Receiver-EC.ino", "arduino_code/Scheduler_example13_Micros.ino", "arduino_code/WebClient_ESP.ino", "arduino_code/PersonDetectionExample.ino", "arduino_code/JsonServer.ino", "arduino_code/WiFiRegisteringServices.ino", "arduino_code/CustomHeader_LAN8720.ino", "arduino_code/PhysicsLabFirmware.ino", "arduino_code/mqttStatus.ino", "arduino_code/Arduino_Ethernet_Manual.ino", "arduino_code/ReadATweet.ino", "arduino_code/Hello_Arduino.ino", "arduino_code/EsploraBlink.ino", "arduino_code/01_playing_with_the_Joystick.ino", "arduino_code/Hello_Accelerometer.ino", "arduino_code/DCCEXProtocol_SSID.ino", "arduino_code/SaveAndLoad.ino", "arduino_code/touch-switch.ino", "arduino_code/LCD_AdvancedMode.ino", "arduino_code/mqtt_auth.ino", "arduino_code/Portenta_H7_WebSocketClient_Sticky_SocketIO.ino", "arduino_code/JSONValueExtractor.ino", "arduino_code/AutoConnectWithReset.ino", "arduino_code/tachometer_led_display.ino", "arduino_code/EncryptedBatteryMonitor.ino", "arduino_code/motor_control_31kHz.ino", "arduino_code/SignInWithIDToken.ino", "arduino_code/DCCEXProtocol_Multi_Throttle_Control.ino", "arduino_code/flash_erase.ino", "arduino_code/MiniSerial.ino", "arduino_code/Digistump_Oak.ino", "arduino_code/tft_interrupt.ino", "arduino_code/AlarmPolling.ino", "arduino_code/Speaker.ino", "arduino_code/udp_send_test.ino", "arduino_code/PeakMeterStereo.ino", "arduino_code/SevenSegmentDisplay.ino", "arduino_code/Flasher.ino", "arduino_code/ArduinoIoTCloud-Notecard.ino", "arduino_code/W5500_Blynk_Teensy.ino", "arduino_code/Async_HttpBasicAuth.ino", "arduino_code/WiFiChatServer.ino", "arduino_code/ssd1306_128x32_spi.ino", "arduino_code/SAMD_WiFiNINA_DimSwitch.ino", "arduino_code/FFT_04.ino", "arduino_code/MApps.ino", "arduino_code/ArduinoIoTCloud-Basic.ino", "arduino_code/03LED_Color.ino", "arduino_code/SineOutTest.ino", "arduino_code/Message_To_OLED.ino", "arduino_code/FastCapacitiveSensor.ino", "arduino_code/uvi_demo_low_power.ino", "arduino_code/ArduinoNano33BLE_GestureClassifier.ino", "arduino_code/SmartHome.ino", "arduino_code/ArduinoLogoDrawing.ino", "arduino_code/IRMQTTServer.ino", "arduino_code/BSEC2GasScannerCollectData.ino", "arduino_code/ErrorHandling.ino", "arduino_code/AFSK_Tone_AM.ino", "arduino_code/Callback.ino", "arduino_code/W5500_Blynk_SAMD.ino", "arduino_code/AsyncHTTPRequest_ESP32_ENC.ino", "arduino_code/Temperature_Alternate_Example.ino", "arduino_code/spacebrewRange.ino", "arduino_code/all-inkl_Client.ino", "arduino_code/dht_oled_IoTtweet.ino", "arduino_code/EepromWrite.ino", "arduino_code/RPi_Pico_WizFi360.ino", "arduino_code/flash_erase_express.ino", "arduino_code/graphicstest_feather_esp32s2_tft.ino", "arduino_code/BaseExtCaseTest.ino", "arduino_code/BlinkRedLed_M7.ino", "arduino_code/speed.ino", "arduino_code/Logger.ino", "arduino_code/ESP_FSWebServer.ino", "arduino_code/ResetPassword.ino", "arduino_code/MotorTest.ino", "arduino_code/WebSocketClientSocketIOack.ino", "arduino_code/GetAndSendData.ino", "arduino_code/GPS_HardwareSerial_EchoTest.ino", "arduino_code/Real-Time-Updates.ino", "arduino_code/SimpleHTTPExample.ino", "arduino_code/WiFiWebClientRepeating.ino", "arduino_code/AirQualitySensor.ino", "arduino_code/TurnOnDaikinAC.ino", "arduino_code/KeypadInterface-MQTT.ino", "arduino_code/ConfigStorage_ESP8266.ino", "arduino_code/lvglCounter.ino", "arduino_code/SX126x_Channel_Activity_Detection_Receive.ino", "arduino_code/ECCX08SelfSignedCert.ino", "arduino_code/ConsoleAsciiTable.ino", "arduino_code/LoRaWAN_Reference.ino", "arduino_code/RF_Reciever_Interrupt.ino", "arduino_code/SendJsonSimplest.ino", "arduino_code/EchoString.ino", "arduino_code/webusb_rgb.ino", "arduino_code/micro_speech_arcada.ino", "arduino_code/accel_mouse.ino", "arduino_code/StreamCallback.ino", "arduino_code/config.ino", "arduino_code/ajoy.ino", "arduino_code/RP2040_ESP8266Shield.ino", "arduino_code/ESP8266ConfigExample.ino", "arduino_code/Bluemix.ino", "arduino_code/SimplePost_LAN8720.ino", "arduino_code/DweetGet.ino", "arduino_code/TestWebServer.ino", "arduino_code/SecureDigital.ino", "arduino_code/ArduinoMQTT.ino", "arduino_code/RPC_DweetBlink_Remote.ino", "arduino_code/AnalogBinLogger.ino", "arduino_code/StandardFirmataChipKIT.ino", "arduino_code/ControlMyIoT_switch.ino", "arduino_code/noMacros.ino", "arduino_code/flash_info.ino", "arduino_code/arduino_uno_r4_wifi.ino", "arduino_code/Microduino_BLE.ino", "arduino_code/UpdateInlineKeyboard.ino", "arduino_code/WebSocketClientSocketIO_ENC.ino", "arduino_code/ControlAssist-FadeLed.ino", "arduino_code/Switch.ino", "arduino_code/RF69_Transmit_AES.ino", "arduino_code/RealTimeClock_LowPower.ino", "arduino_code/SerialGSMPassthrough.ino", "arduino_code/RN_XV_WiFly.ino", "arduino_code/StandardFirmata.ino", "arduino_code/PostWithHeaders_LAN8720.ino", "arduino_code/ProjekSecureApp.ino", "arduino_code/multi_tenant.ino", "arduino_code/NTP_Name.ino", "arduino_code/ProgmemStream.ino", "arduino_code/SAMD_Ethernet_Lock.ino", "arduino_code/MQTTClient_SSL_Complex.ino", "arduino_code/ESP8266_WebSocketClientSocketIO.ino", "arduino_code/WebSocketClient_WiFi101.ino", "arduino_code/DDNS_Client.ino", "arduino_code/Si443x_Transmit_Interrupt.ino", "arduino_code/hallowingm4_arcadatest.ino", "arduino_code/AutoConnectWithFSParameters.ino", "arduino_code/AsyncHTTPRequest_ESP32_W5500.ino", "arduino_code/customOptions.ino", "arduino_code/AsyncMultiWebServer_ESP32_W5500.ino", "arduino_code/BatterySolarStatus.ino", "arduino_code/UserAuth.ino", "arduino_code/ENC28J60_Blynk.ino", "arduino_code/DHT_Unified_Sensor.ino", "arduino_code/cheapStepper_move.ino", "arduino_code/shieldtest.ino", "arduino_code/FFT_speedup.ino", "arduino_code/Melody.ino", "arduino_code/ReadMotorMeasurement.ino", "arduino_code/clickEncoder.ino", "arduino_code/TinyGSM_MKR1400.ino", "arduino_code/GPS_HardwareSerial_Parsing.ino", "arduino_code/Generic_WiFiNINA_MultiSwitch_advance.ino", "arduino_code/SendDataToGoogleSpreadsheet.ino", "arduino_code/Accelerometer_Impact_Detection.ino", "arduino_code/Async_ConfigOnSwitchFS_MQTT_Ptr.ino", "arduino_code/DHT11ESP32_SSL.ino", "arduino_code/SafeStringReplace.ino", "arduino_code/AsyncDNServerFull_ESP32_W5500.ino", "arduino_code/Generic_WiFiNINA_TemperatureSensor.ino", "arduino_code/AsyncHTTPRequest_WT32_ETH01.ino", "arduino_code/AsyncDNServerFull_WT32_ETH01.ino", "arduino_code/OTA_GitHub_Server.ino", "arduino_code/AsyncDNSServer_ESP32_W5500.ino", "arduino_code/MQTTClient_SSL.ino", "arduino_code/SpectrumSerialPlotter.ino", "arduino_code/MD_MAX72xx_SimpleSlots.ino", "arduino_code/SecurityRules.ino", "arduino_code/bitpattern.ino", "arduino_code/serveStatic.ino", "arduino_code/Arduino_MKR_ETH.ino", "arduino_code/DataRetaining.ino", "arduino_code/LORA_EdgeControl.ino", "arduino_code/serial_host_bridge.ino", "arduino_code/radio_receive_test.ino", "arduino_code/SX128x_BLE_Modem.ino", "arduino_code/mqtt_basic.ino", "arduino_code/AsyncHTTPMultiRequests_ESP32_W5500.ino", "arduino_code/TempDelayInputBlink_Tasks.ino", "arduino_code/person_detection_M5CameraModelB.ino", "arduino_code/03Silder.ino", "arduino_code/tmp36.ino", "arduino_code/FeatherWingILI9341.ino", "arduino_code/WriteToDashboard.ino", "arduino_code/RTTY_Transmit_AFSK.ino", "arduino_code/TFTGizmo.ino", "arduino_code/LCDDebugPrint.ino", "arduino_code/KeybusReader.ino", "arduino_code/WiFiClientSecure.ino", "arduino_code/serialio.ino", "arduino_code/Mega_ESP8266Shield.ino", "arduino_code/EEPROM_iteration.ino", "arduino_code/pcf8523.ino", "arduino_code/Function.ino", "arduino_code/arcada_clue_test.ino", "arduino_code/Arduino_Debug_Basic.ino", "arduino_code/L298N-Callback.ino", "arduino_code/EEPROM_CRC.ino", "arduino_code/MqttClient.ino", "arduino_code/RadioTransmitHelloCanSat.ino", "arduino_code/COMonitoringWithFuzzyLogicAndAplikasi.ino", "arduino_code/CC1101_Settings.ino", "arduino_code/sensorapi.ino", "arduino_code/ConnectionHandlerDemo.ino", "arduino_code/Provisioning_WiFiWebServer.ino", "arduino_code/ReplyKeyboardMarkup.ino", "arduino_code/ControlMyIoT_ESP32.ino", "arduino_code/simpleServerCaptive.ino", "arduino_code/Part_3_01_Peak_Detection.ino", "arduino_code/WiFiSimpleReceiveCallback.ino", "arduino_code/mDNSResolver.ino", "arduino_code/GPS_I2C_OLEDdebug.ino", "arduino_code/WiFiKu.ino", "arduino_code/zerodma_adc.ino", "arduino_code/Nicla_IoT_Bridge.ino", "arduino_code/ChangeI2CAddress.ino", "arduino_code/BufferedPrintTime_Blink.ino", "arduino_code/Example4_HeartBeat_Plotter.ino", "arduino_code/concurrent.ino", "arduino_code/AutoConnectWithStaticIP.ino", "arduino_code/Async_AdvancedWebServer_MemoryIssues_SendArduinoString.ino", "arduino_code/01_Check_Inputs_Two_Axis.ino", "arduino_code/i2c_MPU9250.ino", "arduino_code/two-encoders.ino", "arduino_code/ModbusRTUServerLED.ino", "arduino_code/ReadSensors.ino", "arduino_code/AsyncDNServerFull_ESP32_ENC.ino", "arduino_code/RedBearLab_BlendMicro.ino", "arduino_code/EInkGray29BmpButtonDemo.ino", "arduino_code/SX126x_Channel_Activity_Detection_Interrupt.ino", "arduino_code/hid_boot_keyboard.ino", "arduino_code/DhcpChatServer.ino", "arduino_code/IrSenderPwmSpinWait.ino", "arduino_code/UART_loopback.ino", "arduino_code/ALB_TiltSensor.ino", "arduino_code/CustomKeypad.ino", "arduino_code/BI_Ethernet_Blynk_Email.ino", "arduino_code/4-20mA_Input.ino", "arduino_code/WiFiSimpleSender.ino", "arduino_code/WiFi101_SD_OTA.ino", "arduino_code/AsyncFSBrowser_STM32.ino", "arduino_code/ESP32DeepSleepDisplay.ino", "arduino_code/CustomAuth.ino", "arduino_code/GenDownloadURL.ino", "arduino_code/Adafruit_Feather_32u4_BLE.ino", "arduino_code/Watermark10k.ino", "arduino_code/Teensy_Ethernet_DuckDNS_Client.ino", "arduino_code/SimplePut_LAN8720.ino", "arduino_code/IrisExample.ino", "arduino_code/Magnetometer_Simple_Vector.ino", "arduino_code/CircuitPlaygroundFirmata.ino", "arduino_code/FullyFeatured_ESP32.ino", "arduino_code/Oled_Display.ino", "arduino_code/ControlLed.ino", "arduino_code/spi_register_bits.ino", "arduino_code/Temp_probes_RTD.ino", "arduino_code/Pressure_Sensor.ino", "arduino_code/IMU_Accelerometer.ino", "arduino_code/RF_Recieve_with_Metrics.ino", "arduino_code/Teensy_WebSocketClientSocketIO_NativeEthernet.ino", "arduino_code/ServerWithListeners.ino", "arduino_code/SAMD_Ethernet_Blinds.ino", "arduino_code/SIM800_SIM900.ino", "arduino_code/Bench.ino", "arduino_code/serialStuff.ino", "arduino_code/WS2812B_Clock_90Led.ino", "arduino_code/VirtualKeypad-Blynk.ino", "arduino_code/imageloader.ino", "arduino_code/Barometer_Sensor.ino", "arduino_code/Filters.ino", "arduino_code/AVR_E3_NoteOnOffEverySec.ino", "arduino_code/GPS_SoftwareSerial_Parsing.ino", "arduino_code/HammingSoftwareSerial.ino", "arduino_code/ReadHumidity.ino", "arduino_code/SetUpdateDelete.ino", "arduino_code/I2CDisplay.ino", "arduino_code/joy_featherwing_example.ino", "arduino_code/Scheduler_example04_StatusRequest.ino", "arduino_code/Combined_Demo.ino", "arduino_code/SampleRateHC.ino", "arduino_code/WiFiSSLClient.ino", "arduino_code/LedSequencingMillisDelay.ino", "arduino_code/timers_callback.ino", "arduino_code/ENC28J60.ino", "arduino_code/ReadWrite.ino", "arduino_code/WT32_ETH01_WebSocketClientSSL.ino", "arduino_code/AsyncStepper.ino", "arduino_code/04_Speed_Control.ino", "arduino_code/i2c_LPS331.ino", "arduino_code/FactoryReset.ino", "arduino_code/BMx280_SoftWire.ino", "arduino_code/lsm9ds1.ino", "arduino_code/UsbMidiSynth.ino", "arduino_code/nRF52_Ethernet_ContactSensor.ino", "arduino_code/i2c_MMA8451.ino", "arduino_code/Create.ino", "arduino_code/GeoLocation.ino", "arduino_code/04_testing_it_out.ino", "arduino_code/BreakoutST7735-160x80.ino", "arduino_code/IrSenderPwmSoftDelay.ino", "arduino_code/driverpatch_1_12.ino", "arduino_code/DuckDNS_Client.ino", "arduino_code/average.ino", "arduino_code/SAMD_Ethernet_TemperatureSensor.ino", "arduino_code/DS3231_test.ino", "arduino_code/Async_RegexPatterns_ESP32_W5500.ino", "arduino_code/Braccio_Record_and_Replay.ino", "arduino_code/WiFiAdvancedChatServer.ino", "arduino_code/ATtinySerialOutExample.ino", "arduino_code/ESP8266_Standalone.ino", "arduino_code/06_Draw_Rectangle.ino", "arduino_code/DHT_ESP32.ino", "arduino_code/Shallow.ino", "arduino_code/SSLCertificateManagement_Example.ino", "arduino_code/AppInstanceInfo.ino", "arduino_code/TembooDeviceConfig.ino", "arduino_code/mcp9800.ino", "arduino_code/TFT_eSPI.ino", "arduino_code/AsyncDweetPost.ino", "arduino_code/BMx280_SPI.ino", "arduino_code/SetupPersistentWiFiConnection.ino", "arduino_code/Arduino_Serial_USB.ino", "arduino_code/BTS7960_PWM.ino", "arduino_code/PhotoFromSerial.ino", "arduino_code/02_selecting_the_motor_in_the_LCD_menu.ino", "arduino_code/Generic_Ethernet_TemperatureSensor.ino", "arduino_code/19V.ino", "arduino_code/CalibratedSpeedExample.ino", "arduino_code/SHT31test.ino", "arduino_code/SX127x_Receive_Direct.ino", "arduino_code/RPi_Pico_ESP8266Shield.ino", "arduino_code/datecalc.ino", "arduino_code/SimpleDrum.ino", "arduino_code/02_selecting_the_motor_with_the_enter_button.ino", "arduino_code/Filter.ino", "arduino_code/load_mdif.ino", "arduino_code/UDPClientSingle.ino", "arduino_code/TinyDuino_WiFi.ino", "arduino_code/PowerOnButton.ino", "arduino_code/Async_RegexPatterns.ino", "arduino_code/GenericNetwork.ino", "arduino_code/SimpleWebServer.ino", "arduino_code/EInkBreakouts.ino", "arduino_code/lcdMono.ino", "arduino_code/ReadMacAddress.ino", "arduino_code/drv8833Tester.ino", "arduino_code/AnonymousCB.ino", "arduino_code/Navigating_the_display_menu.ino", "arduino_code/ssd1306_128x64_spi.ino", "arduino_code/SafeString_fixedWidthFormat.ino", "arduino_code/Button_Navigation.ino", "arduino_code/WriteCan.ino", "arduino_code/Async_HelloServer.ino", "arduino_code/Async_AdvancedWebServer_SendChunked.ino", "arduino_code/ModbusRTUClientKitchenSink.ino", "arduino_code/Issue162.ino", "arduino_code/Teensy_WebSocketServer_LEDcontrol_NativeEthernet.ino", "arduino_code/basic_multikey.ino", "arduino_code/obc_test.ino", "arduino_code/SAMD_Ethernet_Speaker.ino", "arduino_code/InternetTime.ino", "arduino_code/onDemandWebPortal.ino", "arduino_code/Programme1.ino", "arduino_code/lolin32.ino", "arduino_code/display_camera.ino", "arduino_code/Accelerometer.ino", "arduino_code/RF_Transmit_Text.ino", "arduino_code/benchSD.ino", "arduino_code/SimpleTimeInput.ino", "arduino_code/simple_temperature.ino", "arduino_code/Async_ConfigOnSwitch.ino", "arduino_code/STM32_ESP_AT_DuckDNS_Client.ino", "arduino_code/Contrast.ino", "arduino_code/Encoders.ino", "arduino_code/Passthrough.ino", "arduino_code/PID5740_ANOencoder_demo.ino", "arduino_code/Simple_esp32.ino", "arduino_code/Generic_WiFiNINA_Thermostat.ino", "arduino_code/ESP8266_Shield.ino", "arduino_code/ATWebServer_BigData.ino", "arduino_code/MultiDecoder.ino", "arduino_code/KSKIProgjek.ino", "arduino_code/AdvancedWebServer_WiFiMulti.ino", "arduino_code/ThinkInk_partial.ino", "arduino_code/1_simple_use.ino", "arduino_code/GestureSensor.ino", "arduino_code/wifi_ds18b20.ino", "arduino_code/LunaSat_Basic_Observation.ino", "arduino_code/PWM_PWM_DUAL.ino", "arduino_code/PSIUpdateV2.ino", "arduino_code/SendATweet.ino", "arduino_code/GPRSPing.ino", "arduino_code/04_navigate_challenge_II.ino", "arduino_code/EthernetENC_Blynk_Teensy.ino", "arduino_code/SSTV_Transmit_AFSK.ino", "arduino_code/Location.ino", "arduino_code/mic_FFT_classic.ino", "arduino_code/EthernetENC_Blynk_Email.ino", "arduino_code/StandaloneFlashStorage.ino", "arduino_code/AFSK_External_Radio.ino", "arduino_code/Ambient_Gesture.ino", "arduino_code/nRF52_WiFiNINA_TemperatureSensor.ino", "arduino_code/FileOverwrite.ino", "arduino_code/Controlling_Manually_Braccio.ino", "arduino_code/LoraSendAndReceive.ino", "arduino_code/Light_FastLED_WS2812.ino", "arduino_code/midi_test.ino", "arduino_code/readData.ino", "arduino_code/Servo_test.ino", "arduino_code/Generic_Ethernet_Blinds.ino", "arduino_code/Part_2_07_Filters.ino", "arduino_code/ConfigOnDRD_FS_MQTT_Ptr_Medium.ino", "arduino_code/Scheduler_example19_Dynamic_Tasks_stdQueue.ino", "arduino_code/MD_MAX72xx_Message_SD.ino", "arduino_code/buildtest.ino", "arduino_code/Generic_Ethernet_Speaker.ino", "arduino_code/pot_RGB.ino", "arduino_code/CC1101_Receive_Address.ino", "arduino_code/comm_badge.ino", "arduino_code/ALB_SoundSensor.ino", "arduino_code/WebSocketClient_Demo.ino", "arduino_code/AsyncDNSServer_ESP32_W6100.ino", "arduino_code/MelodyButton.ino", "arduino_code/Sweep.ino", "arduino_code/FFT_03.ino", "arduino_code/loraABP.ino", "arduino_code/nodeMCU-GY-68-OTA.ino", "arduino_code/HttpsClient.ino", "arduino_code/Generic_WiFiNINA_GarageDoor.ino", "arduino_code/LR11x0_Receive_Interrupt.ino", "arduino_code/HomeKit-HomeSpan.ino", "arduino_code/ReadSHT1xValues.ino", "arduino_code/SimpleAccelerometer.ino", "arduino_code/WebSocketClient_Sticky_SocketIO_WiFi.ino", "arduino_code/Teens41-Server.ino", "arduino_code/minimatrix16x8.ino", "arduino_code/TurnOnFujitsuAC.ino", "arduino_code/WebSocketClientStompOverSockJs_WiFi101.ino", "arduino_code/basic_config_state_ulp_plus.ino", "arduino_code/DS2431.ino", "arduino_code/AsyncUDPClient.ino", "arduino_code/IANSv2.ino", "arduino_code/HelloServer.ino", "arduino_code/braccioOfUnoWiFi.ino", "arduino_code/adafruitio_time_esp8266.ino", "arduino_code/AY3891x_EX4_IO_Ports.ino", "arduino_code/STM32WLx_Receive_Blocking.ino", "arduino_code/PraktikSerial1Arah.ino", "arduino_code/DS3231_set.ino", "arduino_code/Edgent_MKR1010.ino", "arduino_code/On_Chip_Calibration.ino", "arduino_code/Signals4x3.ino", "arduino_code/json_via_arduino_serial.ino", "arduino_code/MD_MAX72xx_Eyes.ino", "arduino_code/LIS3DHTR_SPI.ino", "arduino_code/Generic_Ethernet_Switch.ino", "arduino_code/gyroscope.ino", "arduino_code/ESP8266_WebSocketClientStomp.ino", "arduino_code/WiFiWebClientRepeating_WiFiMulti.ino", "arduino_code/fixture.ino", "arduino_code/EsploraPong.ino", "arduino_code/ArduinoIoTCloud-DeferredOTA.ino", "arduino_code/WebServer.ino", "arduino_code/PC_Joystick.ino", "arduino_code/Digital_output.ino", "arduino_code/Filter_FIR.ino", "arduino_code/Teensy_WebSocketServer_LEDcontrol_QNEthernet.ino", "arduino_code/02Notification_Interval.ino", "arduino_code/fullIdle.ino", "arduino_code/IPerfServer.ino", "arduino_code/01Bridge.ino", "arduino_code/CalcBiquadToneControlDAP.ino", "arduino_code/graphicstest_pybadge_pygamer.ino", "arduino_code/R05_Inputs.ino", "arduino_code/SimpleGyroscope.ino", "arduino_code/Homebridge-MQTT.ino", "arduino_code/DHTtester.ino", "arduino_code/Si443x_Receive_Interrupt.ino", "arduino_code/WebServerAP.ino", "arduino_code/Sequencers.ino", "arduino_code/SingleDataObject.ino", "arduino_code/i2corspi_register.ino", "arduino_code/Arduino_MKRNB.ino", "arduino_code/i2c_eeprom_update.ino", "arduino_code/SD_Size.ino", "arduino_code/AsyncCaptivePortalAdvanced_WT32_ETH01.ino", "arduino_code/SX128x_Receive_Blocking.ino", "arduino_code/full_system_test.ino", "arduino_code/person_detection.ino", "arduino_code/Motor_test.ino", "arduino_code/GPS_SoftwareSerial_LOCUS_Status.ino", "arduino_code/wifi_ds18b20_with_wifimanager.ino", "arduino_code/Part_2_01_First_Design_Tool_Use.ino", "arduino_code/DynamicKeypad.ino", "arduino_code/Teensy_WebSocketClientSocketIO_QNEthernet.ino", "arduino_code/AccessTokenFile.ino", "arduino_code/PassthroughTest.ino", "arduino_code/MinimumSizeSdReader.ino", "arduino_code/Talk_US_TI99.ino", "arduino_code/IRrecvDump.ino", "arduino_code/ConfigOnSwitch.ino", "arduino_code/RingBufExample.ino", "arduino_code/graphicstest_hallowing_m4.ino", "arduino_code/IANS.ino", "arduino_code/ECCX08Counter.ino", "arduino_code/dataLogger.ino", "arduino_code/Download.ino", "arduino_code/visionShieldBitmap.ino", "arduino_code/handlers.ino", "arduino_code/Teensy_WebSocketServer_LEDcontrol_W5500.ino", "arduino_code/SimpleAuthentication_LAN8720.ino", "arduino_code/Seeed_EthernetV2_0.ino", "arduino_code/imu_read.ino", "arduino_code/SerialMsgUsingTimeout.ino", "arduino_code/mamdani_tipper.ino", "arduino_code/SX127x_PingPong.ino", "arduino_code/WebSocketClient_Sticky_SocketIO_W5500.ino", "arduino_code/RepeatingDelay.ino", "arduino_code/ESP8266_WebSocketServerAllFunctionsDemo.ino", "arduino_code/alfabet.ino", "arduino_code/ESP8266_WebSocketServerFragmentation.ino", "arduino_code/PCF8574.ino", "arduino_code/Send_Text.ino", "arduino_code/ALB_MPU6050_Calibrate.ino", "arduino_code/Flange.ino", "arduino_code/WebSocketClientSSL_NINA.ino", "arduino_code/customWire_DS3231onSAMD21.ino", "arduino_code/W5500_Blynk.ino", "arduino_code/Fan.ino", "arduino_code/Simple_LunaSat_Server.ino", "arduino_code/vemltest.ino", "arduino_code/set_echo.ino", "arduino_code/PraktikArduinoLED1.ino", "arduino_code/ENC28J60_Blynk_Email.ino", "arduino_code/ArduTFLite_hello_world.ino", "arduino_code/SAMD_Ethernet_Fan.ino", "arduino_code/BasicEthernet.ino", "arduino_code/AsyncHTTPRequest_ESP8266_Ethernet.ino", "arduino_code/BarometricPressureWebServer.ino", "arduino_code/04_Move_To_Position.ino", "arduino_code/bmp280_example.ino", "arduino_code/cheapStepper_simple.ino", "arduino_code/Reference.ino", "arduino_code/check_radio_lvgl.ino", "arduino_code/SAMD_Ethernet_MultiSwitch_intermediate.ino", "arduino_code/WIO_Terminal_Blinds.ino", "arduino_code/BlinkOverSerial.ino", "arduino_code/DweetGet_LAN8720.ino", "arduino_code/mqtt_fona.ino", "arduino_code/Part_1_02_Hardware_Test.ino", "arduino_code/LR11x0_GNSS_Almanac_Update.ino", "arduino_code/GPS_SPI_EchoTest.ino", "arduino_code/StdioBench.ino", "arduino_code/DueFlashStorageStructExample.ino", "arduino_code/Blynk_WM_Template.ino", "arduino_code/vu_meter.ino", "arduino_code/Infrared_Testpattern.ino", "arduino_code/SSD1306Ascii.ino", "arduino_code/graphicstest.ino", "arduino_code/LongFileName.ino", "arduino_code/Analog_input_0_10V.ino", "arduino_code/GetReadings.ino", "arduino_code/programme3.ino", "arduino_code/W5100_Blynk_Email.ino", "arduino_code/SimpleAuthentication.ino", "arduino_code/nRF52_WiFiNINA_Blinds.ino", "arduino_code/PeripheralExplorer.ino", "arduino_code/GPS_SoftwareSerial_LOCUS_Start.ino", "arduino_code/Edgent_Wio_Terminal.ino", "arduino_code/OVH_Client.ino", "arduino_code/MKRWANFWUpdate_standalone.ino", "arduino_code/Nec1Decoder.ino", "arduino_code/drum08.ino", "arduino_code/motorStepper.ino", "arduino_code/StandardFirmataPlus.ino", "arduino_code/Part_1_04_Blink_While_Playing.ino", "arduino_code/GsmSSLWebClient.ino", "arduino_code/AdafruitIO_MQTT_Demo.ino", "arduino_code/ESP8266_MRD_GSM.ino", "arduino_code/ESP8266_WebSocketClientSSL.ino", "arduino_code/TestMode.ino", "arduino_code/continuous.ino", "arduino_code/blank.ino", "arduino_code/FindMy.ino", "arduino_code/CAN_SpeedTest.ino", "arduino_code/build_test.ino", "arduino_code/DHT11_W5500.ino", "arduino_code/CheckWifi101FirmwareVersion.ino", "arduino_code/DefaultNetwork.ino", "arduino_code/04_toPositionXY_Two_Axis.ino", "arduino_code/Teensy_ESP_AT_DuckDNS_Client.ino", "arduino_code/RF69_Transmit_Blocking.ino", "arduino_code/BatteryChargerInterrupt.ino", "arduino_code/IRArray.ino", "arduino_code/WebSocketClientStomp_WiFi101.ino", "arduino_code/Teensy40_ESP8266Shield.ino", "arduino_code/wolfssl_server.ino", "arduino_code/breakouttouchpaint.ino", "arduino_code/Ambient_Proximity.ino", "arduino_code/Arduino_MKR1000.ino", "arduino_code/echo_time.ino", "arduino_code/AsyncSimpleServer_WT32_ETH01.ino", "arduino_code/Adafruit_Feather_M0_WiFi.ino", "arduino_code/OneButtonRemote.ino", "arduino_code/UdpNTPClient.ino", "arduino_code/04_servo_motors_challenge.ino", "arduino_code/SAMD_Bonjour.ino", "arduino_code/TX_RX_FullSensorData.ino", "arduino_code/SafeString_ConstructorAndDebugging.ino", "arduino_code/Collect_Images_for_EdgeImpulse.ino", "arduino_code/SendBoolean.ino", "arduino_code/07Terminal.ino", "arduino_code/UdpServer.ino", "arduino_code/UdpSendReceive.ino", "arduino_code/06MusicPlayer.ino", "arduino_code/03_Move_To_Step.ino", "arduino_code/DFRobot_Bluno_BLE_Link.ino", "arduino_code/AsyncWebClientRepeating_STM32.ino", "arduino_code/FFT_05.ino", "arduino_code/I2C.ino", "arduino_code/ListFiles.ino", "arduino_code/HowToDebug.ino", "arduino_code/UdpSendReceive_LAN8720.ino", "arduino_code/R09_Picture_Browser.ino", "arduino_code/RtcTimestampTest.ino", "arduino_code/channel_websocket.ino", "arduino_code/report_dust_quality.ino", "arduino_code/HelloServer_LAN8720.ino", "arduino_code/test_microphone.ino", "arduino_code/nRF52_ESP8266Shield.ino", "arduino_code/R04_Compass.ino", "arduino_code/LTE_Demo.ino", "arduino_code/PulseSensor_V2_BPM_Prototype.ino", "arduino_code/RTCClock.ino", "arduino_code/FlashStorage_iteration.ino", "arduino_code/TinyGSM_SIM800_SIM900.ino", "arduino_code/04TimeInputAdvanced.ino", "arduino_code/IrrigationSimple.ino", "arduino_code/AdvancedWebServer_Ptr.ino", "arduino_code/Magnetometer.ino", "arduino_code/doorbell.ino", "arduino_code/UsbMidiLoopback.ino", "arduino_code/Teensy_WebSocketServerHttpHeaderValidation_EthernetENC.ino", "arduino_code/02RTC_Advanced.ino", "arduino_code/07WebHook.ino", "arduino_code/Portenta_H7_Ethernet_DuckDNS_Client.ino", "arduino_code/nRF52_Ethernet_MultiSwitch_intermediate.ino", "arduino_code/05Joystick.ino", "arduino_code/main.ino", "arduino_code/ClockSample.ino", "arduino_code/getline.ino", "arduino_code/smooth_control.ino", "arduino_code/MultiBlink.ino", "arduino_code/TTGO_TCALL_GSM.ino", "arduino_code/overtempAlarmFahrenheit.ino", "arduino_code/PeakAndRMSMeterStereo.ino", "arduino_code/Adafruit_Bluefruit_LE.ino", "arduino_code/driverpatch_1_11.ino", "arduino_code/checkWaitingDRD.ino", "arduino_code/LVGL_Arduino.ino", "arduino_code/EsploraKart.ino", "arduino_code/SX127x_Channel_Activity_Detection_Receive.ino", "arduino_code/uvi_test.ino", "arduino_code/Generic_WiFiNINA_Light.ino", "arduino_code/SX126x_Spectrum_Scan_Frequency.ino", "arduino_code/WizFi310.ino", "arduino_code/hid_remapper.ino", "arduino_code/Gravity_NeoPixel.ino", "arduino_code/Stream.ino", "arduino_code/GLEE_I2C_Scanner.ino", "arduino_code/WiFiEcho.ino", "arduino_code/WebSocketServerFragmentation.ino", "arduino_code/adafruit_lsm6ds3trc_test.ino", "arduino_code/ConfigStorage_ESP32.ino", "arduino_code/strato_Client.ino", "arduino_code/ListSsdpDevicesEsp32.ino", "arduino_code/Capacitive_Basic_Analog_Read.ino", "arduino_code/arcada_msc_external_flash.ino", "arduino_code/Teensy_WebSocketClientStomp_WiFiNINA.ino", "arduino_code/PMICFaultCheck.ino", "arduino_code/Blinds.ino", "arduino_code/LR11x0_PingPong.ino", "arduino_code/RegisteringServicesWithTxtRecord.ino", "arduino_code/01Notification_Button.ino", "arduino_code/Esp8266-Server.ino", "arduino_code/ESP_AsyncFSBrowser.ino", "arduino_code/prop-maker-feather.ino", "arduino_code/t6iot_advanced.ino", "arduino_code/02_designing_the_button.ino", "arduino_code/WIO_Terminal_MultiSwitch_advance.ino", "arduino_code/NBWebClient.ino", "arduino_code/arcada_plotter.ino", "arduino_code/BandManagement.ino", "arduino_code/Face_Recognition.ino", "arduino_code/SAMD_WiFiNINA_GarageDoor.ino", "arduino_code/Part_2_05_Simple_Delay.ino", "arduino_code/i2c_eeprom_read.ino", "arduino_code/SimpleLed.ino", "arduino_code/mqtt_subscriber.ino", "arduino_code/RotatedZoomSample.ino", "arduino_code/04Timer.ino", "arduino_code/IrSenderNonMod.ino", "arduino_code/Hello_LightSensor.ino", "arduino_code/nRF24_Receive_Interrupt.ino", "arduino_code/PulseSensor_BPM.ino", "arduino_code/Data_filter.ino", "arduino_code/YunFirstConfig.ino", "arduino_code/Generic_WebSocketClientSSL_WiFiNINA.ino", "arduino_code/WIO_Terminal_Light.ino", "arduino_code/JsonUdpBeacon.ino", "arduino_code/NTPClientBasic.ino", "arduino_code/EEPROM_write.ino", "arduino_code/DiscoveringServices.ino", "arduino_code/PixelPusherServer.ino", "arduino_code/adafruit_lsm6dsox_test.ino", "arduino_code/MIDIUSB_write.ino", "arduino_code/DHT11ESP8266_SSL.ino", "arduino_code/slider_lvgl.ino", "arduino_code/StringData.ino", "arduino_code/BasicAuthGet.ino", "arduino_code/DHT20_lcd.ino", "arduino_code/SX127x_Receive_Interrupt.ino", "arduino_code/SAMD_Ethernet_TV.ino", "arduino_code/DCCEXProtocol_Turnout_Control.ino", "arduino_code/GPS_SoftwareSerial_LOCUS_Erase.ino", "arduino_code/csvLoggerSD.ino", "arduino_code/Linear.ino", "arduino_code/ALB_Servo.ino", "arduino_code/LCD_Custom_Menu.ino", "arduino_code/RF69_Receive_AES.ino", "arduino_code/YunSerialTerminal.ino", "arduino_code/wavface.ino", "arduino_code/EthernetNetwork.ino", "arduino_code/RawFrameMonitor.ino", "arduino_code/Simple.ino", "arduino_code/WebSocketClientStompOverSockJs_ENC.ino", "arduino_code/Getting_BPM_to_Monitor.ino", "arduino_code/Industruino.ino", "arduino_code/takethesponge.ino", "arduino_code/MIDIUSB_loop.ino", "arduino_code/msc_ramdisk.ino", "arduino_code/WebSocketClient_NINA.ino", "arduino_code/Part_2_02_Mixers.ino", "arduino_code/Generic_WebSocketServerHttpHeaderValidation_W5500.ino", "arduino_code/simple_server.ino", "arduino_code/TcpClient.ino", "arduino_code/graphicstest_v1_160x80.ino", "arduino_code/TFT_HX8257.ino", "arduino_code/AVR_Ethernet_DuckDNS_Client.ino", "arduino_code/SafeString_stoken.ino", "arduino_code/cheapStepper_newMoveTo.ino", "arduino_code/Async_RegexPatterns_ESP32_W6100.ino", "arduino_code/STM32_WebSocketClient_LAN8742A.ino", "arduino_code/AsyncDNSServer_ESP32_SC_W5500.ino", "arduino_code/nRF52_Ethernet_TV.ino", "arduino_code/Lab12_TinyML_Hello_World.ino", "arduino_code/CC1101_Transmit_Interrupt.ino", "arduino_code/ESP32WM_MRD_ForcedConfig.ino", "arduino_code/Magnetometer_Vector_Plot_Advanced.ino", "arduino_code/02_waving_with_Braccio.ino", "arduino_code/AX25_Frames.ino", "arduino_code/03LED_StatusOfButton.ino", "arduino_code/PutMinMax.ino", "arduino_code/SX128x_Channel_Activity_Detection_Interrupt.ino", "arduino_code/ServoTest.ino", "arduino_code/RealTimeClock.ino", "arduino_code/debug.ino", "arduino_code/Teensy_WebSocketServerHttpHeaderValidation_W5500.ino", "arduino_code/DumbModemLoraSender.ino", "arduino_code/ShieldST7735.ino", "arduino_code/PMICBoostMode.ino", "arduino_code/HTTPServer.ino", "arduino_code/AsyncWebClientRepeating.ino", "arduino_code/SimpleCapacitiveButton.ino", "arduino_code/PET_Check.ino", "arduino_code/PassThroughStereo.ino", "arduino_code/07Step.ino", "arduino_code/seesaw_shield18_test.ino", "arduino_code/EthernetENC_Blynk_RP2040.ino", "arduino_code/SolidStateRelay.ino", "arduino_code/EEPROM_update.ino", "arduino_code/Magnetometer_Vector_Plot.ino", "arduino_code/graphicstest_tft_gizmo.ino", "arduino_code/ParseURL.ino", "arduino_code/HelloKeypad3.ino", "arduino_code/SafeStringFromCharPtrWithSize.ino", "arduino_code/R07_Runaway_Robot.ino", "arduino_code/RF_Ping_Pong.ino", "arduino_code/STM32Test.ino", "arduino_code/Async_ConfigOnDRD_FS_MQTT_Ptr_Complex.ino", "arduino_code/HammingSerial1.ino", "arduino_code/MQTTClient_Auth_LAN8720.ino", "arduino_code/Minimal-Esp8266-Client.ino", "arduino_code/Generic_WebSocketClientStomp_EthernetENC.ino", "arduino_code/Delete.ino", "arduino_code/AsyncHTTPRequest.ino", "arduino_code/BoardModel.ino", "arduino_code/adafruit_ism330dhcx_test.ino", "arduino_code/ServoFirmata.ino", "arduino_code/WiFiWebServer_BigData.ino", "arduino_code/WebSocketClientStomp.ino", "arduino_code/OzOledAscii.ino", "arduino_code/RetroCompatibility.ino", "arduino_code/FullyFeatured_PortentaH7_Ethernet.ino", "arduino_code/L298NX2-Callback.ino", "arduino_code/ESP32AnalogReadTest.ino", "arduino_code/MD_MAX72xx_PrintText_ML.ino", "arduino_code/Table_Advanced.ino", "arduino_code/W5500_WM_Config_Teensy.ino", "arduino_code/ds1307SqwPin.ino", "arduino_code/UTFT.ino", "arduino_code/Generic_WiFiNINA_PowerSensor.ino", "arduino_code/si1145test.ino", "arduino_code/LED_Fade.ino", "arduino_code/led_ring_neopixel.ino", "arduino_code/AlarmInterrupt.ino", "arduino_code/RP2040ConnectFirmware.ino", "arduino_code/WiFiAdvancedCallback.ino", "arduino_code/grayscale_dump.ino", "arduino_code/Energia_BLE.ino", "arduino_code/TeensyDmaAdcLogger.ino", "arduino_code/CompareTest.ino", "arduino_code/Send.ino", "arduino_code/SAMD_ESP_AT_DuckDNS_Client.ino", "arduino_code/AP_SimpleWebServer.ino", "arduino_code/ControlServo.ino", "arduino_code/pdu_comm.ino", "arduino_code/plotdemo.ino", "arduino_code/LoRaWAN_Starter.ino", "arduino_code/SleepRTCAlarm.ino", "arduino_code/DownloadFileOTA.ino", "arduino_code/04_learnings_challenge_II.ino", "arduino_code/Generic_WiFiNINA_MotionSensor.ino", "arduino_code/PrimoDeepSleep.ino", "arduino_code/mqtt_stream.ino", "arduino_code/TimeCheck.ino", "arduino_code/simple_logging_dht.ino", "arduino_code/wifi_basic.ino", "arduino_code/W5100_WM_Config.ino", "arduino_code/SamplePlayer.ino", "arduino_code/touchpaint_featherwing.ino", "arduino_code/SendMessage.ino", "arduino_code/ConnectionHandlerDemo-Notecard.ino", "arduino_code/mic_FFT_express.ino", "arduino_code/Thermostat.ino", "arduino_code/ALB_SevenSeg_Single.ino", "arduino_code/OpenNext.ino", "arduino_code/SX128x_Transmit_Blocking.ino", "arduino_code/CopyFromSerial.ino", "arduino_code/button_lvgl.ino", "arduino_code/nRF52_Ethernet_Speaker.ino", "arduino_code/encoder_delta.ino", "arduino_code/nodeMCU-SoilMoisture_ST-8563.ino", "arduino_code/ReadWriteRegs.ino", "arduino_code/Si443x_Settings.ino", "arduino_code/Generic_WiFiNINA_Fan.ino", "arduino_code/tftThermometer.ino", "arduino_code/potControl.ino", "arduino_code/EdgeControl.ino", "arduino_code/FlashStorage_Clear.ino", "arduino_code/megaAVR_WiFiNINA_DuckDNS_Client.ino", "arduino_code/TXOnlySerialExample.ino", "arduino_code/FileUtilsJsonFile.ino", "arduino_code/SendTweet.ino", "arduino_code/03_moving_challenge.ino", "arduino_code/03_toStepXY_Two_Axis.ino", "arduino_code/MD5.ino", "arduino_code/freemyip_Client.ino", "arduino_code/Async_ConfigOnStartup.ino", "arduino_code/Stack.ino", "arduino_code/RGB_LED_Test.ino", "arduino_code/WebSocketClientSocketIO_NINA.ino", "arduino_code/Capacitive_Dielectric_Sample.ino", "arduino_code/WebSocketClientSocketIO_WiFi101.ino", "arduino_code/WebClientFreeRTOS.ino", "arduino_code/SAMD_Ethernet_DuckDNS_Client.ino", "arduino_code/Scheduler_example20_StatusRequest_LTS_WDT_Timeout_Object.ino", "arduino_code/AsyncSimpleGET.ino", "arduino_code/05Eventor.ino", "arduino_code/SignInWithAccessToken.ino", "arduino_code/LocalIP_DDNS_Client.ino", "arduino_code/csvLogger.ino", "arduino_code/msc_external_flash.ino", "arduino_code/AsyncDweetGet_STM32.ino", "arduino_code/Relay.ino", "arduino_code/AsyncCaptivePortal_ESP32_SC_W6100.ino", "arduino_code/zerotimer.ino", "arduino_code/AVR_ReceivedRawMidiData.ino", "arduino_code/MD_MAX72xx_Zones.ino", "arduino_code/Wio_Terminal.ino", "arduino_code/MemoryBenchmark.ino", "arduino_code/UTSMikrokontroller.ino", "arduino_code/Edgent_NCP.ino", "arduino_code/DeepSleepAndHwReset.ino", "arduino_code/EPDTest.ino", "arduino_code/Files.ino", "arduino_code/Opponator.ino", "arduino_code/PyPortal.ino", "arduino_code/AsyncDNServerFull.ino", "arduino_code/WebSocketClientSSLBundle.ino", "arduino_code/analog_uv_sensor.ino", "arduino_code/hello_world.ino", "arduino_code/FilteringData.ino", "arduino_code/Generic_Ethernet_Thermostat.ino", "arduino_code/geometrical-shapes.ino", "arduino_code/ALB_TempHumidity.ino", "arduino_code/wESP32_NoteOnOffEverySec.ino", "arduino_code/RFID_UART.ino", "arduino_code/WebClientRepeating_LAN8720.ino", "arduino_code/motor_control_10bit.ino", "arduino_code/Async_HttpBasicAuth_LAN8720.ino", "arduino_code/BBC_MicroBit.ino", "arduino_code/AutoConnectNonBlocking.ino", "arduino_code/GPRSUdpNtpClient.ino", "arduino_code/nRF52_WiFiNINA_PowerSensor.ino", "arduino_code/chipKIT_Uno32.ino", "arduino_code/Scheduler_example21_OO_Callbacks.ino", "arduino_code/i2c_registers.ino", "arduino_code/SendAnSMS.ino", "arduino_code/SX127x_Receive_FHSS.ino", "arduino_code/IRServer.ino", "arduino_code/TimeAndLocation.ino", "arduino_code/msc_data_logger.ino", "arduino_code/charliewing.ino", "arduino_code/OTEthernet.ino", "arduino_code/allreaders.ino", "arduino_code/DHT12.ino", "arduino_code/BufferedPrint.ino", "arduino_code/SomeSerials.ino", "arduino_code/MemoryAndCpuUsage.ino", "arduino_code/i2c_MPL3115A2.ino", "arduino_code/R10_Rescue.ino", "arduino_code/ssd1306_128x32_i2c.ino", "arduino_code/FullyFeaturedSSL_ESP32_W5500.ino", "arduino_code/loraOtaa.ino", "arduino_code/0-5V_Input.ino", "arduino_code/ConfigOnMultiReset.ino", "arduino_code/FlashStorage_put.ino", "arduino_code/UdpNTPClient_LAN8720.ino", "arduino_code/AllInputsFirmata.ino", "arduino_code/BMP280_ESP32_HSPI_Normal.ino", "arduino_code/multi_motor_tank.ino", "arduino_code/01_playing_with_the_motors.ino", "arduino_code/LIS3DHTR_IIC_AcceleratorReadings.ino", "arduino_code/pixeldust_snow.ino", "arduino_code/SX126x_Settings.ino", "arduino_code/MD_MAX72xx_RPS_Game.ino", "arduino_code/GPS_I2C_EchoTest.ino", "arduino_code/SimplePost.ino", "arduino_code/LIS3DHTR_IIC.ino", "arduino_code/ESP8266_WebSocketServer_LEDcontrol.ino", "arduino_code/LengthWidthServer.ino", "arduino_code/PrintTime_BlinkDelay_Tasks.ino", "arduino_code/GPS_SoftwareSerial_EchoTest.ino", "arduino_code/UCGLib.ino", "arduino_code/SimpleRTCAlarm.ino", "arduino_code/CC1101_Receive_Blocking.ino", "arduino_code/SendMessageFromEvent.ino", "arduino_code/5_images.ino", "arduino_code/msc_esp32_file_browser.ino", "arduino_code/OTA_Qspi_Flash.ino", "arduino_code/ESP32_FS_EthernetWebServer.ino", "arduino_code/STM32_WebSocketServerHttpHeaderValidation_LAN8742A.ino", "arduino_code/Servo.ino", "arduino_code/ControlAssist-Gauge.ino", "arduino_code/SendSMS.ino", "arduino_code/SimpleDatabaseSecret.ino", "arduino_code/AsyncSimpleServer_ESP32_W6100.ino", "arduino_code/Motor_test_encoder.ino", "arduino_code/Flash.ino", "arduino_code/keypad.ino", "arduino_code/BreakoutST7789-240x135.ino", "arduino_code/DynDNS_Client.ino", "arduino_code/ltr390_test.ino", "arduino_code/Generic_Ethernet_MultiSwitch_beginner.ino", "arduino_code/Teensy_WebSocketClientStomp_NativeEthernet.ino", "arduino_code/SavePNG.ino", "arduino_code/DHT20_test_esp.ino", "arduino_code/nRF52_WiFiNINA_DuckDNS_Client.ino", "arduino_code/Echo.ino", "arduino_code/BatchWrite.ino", "arduino_code/SdFat_circuitpython.ino", "arduino_code/02LabeledValue.ino", "arduino_code/RemoteDueBlink.ino", "arduino_code/Teensy_WebSocketServerAllFunctionsDemo_WiFiNINA.ino", "arduino_code/ESP32DamperControl.ino", "arduino_code/SendAnalogPinValue.ino", "arduino_code/Basic_Blynk_Counter.ino", "arduino_code/Simple_Send_Data_String.ino", "arduino_code/padString.ino", "arduino_code/oleddemo.ino", "arduino_code/fieldFormat.ino", "arduino_code/02_handling_events_in_the_menu.ino", "arduino_code/PortentaBLE.ino", "arduino_code/blink2.ino", "arduino_code/Scheduler_example17_Timeout.ino", "arduino_code/SX127x_Receive_Blocking.ino", "arduino_code/WavFilePlayer.ino", "arduino_code/OTEthernet_SD.ino", "arduino_code/graphicstest_st7789.ino", "arduino_code/softrtc.ino", "arduino_code/MsgPackParser.ino", "arduino_code/EsploraLightCalibrator.ino", "arduino_code/Confirm.ino", "arduino_code/midi_multi_ports.ino", "arduino_code/adafruitio_errors_esp8266.ino", "arduino_code/L298NX2-Fade.ino", "arduino_code/CardInfo.ino", "arduino_code/ConnectWPA.ino", "arduino_code/BlinkGreenLed_M4.ino", "arduino_code/DueFlashStorageExample.ino", "arduino_code/nRF52_WiFiNINA_Lock.ino", "arduino_code/StreamParseInt.ino", "arduino_code/Scheduler_example23_IDLE_Callback.ino", "arduino_code/LOLIN_32_Blink.ino", "arduino_code/BackgroundRead_ESP32.ino", "arduino_code/ImportDocuments.ino", "arduino_code/RS485_halfduplex.ino"], "descriptions": ["Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ENC28J60 & ESP32-S3 Optional values to override default settings", "This example shows how to clear the spreadsheet's values. For SD/SD_MMC mounting helper For how to create Service Account and how to use the library, go to https: Service Account's client email Service Account's private key", "no_description", "ArduinoJson - arduinojson.org Copyright Benoit Blanchon 2014-2018 MIT License This example shows how to deserialize a JSON document with ArduinoJson. Initialize serial port", ".. ..", "Teensy 4.x/3.x/LC simple internal temperature", "This sketch demonstrates the usage of the non-modulating sender in inverting mode. It can thus be used to emulate an inverting IR demodulator, like TSOP-*.", "CHANGE THESE POINTS TO YOUR CALIBRATION POINTS (ADC READING, KNOWN DIELECTRIC CONST) Print Calibration Coefficents put your main code here, to run repeatedly:", "BMP280_DEV - I2C Communications, Default Configuration, Normal Conversion bmp280.setPresOversampling(OVERSAMPLING_X4); bmp280.setTempOversampling(OVERSAMPLING_X1); bmp280.setIIRFilter(IIR_FILTER_4);", "The SGTL5000 has a secondard \"dacVolume\" setting, in addition to normal volume. Normally dacVolume defaults to 1.0, to pass your sound directly to the normal volume control.  The actual volume you hear depends on both settings. The dacVolume control has an option to gracefully ramp (change) its setting over time, to prevent a sudden pop or click sound.  You could achieve this by adding", "This sketch demonstrates the IrReceiverPoll. It requires a demodulating sensor connected to pin RECEIVE_PIN. This sketch runs on *anything* (at least with sufficient speed and memory) without any requirements on timers or interrupts. However ESP8266 seen to make problems...", "This example implements a simple sliding On/Off button. The example demonstrates drawing and touch operations. Thanks to Adafruit forums member Asteroid for the original sketch! This is calibration data for the raw touch data to the screen coordinates origin = left,top landscape (USB left upper)", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Select the IP address according to your local network Google DNS Server IP struct to store measurement from powersensor", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "Convert an unsigned integer to a hex value", "BMP280_DEV - SPI Communications, Default Configuration, Normal Conversion, Mulitple Devices", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Ported to ESP32", "In ESP32 Core SDK v3.x.x, to use filesystem in this library, the File object should be defined globally and the library's internal defined FS object should be set with this global FS object in fileCallback function. The API key can be obtained from Firebase console > Project Overview > Project settings.", "include the library uncomment the following only on one of the nodes to initiate the pings #define INITIATING_NODE SX1262 has the following connections:", "replace with your board how many millis motors will run to follow given object if you mounted the camera \"backward\" (see video), you have to reverse the motors", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Network settings Blynk cloud server", "Serial.print(\"Connecting\"); while (WiFi.status() != WL_CONNECTED) { delay(500); Serial.print(\".\"); }", "=================================================================== The class with char[] private variables make these private to protect from external access Members class methods", "try card.init(true) if errors occur on V1.0 Wave Shield enable optimize read - some cards may timeout forward declarition scroll through the files in the directory only play .WAV files", "include the library SX1280 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "delay(2000); /* Repeat after delay */", "Test variables Standard PulseSensor Stuff Now that everything is ready, start reading the PulseSensor signal. Flash the led to show things didn't work.", "no_description", "CS5490 line(MCLK_default,Reset); Comment out the following in order to activate tuning mode for AC Igain (shunt method is used in this example) #define TUNING_MODE_ACTIVE The following parameters are application dependent, therefore must be properly set according your external hardware Activate HPF on I current (to remove the DC component: it's an AC application)", "This example shows how to read and write database rules Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Define Firebase Data object", "needed for library for LED status toggle state gets called when WiFiManager enters configuration mode if you used auto generated SSID, print it", "Only to deal with ESP8266 core v3.0.0 warning in Ticker library Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change. report status to Blynk Debug console From v1.0.5", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip); assemble the path for the POST message:", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Enter a MAC address and IP address for your controller below.", "The API key can be obtained from Firebase console > Project Overview > Project settings. Define the project location e.g. us-central1 or asia-northeast1 */ https: ServiceAuth is required for Google Cloud Functions functions. Binding the FirebaseApp for authentication handler.", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Now support ArduinoJson 6.0.0+ ( tested with v6.14.1 )", "no_description", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "Configure the PulseSensor manager. Now that everything is ready, start reading the PulseSensor signal. Flash the led to show things didn't work. start up the LED matrix so we can control it. write the latest sample to Serial.", "Get IoTtweet Library version Connect WiFi Example data generating Send data from your iot to Dashboard Waiting storage data on IoTtweet cloud 15 sec.", "Input_Blink_Tasks.ino install SafeString library from Library manager or from https: the loopTimer, BufferedOutput, SafeStringReader and millisDelay are all included in SafeString library V3+ Example of using BufferedOutput to release bytes when there is space in the Serial Tx buffer, extra buffer size 80 Pin 13 has an led connected on most Arduino boards.", "Initialize Bridge and Mailbox Initialize Serial Wait until a Serial Monitor is connected. if there is a message in the Mailbox read all the messages present in the queue", "FILE: uvi_demo.ino AUTHOR: Rob Tillaart PURPOSE: demo UV sensor URL: https: -- END OF FILE --", "Don't know why print() for base==0 just prints out the lower 8-bits, but that's what we need to assert.", "no_description", "Perpusatakaan yang dibutuhkan, harap diinstall melalui Libary Manager di Arduino IDE Inisialisasi sensor MAX30105 dengan nama Particle Sensor Bilangan berupa float beat per minutes Inisialisasi nilai maksimal sensor IR pada sensor MAX30105 Inisialisasi board pada sensor yang digunakan", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- Check for Ethernet hardware present", "Debounce button using a timeout and delay function", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG setup function for WiFi connection setup function for SinricPro add devices and callbacks to SinricPro", "Open serial communications and wait for port to open: wait for serial port to connect. Needed for Leonardo only set the data rate for the HardwareSerial 2 port Wait for 3 bytes to arrive Read 3 byte information", "Verify that no matter how the test ends, the teardown() gets called. Verify that if the test executes, setup() and teardown() get called. But if the test is excluded, neither setup() nor teardown() get called, and the test is reported as \"skipped\".", "Cosine wave Cosine wave for 1 period (2*pi) by 100 steps. Start repeated timer. Please keep the interval more than 15 [milliseconds]. The interval less than 15 [ms] can have an effect on its actual interval,", "If using the rev 1 with STMPE resistive touch screen controller uncomment this line: #include <Adafruit_STMPE610.h> If using the rev 2 with TSC2007, uncomment this line: Anything else, defaults! If you're using the TSC2007 there is no CS pin needed, so instead its an IRQ!", "SD chip select pin file system object create Serial stream store error strings in flash to save RAM ------------------------------------------------------------------------------", "SafeString_read.ino This example takes commmands from the Arduino Monitor input and acts on them the available commands are start stop and reset Commands are delimited by space dot comma NL or CR If you set the Arduino Monitor to No line ending then the command will be ignored until you terminate it with a space or ,", "no_description", "Defines for a Samsung TV using NECx protocol If the left button is pressed send a mute code. If the right button is pressed send a power code.", "Default pin 10 to SS/CS URL for STOMP endpoint. For the default config of Spring's STOMP support, the default URL is \"/socketentry/websocket\". FUNCTIONS #####################", "The hardcoded certificate authority for this example. Don't use it on your own apps!!!!! KH, Update Let's Encrypt CA Cert, May 2nd 2021 Valid from : Sep  4 00:00:00 2020 GMT Expired    : Sep 15 16:00:00 2025 GMT", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Ported to ESP32", "Les boutons du TCO... Les moteurs Le groupe pour les moteurs Les ports pour connecter les moteurs. Memoriser les positions des moteurs dans l'EEPROM.", "include the library LR1110 has the following connections: NSS pin:   10 IRQ pin:   2 NRST pin:  3", "Default pin 10 to SS/CS For transport=websocket instead of transport=polling #include <WiFiNINA_Generic.h> Select the IP address according to your local network Select the IP address according to your local network", "WiThrottleProtocol library: mDNS example Shows how to retrieve the list of discovered servers Tested with ESP32-WROOM board Peter Akers (Flash62au), Peter Cole (PeteGSX) and Chris Harlow (UKBloke), 2023 If we haven't got a custom config.h, use the example", "no_description", "Initialize RF Object Indicator LED (Blue) connected to pin 5 Set the data rate to 9600 bits per second and begin serial communication Initialize the radio settings by using the initialize_radio function Argument 1: Set frequency to 915", "Provide the RTDB payload printing info and other helper functions. config.cert.file = \"/cert.cer\"; config.cert.file_storage = StorageType::FLASH; Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set.", "Require mouse control library Initialize USB Controller Attach mouse controller to USB variables for mouse button states This function intercepts mouse movements", "t6 Server t6 JWT Authentication or : t6 Object t6 Flow container for Sensor data", "include the necessary libraries Define a few commands from your remote control initialize the Robot, SD card, display, and speaker print some text to the screen if there is an IR command, process it", "no_description", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Deprecated echo.websocket.org to be replaced To run a local WebSocket Server send message to server when Connected", "Going to sleep Enable Gated 3V3 to devices and peripherals Enable Gated 12V and 5V to output pins, devices and peripherals Enable Gated 12V and 5V to output pins, devices and peripherals Attach USB", "Audio BFF example for QT Py RP2040. Loops through all WAV files in specified directory of the SD Card. Files are not alphabetized and will usu. play in order they were installed. Requires SdFat - Adafruit Fork and Adafruit_WavePlayer libraries. I2S GPIO pin numbers", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Enter a MAC address and IP address for your controller below.", "adding 1 row to table every second millis() / 1000 highlighting latest added row in table Blynk.virtualWrite(V1, \"add\", id, \"Name\", \"Value\"); Blynk.virtualWrite(V1, \"update\", id, \"UpdatedName\", \"UpdatedValue\");", "Default heartbeat interval for GSM is 60 If you want override this value, uncomment and set this option: #define BLYNK_HEARTBEAT 30 Set serial for debug console (to the Serial Monitor, default speed 115200) Select your modem:", "Parameter 1 = number of pixels in strip Parameter 2 = Arduino pin number (most are valid) Parameter 3 = pixel type flags, add together as needed: NEO_KHZ800  800 KHz bitstream (most NeoPixel products w/WS2812 LEDs) NEO_KHZ400  400 KHz (classic 'v1' (not v2) FLORA pixels, WS2811 drivers)", "#define DDNS_USERNAME \"<FILL THIS!>\" #define DDNS_PASSWORD \"<FILL THIS!>\" #define DDNS_DOMAIN \"<FILL THIS!>\" 0 <= percentage <= 100 WiFi.setAutoConnect(true);", "==================== start of TUNEABLE PARAMETERS ==================== An IR detector/demodulator is connected to GPIO pin 14 e.g. D5 on a NodeMCU board. Note: GPIO 16 won't work on the ESP8266 as it does not have interrupts. Note: GPIO 14 won't work on the ESP32-C3 as it causes the board to reboot.", "DONT WRITE EEPROM IN A LOOP!!!! YOU WILL DESTROY YOUR FLASH!!!", "default number of output channels default PCM output frequency Buffer to read samples into, each sample is 16-bits Number of audio samples read Configure the data receive callback", "reconstruct the self signed cert Set a callback to get the current time used to validate the servers certificate Set the ECCX08 slot to use for the private key and the accompanying public certificate for it", "This example shows the basic usage of Blynk platform and Firebase RTDB. Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Define Firebase Data object", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Enter a MAC address and IP address for your controller below.", "we are going to use the serial communication as a way to see on the PC what is happening on the Arduino", "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- Pin definitions =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- ESP32_W5500 WebServer =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-", "Neural Network Parameters Activation function (Sigmoid) Defuzzification function FNN Prediction Function", "include the library code: initialize the library by associating any needed LCD interface pin with the arduino pin number it is connected to set up the LCD's number of columns and rows: Print a message to the LCD.", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "Test of time-stamp callback with Teensy 3/4. The upload time will be used to set the RTC. You must arrange for syncing the RTC. SD_FAT_TYPE = 0 for SdFat/File as defined in SdFatConfig.h, 1 for FAT16/FAT32, 2 for exFAT, 3 for FAT16/FAT32 and exFAT.", "no_description", "Select the IP address according to your local network Google DNS Server IP To be called before ETH.begin() bool begin(uint8_t phy_addr=ETH_PHY_ADDR, int power=ETH_PHY_POWER, int mdc=ETH_PHY_MDC, int mdio=ETH_PHY_MDIO, eth_phy_type_t type=ETH_PHY_TYPE, eth_clock_mode_t clk_mode=ETH_CLK_MODE);", "Update these with values suitable for your network. Setup console", "Demo the quad alphanumeric display LED backpack kit Displays a short message and then scrolls through every character For use with Gemma or Trinket (Attiny85) Connect + pins to 3-5V Connect GND to ground", "no_description", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Debug console", "Connect to the two encoder outputs! These let us convert ticks-to-RPM Create the motor shield object with the default I2C address And connect a DC motor to port M1 We'll display the speed/direction on the OLED", "With this example configuration, the BSEC2 library is able to classify 2 types of gases: gas 0: ambient regular air in a room gas 1: alcohol in a container note that the data collected for training the classifying algorithm was rather limited, thus the example config string for classifying might not work for your particular settings,", "Default pin 10 to SS/CS assume a true response for any headers not handled by this validator if the header passed is the Cookie header, validate it according to the rules in 'isCookieValid' function print the SSID of the network you're attached to: print your board's IP address:", "GOT FROM ThingsStream! Initialize the SSL client library Arguments: EthernetClient, our trust anchors Loop until we're reconnected Attempt to connect", "include the library SX1280 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "Test code for Adafruit GPS modules using MTK3329/MTK3339 driver This code turns on the LOCUS built-in datalogger. The datalogger turns off when power is lost, so you MUST turn it on every time you want to use it! Tested and works great with the Adafruit GPS FeatherWing", "#define debug SerialUSB Initialize sensor", "Initialize sensor Setup to sense up to 18 inches, max LED brightness Take an average of IR readings at power up", "This example is supposed to work on all boards that use the WiFiNINA library. Wait until the serial port is connected Configure the known networks (first one gets higher priority) Connect to the first available network", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Number of seconds after reset during which a subseqent reset will be considered a double reset. RTC Memory Address for the DoubleResetDetector to use DoubleResetDetector_Generic drd(DRD_TIMEOUT, DRD_ADDRESS);", "Default pin 10 to SS/CS Deprecated echo.websocket.org to be replaced To run a local WebSocket Server send message to server when Connected send message to server", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "start the Modbus RTU client for (slave) id 1: write the value of 0x01, to the coil at address 0x00 wait for 1 second for (slave) id 1: write the value of 0x00, to the coil at address 0x00 wait for 1 second", "our default frequency is 1khz turn all the way on turn all the way off", "no_description", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console You can also specify server: Blynk.begin(auth, \"blynk-cloud.com\", 80);", "Enter an IP address for your controller below. The IP address will be dependent on your local network: Initialize the Ethernet server library with the IP address and port you want to use (port 80 is default for HTTP):", "HID report descriptor using TinyUSB's template Single Report (no ID) descriptor USB HID object the setup function runs once when you press reset or power the board Manual begin() is required on core without built-in support e.g. mbed rp2040", "This sketch demonstrates the IrWidgetAggregating. It requires a non-demodulating sensor connected to the capture pin.", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" This function will be called every time Slider Widget in Blynk app writes values to the Virtual Pin 1", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "assume a true response for any headers not handled by this validator if the header passed is the Cookie header, validate it according to the rules in 'isCookieValid' function Serial.begin(921600); Serial.setDebugOutput(true); WiFi.disconnect();", "#define M5STACK_MPU9250 #define M5STACK_MPU6050 #define M5STACK_200Q Globals, used for compatibility with Arduino-style sketches. Create an area of memory to use for input, output, and intermediate arrays.", "Circuit Playground MEGA Demo Showcases interesting demos of all the components on Circuit Playground. This is a somewhat advanced sketch that's broken across multiple files (see the tabs above for all the files).  When run on Circuit Playground you can press the left button to cycle through each demo, and the right button to", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for setupEthernet connection", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 if device switched off...do nothing debounce motionsensor state transitions (same as debouncing a pushbutton)", "no_description", "'roboface' example sketch for Adafruit I2C 8x8 LED backpacks: www.adafruit.com/products/870   www.adafruit.com/products/1049 www.adafruit.com/products/871   www.adafruit.com/products/1050 www.adafruit.com/products/872   www.adafruit.com/products/1051 www.adafruit.com/products/959   www.adafruit.com/products/1052", "no_description", "Enter an IP address for your controller below. The IP address will be dependent on your local network: buffers for receiving and sending data An EthernetUDP instance to let us send and receive packets over UDP start the Ethernet and UDP:", "no_description", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings", "Create the ADT7410 temperature sensor object Make sure the sensor is found, you can also pass in a different i2c address with tempsensor.begin(0x49) for example sensor takes 250 ms to get first readings ** Optional **", "Initialize the FirebaseApp or auth task handler. To deinitialize, use deinitializeApp(app). The async result and async result callback are not needed for no authentication.", "read the sensor value print the sensor value print the sensor value print an empty line wait 1 second to print again", "#define SERIAL_DEBUG In order to use software serial, you will need to compile this sketch with Arduino IDE v1.6.6 or higher. Hardware serial should work back to Arduino 1.0. #include \"utility/SerialFirmata.h\" follow the instructions in bleConfig.h to configure your BLE hardware", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings toUpperCase() changes all letters to upper case: toLowerCase() changes all letters to lower case:", "GUItool: begin automatically generated code GUItool: end automatically generated code Audio connections require memory to work.  For more detailed information, see the MemoryAndCpuUsage example Do nothing here.  The Audio flows automatically", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings indexOf() returns the position (i.e. index) of a particular character or string in a SafeString. the return is of type int, -1 is returned if character is not found OR if there is an error", "Deprecated echo.websocket.org to be replaced send message to server when Connected send message to server send data to server Serial.begin(921600);", "The SAM3XA architecture needs to include this library, it is already included automatically on other platforms INA_Class      INA(0); INA_Class      INA(5); than EEPROM. Allocate storage for up to (n) devices", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "print the SSID of the network you're attached to: print your board's IP address: print the received signal strength: check for the WiFi module: don't continue", "no_description", "Start address and size should matches value in the CircuitPython (INTERNAL_FLASH_FILESYSTEM = 1) to make it easier to switch between Arduino and CircuitPython file system object from SdFat Open serial communications and wait for port to open: Init internal flash", "uncomment one or both of the following lines if your motors' directions need to be flipped motors.flipM1(true); motors.flipM2(true); run M1 motor with positive speed run M1 motor with negative speed", "as described in the footer comment below the address for which a weather forecast will be retrieved for debugging, wait until a serial console is connected while we haven't reached the max number of runs... print status", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. isButtonPressed = !digitalRead(BUTTON_PIN);", "#include \"Botletics_modem.h\" Define *one* of the following lines: #define SIMCOM_2G #define SIMCOM_3G #define SIMCOM_7070", "no_description", "To demonstrate the coexistence of this EthernetWebServer and ESP32 WebServer library Open serial communications and wait for port to open: For ESP8266, change for other boards if necessary For ESP8266 Pin                D0(GPIO16)    D1(GPIO5)    D2(GPIO4)    D3(GPIO0)    D4(GPIO2)    D8", "Perform nonce Starting HMAC operation on tempkey slot", "Start serial communications at 9600 baud Print \"Hello World!\" and move to the next line", "begin initialization start scanning for peripheral check if a peripheral has been discovered discovered a peripheral, print out address, local name, and advertised service Check if the peripheral is a SensorTag, the local name will be:", "Pass the this pointer, so that we get access to this->cumSum Also pass a copy of b Disable tasks after 10 seconds", "A simple data logger for the Arduino analog pins with optional DS1307 uses RTClib from https: file system object text file for logging Serial print stream", "no_description", "Select the staticIP address according to your local network start the ethernet connection and the server: Use random mac Static IP Ethernet.begin(mac, ip, gateway, subnet);", "Circuit Playground Analog Sensor Demo Shows how to read an analog sensor like temperature, light, sound, or even external inputs and convert the analog value to color and sound on the board.  Will light up NeoPixel 4 and 5 with a color proportional to the analog value, and if the slide", "Replace with your Wifi SSID and passphrase Replace with the IP address of your MQTT server Give ourselves a unique client name", "Wifi network station credentials Telegram BOT Token (Get from Botfather) attempt to connect to Wifi network: Check NTP/Time, usually it is instantaneous and you can delete the code below.", "setBuffer sprite.setBuffer(const_cast<std::uint8_t*>(image480x320x8),  480, 320, 8); sprite.setBuffer(const_cast<std::uint8_t*>(image640x480x4),  640, 480, 4); sprite.setBuffer(const_cast<std::uint8_t*>(image1280x960x1), 1280, 960, 1); sprite.createPalette();", "Create an ESP8266 WiFiClient class to connect to the MQTT server. or... use WiFiFlientSecure for SSL WiFiClientSecure client; Setup the MQTT client class by passing in the WiFi client and MQTT server and login details. Setup a feed called 'arb_packet' for publishing.", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console You can also specify server: Blynk.begin(auth, \"blynk-cloud.com\", 80);", "first install SafeString from the Arduino library manager. Open serial communications and wait a few seconds", "WiThrottleProtocol library: Basic example Shows how to create an instance of DCCEXProtocol and how to connect to a DCC-EX Native protocol server using static IP Tested with ESP32-WROOM board Peter Akers (Flash62au), Peter Cole (PeteGSX) and Chris Harlow (UKBloke), 2023", "This example is for ESP8266 and ESP32 Automatically parsing for response (w or w/o header) with chunk encoding supported.", "Variables The SetUp Function: The Main Loop Function Assign this value to the \"Signal\" variable.", "libraries Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number APN data initialize the library instance", "Debug Level from 0 to 4 Select the IP address according to your local network Google DNS Server IP GOT FROM ThingsStream! Initialize the SSL client library", "include the library RF69 has the following connections: CS pin:    10 DIO0 pin:  2 RESET pin: 3", "no_description", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 debounce contact state transitions (same as debouncing a pushbutton) if state has changed", "---------------------------------------- The following \"defines\" control library functionality at compile time, and should be used in the main sketch depending on the functionality required #define _TASK_TIMECRITICAL #define _TASK_WDT_IDS", "Wifi network station credentials Telegram BOT Token (Get from Botfather) attempt to connect to Wifi network: Check NTP/Time, usually it is instantaneous and you can delete the code below.", "SKETCH BEGIN the whole message is in a single frame and we got all of it's data message is comprised of multiple frames or the frame is split into multiple packets Initialize LittleFS/SPIFFS file-system Stay forever here as useless to go further", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- Stay informed on connection status", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define array of supported color temperatures a map used to convert a given color temperature into color temperature index (used for colorTemperatureArray)", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console", "while (!Serial) delay(10);", "- -> GND + -> 5V IN1 -> D8 IN2 -> D9 IN3 -> D10", "Accessory descriptor. It's how Arduino identifies itself to Android. Make up anything you want for these", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for setupEthernet connection", "our default frequency is 1khz turn all the way on turn all the way off", "Put your supabase URL and Anon key here... Because Login already implemented, there's no need to use secretrole key put your WiFi credentials (SSID and Password) here Put Supabase account credentials here Put your JSON that you want to insert rows", "Feather Power Meter Small Feather-based power monitor using an INA219 breakout and monochrome OLED display. Author: Tony DiCola (modded by ladyada) Released under a MIT license: http:", "no_description", "Default pin 10 to SS/CS Change pins according to your boards IPAddress ip = webSocket.remoteIP(num); Serial.printf(\"[%u] Connected from %d.%d.%d.%d url: %s\\n\", num, ip[0], ip[1], ip[2], ip[3], payload); send message to client", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Change pins according to your boards", "ArduinoJson - arduinojson.org Copyright Benoit Blanchon 2014-2018 MIT License This example shows how to generate a JSON document with ArduinoJson. Initialize Serial port", "Definities Definieer op welke Digitale ingang de drukknoppen zijn aangesloten https: LED posities - [0] [1] [2] [3]", "start the Modbus RTU client send a Holding registers read request to (slave) id 1, for 2 registers If the request succeeds, the sensor sends the readings, that are stored in the holding registers. The read() method can be used to get the raw temperature and the humidity values.", "read the temperature sensor in Celsius, then Fahrenheit: print the results: wait a second before reading again:", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" Define NCP connection port settings, if needed #define BLYNK_NCP_SERIAL            Serial1 #define BLYNK_NCP_BAUD              115200", "KH Print hearbeat every HEARTBEAT_INTERVAL (20) seconds. Debug console initialize serial for ESP module Optional to change default AP IP(192.168.4.1)", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "make sure the digital interface clock is enabled (should be already after reset) Enable ADC conversion clock, take from GCLK0 reset ADC to defaults Control B: Prescaler (/256), resolution selection (16 bit), correction enable (no), freerun mode (no) sample time in half clock cycles will be set before conversion, set to max (slow but high impedance)", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_DEBUG Uncomment your board, or configure a custom board in Settings.h #define USE_SPARKFUN_BLYNK_BOARD", "Please enter your WiFi sensitive data in the arduino_secrets.h file WiFiClient    wifiClient; Time interval check HttpClient client(wifiClient, SERVER, SERVER_PORT); Make the GET request", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Enter a MAC address and IP address for your controller below.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for setupEthernet connection ETHERNET_USE_RPIPICO, use default SS = 5 or 17", "no_description", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "Start address and size should matches value in the CircuitPython (INTERNAL_FLASH_FILESYSTEM = 1) to make it easier to switch between Arduino and CircuitPython Internal Flash object file system object from SdFat USB MSC object", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings Configures the Keybus interface with the specified pins. Initialize components", "Globals, used for compatibility with Arduino-style sketches. Create an area of memory to use for input, output, and intermediate arrays. The size of this will depend on the model you're using, and may need to be determined by experimentation. Whether we should clear the buffer next time we fetch data", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Optional values to override default settings #define SPI_HOST            1 #define SPI_CLOCK_MHZ       8 Must connect INT to GPIOxx or not working", "Put your supabase URL and Anon key here... Because Login already implemented, there's no need to use secretrole key put your WiFi credentials (SSID and Password) here Put Supabase account credentials here Connecting to Wi-Fi", "Printing response. Printing respons headers.", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield The IP address will be dependent on your local network: You can use Ethernet.init(pin) to configure the CS pin Ethernet.init(10);", "change next line to use with another board/shield #include <WiFi.h> #include <WiFi101.h> initialized to a time offset of 10 hours HH:MM:SS", "the setup function runs once when you press reset or power the board gesture mode will be entered once proximity mode senses something close the loop function runs over and over again forever read a gesture from the device", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Emulate Serial1 on pins 6/7 if not present don't continue", "Adjust according to your board's heap size. Too large => crash In bytes out.reserve(STRING_SIZE); clear the String to start over For ESP8266, change for other boards if necessary", "Optionally, enable the test pattern for testing Camera.testPattern();", "libraries Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number initialize the library instance initialize serial communications and wait for port to open:", "Switch on the LED if an 1 was received as first character Switch off the LED if an 0 was received as first character Switch off the LED if any other payload is comming Wait 5 seconds before retrying", "SD chip select pin number of lines to print test file ------------------------------------------------------------------------------ ------------------------------------------------------------------------------", "Uncomment the next line for sketch debugging #define SKETCH_DEBUG offset for mouse X and Y movements maximum and minimum value for the X and Y distance offset response delay of the mouse, in ms", "WiThrottleProtocol library: Track Type example Shows how to change the track types Tested with ESP32-WROOM board Peter Akers (Flash62au), Peter Cole (PeteGSX) and Chris Harlow (UKBloke), 2023 Luca Dentella, 2020", "put your setup code here, to run once: put your main code here, to run repeatedly:", "Enable the test pattern so we have a fixed image to run a checksum against sliding delay window to try different start times wrt camera VSYNC benchmarking Check if it is a best case or worse case time Test against known checksum values (minor pixel variations at the start but were visually confirmed to be a good test pattern)", "network related info misc variables initialize serial and wait for port to open: you're connected now, so print out the status compare the previous status to the current status", "no_description", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip); make a String for the HTTP request path:", "see https: Rawdata from OBD: some test data where to store the results Open serial communications and wait a few seconds", "#include <WiFi101.h> Initialize serial and wait for port to open: attempt to connect to WiFi network: Connect to WPA/WPA2 network. Change this line if using open or WEP network: wait 10 seconds for connection:", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. The async task handler should run inside the main loop without blocking delay or bypassing with millis code blocks. To get the authentication time to live in seconds before expired.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 channelNames used to convert channelNumber into channelName please put in your TV channel names", "Functions to simulate sensor readings Connect to Wi-Fi Define the template string Define the route to handle the main page Collect the variable values", "timer tester while(!Serial); some other simple tests", "no_description", "Fills kpd.key[ ] array with up-to 10 active keys. Returns true if there are ANY active keys.", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards SETTINGS", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings Configures the Keybus interface with the specified pins Initialize components", "Bluetooth Low Energy Battery Service Bluetooth Low Energy Battery Level Characteristic begin initialization start advertising wait for a Bluetooth Low Energy central", "#define SERIAL_DEBUG follow the instructions in ethernetConfig.h to configure your particular hardware In order to use software serial, you will need to compile this sketch with Arduino IDE v1.6.6 or higher. Hardware serial should work back to Arduino 1.0. #include \"utility/SerialFirmata.h\"", "Test Teensy SDIO with write busy in a data logger demo. The driver writes to the uSDHC controller's FIFO then returns while the controller writes the data to the SD.  The first sector puts the controller in write mode and takes about 11 usec on a Teensy 4.1. About 5 usec is required to write a sector when the", "put pi in flash memory set up Serial library at 9600 bps get next character from flash memory copy flash string for 'period' to filename digit - change 'P' to digit", "Connect to wifi Wait some time to connect to wifi log return echo close the connection", "no_description", "Initialize temperature probes Enables Thermocouples chip select Set CH0, has internal 150 ms delay Take CH0 measurement Set CH1, has internal 150 ms delay", "Log debug info Setup the remote web debugger in order to store log lines, url \"/log\" When no connection is present store log lines in a buffer until connection Connect WIFI ? Check connection", "Set the PMC Communication Protocols to default config RS485/RS232 default config is: - RS485 mode - Half Duplex - No A/B and Y/Z 120 Ohm termination enabled", "init Ciao Run commands in Linino OS to get date Get data back", "Only to deal with ESP8266 core v3.0.0 warning in Ticker library Connect RED of the AM2315 sensor to 5.0V Connect BLACK to Ground Connect WHITE to i2c clock (PIN_D1 / SCL) Connect YELLOW to i2c data (PIN_D2 / SDA)", "Wifi network station credentials Telegram BOT Token (Get from Botfather) attempt to connect to Wifi network: Check NTP/Time, usually it is instantaneous and you can delete the code below.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 checkButtonpress reads if BUTTON_PIN gets LOW and send Event", "Blynk.begin(auth, ssid, pass); Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080);", "Deprecated echo.websocket.org to be replaced send message to server when Connected send message to server KH, To check hexdump(payload, length);", "FILE: DHT12_test_esp.ino AUTHOR: Rob Tillaart PURPOSE: Demo for DHT12 I2C humidity & temperature sensor READ DATA DISPLAY DATA, sensor has only one decimal.", "put your setup code here, to run once: Serial.println(val(data.substring(1,9))); Serial.println(val(data.substring(11,19))); Serial.println(val(data.substring(21,29))); Serial.println(val(data.substring(31,39)));", "no_description", "default number of output channels default PCM output frequency Buffer to read samples into, each sample is 16-bits Number of audio samples read Configure the data receive callback", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection setup SinricPro", "Replace with your network credentials", "put your setup code here, to run once: see the SafeString_ConstructorAndDebugging example for debugging settings SafeString::setOutput(Serial); this is only called if input full or ends in a delimiter else just continue processing overflow", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 checkButtonpress reads if BUTTON_PIN gets LOW and send Event", "Initialize sensor Let's configure the sensor to run fast so we can over-run the buffer and cause an interrupt", "as described in the footer comment below the zip code to search for toxin-emitting facilities for debugging, wait until a serial console is connected while we haven't reached the max number of runs... print status", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Enter a MAC address and IP address for your controller below.", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "no_description", "This example shows how to read the spreadsheet's values from ranges. For SD/SD_MMC mounting helper For how to create Service Account and how to use the library, go to https: Service Account's client email Service Account's private key", "camera settings replace with your own model! NON-PSRAM FOMO only works on 96x96 (yolo) RGB565 images init camera capture picture", "Advertising parameters should have a global scope. Do NOT define them in 'setup' or in 'loop' Build advertising data packet If a packet has a raw data parameter, then all the other parameters of the packet will be ignored Copy set parameters in the actual advertising packet Build scan response data packet", "send message to client send message to client webSocket.sendTXT(num, \"message here\"); send data to all connected clients webSocket.broadcastTXT(\"message here\");", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Docs.resetApp(); In case setting the external async result to the sync task (optional)", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song. test", "This example shows how to connect to Google API via ethernet using Raspberri Pi Pico and W5500 Ethernet module. For how to create Service Account and how to use the library, go to https: Service Account's client email Service Account's private key Define the basic client", "Include the (new) library Pin definition Initialize both motors Used to display information Wait for Serial Monitor to be opened", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for WiFi connection", "send message to client we get RGB data decode rgb data USE_SERIAL.begin(921600); USE_SERIAL.setDebugOutput(true);", "the setup routine runs once when you press reset: the loop routine runs over and over again forever: set the brightness of the LED: change the brightness for next time through the loop: reverse the direction of the fading at the ends of the fade:", "Globals, used for compatibility with Arduino-style sketches. Create an area of memory to use for input, output, and intermediate arrays. The size of this will depend on the model you're using, and may need to be determined by experimentation. Whether we should clear the buffer next time we fetch data", "no_description", "BMP280_DEV - I2C Communications, Default Configuration, Normal Conversion bmp280.setPresOversampling(OVERSAMPLING_X4); bmp280.setTempOversampling(OVERSAMPLING_X1); bmp280.setIIRFilter(IIR_FILTER_4);", "Teensy 4.x/3.x/LC simple internal temperature", "Reading temperature for humidity takes about 250 milliseconds! Sensor readings may also be up to 2 seconds 'old' (it's a very slow sensor) Initialize temperature sensor 1 Initialize temperature sensor 2 Initialize temperature sensor 3", "no_description", "no_description", "while (!Serial) delay(10); Start TFT and fill black make a 1KHz callback nothing happens here!", "Definities Op welke pin wordt de BUZZER aangesloten (Voor de A-Vision ESP8266 learning board is dat D0) Laad de melodie, toonhoogte en duur Speel de melodie Even 10 seconden wachten", "Important: For ESP32, check https: and replace cores/esp32/Server.h to avoid compile error Initialize the Ethernet client object this method makes a HTTP connection to the server close any connection before send a new request", "SD Card Test Check if the SD card on the Audio Shield is working, and perform some simple speed measurements to gauge its ability to play 1, 2, 3 and 4 WAV files at a time. Requires the audio shield:", "don't continue: check for updates add your normal loop code below ...", "Callback methods prototypes Tasks", "Update these with values suitable for your network. const char* mqttServer = \"broker.example\"; IPAddress mqttServer(172, 16, 0, 2); Loop until we're reconnected Attempt to connect", "Select the IP address according to your local network Select the IP address according to your local network join default namespace (no auto join in Socket.IO V3) hexdump(payload, length); hexdump(payload, length);", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings nothing here", "Test the basic functions Test Power functions modem.sleepEnable(); modem.radioOff(); modem.setPhoneFunctionality(1, 1);", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define deviceIds in an array go through the devices", "Autodetect is not working reliable, don't use the following line dht.setup(17); use this instead:", "Specify IP address or hostname Initialize serial and wait for port to open: check for the presence of the shield: don't continue: attempt to connect to WiFi network:", "put your main code here, to run repeatedly:", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "create a variable of type SpacebrewYun and initialize it with the constructor create variables to manage interval between each time we send a string start the serial port for debugging, wait until a serial console is connected start-up the bridge", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 checkButtonpress reads if BUTTON_PIN gets LOW and send Event", "FILE: PIR_demo.ino AUTHOR: Rob Tillaart PURPOSE: demo pir sensor class URL: https: add 3 PIR sensors", "This certificate was updated 15.04.2021, issues on Mar 15th 2021, expired on June 13th 2021 Connect to wifi Wait some time to connect to wifi run callback when messages are received run callback when events are occuring", "Bridge takes about two seconds to start up it can be helpful to use the on-board LED as an indicator for when it has initialized Initialize the client library Make a HTTP request:", "Manage the communication with the companion app Send data as packed struct, ie. as the raw bytes Init the PacketSerial communication Set the function for handling commands from the companion app Update communication-channel and sensors", "Save SRAM if 328. ------------------------------------------------------------------------------ This example was designed for exFAT but will support FAT16/FAT32. Note: Uno will not support SD_FAT_TYPE = 3. SD_FAT_TYPE = 0 for SdFat/File as defined in SdFatConfig.h,", "GPS IMU Temperature Sensors INA219 GPS Setup", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings Configures the Keybus interface with the specified pins - dscWritePin is optional, leaving it out disables the virtual keypad.", "BMx280_I2C.ino shows how to use the BMP280 / BMx280 library with the sensor connected using I2C. Copyright (c) 2018 Gregor Christandl connect the AS3935 to the Arduino like this: Arduino - BMP280 / BME280", "StreamUtils - github.com/bblanchon/ArduinoStreamUtils Copyright Benoit Blanchon 2019-2024 MIT License This example shows how to buffer writes to a stream. Like \"echo,\" it reads from the serial port and prints back the same thing.", "Serial.begin(9600);", "This example implements a simple sliding On/Off button. The example demonstrates drawing and touch operations. Thanks to Adafruit forums member Asteroid for the original sketch! Touchscreen X+ X- Y+ Y- pins This is calibration data for the raw touch data to the screen coordinates", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings converting a constant char into a String: converting a F() constant string into a String object: using a constant integer:", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP", "Declare our NeoPixel strip object: Argument 1 = Number of pixels in NeoPixel strip Argument 2 = Arduino pin number (most are valid) Argument 3 = Pixel type flags, add together as needed: NEO_KHZ800  800 KHz bitstream (most NeoPixel products w/WS2812 LEDs)", "Update these with values suitable for your network. const char* mqttServer = \"broker.example\"; const char* mqttServer = \"broker.shiftr.io\"; IPAddress mqttServer(172, 16, 0, 2); Loop until we're reconnected", "no_description", "Use ESP8266 core v2.7.4- for SSL as new cores don't use axtls anymore Use core v3.0.2+ for LwIP Ethernet W5500lwIP, W5100lwIP and ENC28J60lwIP libraries Must use KH forked ESPAsyncTCP library or compile error #define MQTT_HOST         IPAddress(192, 168, 2, 110)", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "customizing a prompt look! by extending the prompt class ,SUBMENU(togOp)", "initialize serial for ESP module initialize ESP module don't continue Check for New Ip Every 10 mins.", "needed for library select which pin will trigger the configuration portal when set to LOW ESP-01 users please note: the only pins available (0 and 2), are shared with the bootloader, so always set them HIGH at power-up put your setup code here, to run once:", "MultiStepper -*- mode: C++ -*- Control both Stepper motors at the same time with different speeds and accelerations. Requires the AFMotor library (https:", "Only to deal with ESP8266 core v3.0.0 warning in Ticker library Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag.", "This example requires the TeensyTimerTool library. https: Tested with Teensy 4.1 and TeensyTimerTool 1.3.1  Doesn't work on Teensy 3.1 (most likely due to a bug in PeriodicTimer::setPeriod()) If using a stepper driver, with STEP and DIR pins:", "SDCARD_SS_PIN is defined for the built-in SD on some boards. Assume built-in SD is used. Try max SPI clock for an SD. Reduce SPI_CLOCK if errors occur. Try to select the best SD card configuration. ==============================================================================", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Digital clock display of the time You can call hour(), minute(), ... at any time", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Debug console as soon as connected update TimeInput widget state", "include the library SX1262 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "baud rate used for both Serial ports NEVER EVER use RESET_N Send Poweron pulse", "Circuit Playground Digital Fidget Spinner ----------------------------------------- Uses the Circuit Playground accelerometer to detect when the board is flicked from one side or the other and animates the pixels spinning around accordingly (with decay in speed to simulate friction).", "      motor_demo     0    -255.. 255   PID_SPEED/ACCEL_SPEED", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for setupEthernet connection ETHERNET_USE_RPIPICO, use default SS = 5 or 17", "define a callback for key presses Turn on/off the neopixels! Pulse all the LEDs on to show we're working set callbacks we handle all key events with the callbacks", "Use the MD_MAX72XX library to scroll text on the display Demonstrates the use of the callback function to control what is scrolled on the display text. User can enter text on the serial monitor and this will display as a scrolling message on the display.", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "To eliminate FW warning when using not latest nina-fw version To use whenever WiFi101-FirmwareUpdater-Plugin is not sync'ed with nina-fw version Initialize the Wifi client library with the IP address and port of the server that you want to connect to (port 80 is default for HTTP):", "WiThrottleProtocol library: Delegate example Shows how to create a delegate class to handle callbacks Tested with ESP32-WROOM board Peter Akers (Flash62au), Peter Cole (PeteGSX) and Chris Harlow (UKBloke), 2023 Luca Dentella, 2020", "This sketch connects to SSL websites (https: Debug Level from 0 to 4 Select the IP address according to your local network Google DNS Server IP the two domains we want to query", "and starts serial communication Range options: 2_G, 4_G, 8_G, 16_G", "The API key can be obtained from Firebase console > Project Overview > Project settings. Blocking authentication handler with timeout The JWT token processor required for ServiceAuth and CustomAuth authentications. JWT is a static object of JWTClass and it's not thread safe. In multi-threaded operations (multi-FirebaseApp), you have to define JWTClass for each FirebaseApp,", "no_description", "no_description", "#error(\"Height incorrect, please fix Adafruit_SSD1306.h!\"); code..", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "DCC codes Commanders Accessories Ports Setup", "Try to connect to a wifi network Give the ESP some time to connect Check for connection Get value of \"age\" without checking for errors Get the packed result and check for errors", "initialize the Robot, SD card, and display draw \"lg0.bmp\" and \"lg1.bmp\" on the screen empty the commands array add commands to the array display text on the screen", "Emulate Serial1 on pins 6/7 if not present don't continue waiting for connection to Wifi network set with the SetupWiFiConnection sketch send a standard http response header output the value of analog input pins", "Variable to store the battery voltage Variable to change the motor speed and direction Serial port initialization Establishing the communication with the Motor Carrier Reboot the motor controller; brings every value back to default", "SD_FAT_TYPE = 0 for SdFat/File as defined in SdFatConfig.h, 1 for FAT16/FAT32, 2 for exFAT, 3 for FAT16/FAT32 and exFAT. SDCARD_SS_PIN is defined for the built-in SD on some boards. Assume built-in SD is used. Try max SPI clock for an SD. Reduce SPI_CLOCK if errors occur.", "Talkie library Copyright 2011 Peter Knight This code is released under GPLv2 license. The following phrases are derived from VM61002 ROM A male voice with a US accent.", "check if a color reading is available read the color print the values wait a bit before reading again", "t6client.lockSleep(t6Timeout); t6client.unlockSleep(); Run those tasks only once, and now Schedule tasks t6client.cancelTask(readTask);", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Enter a MAC address and IP address for your controller below.", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Toggle LED Enable/disable blinking using virtual pin 1", "Select a test server address char GET_ServerAddress[]    = \"ipv4bot.whatismyipaddress.com/\"; 600s = 10 minutes to not flooding, 60s in testing Uncomment for certain HTTP site to optimize #define NOT_SEND_HEADER_AFTER_CONNECTED        true", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Do something Do something", "no_description", "| cayenne button |  illuminance senor    | register callback for incoming messages begin initialization debounce button to send the frame just once at pressure read a value from the LDR sensor and send it", "Set the keypad type #define dscClassicKeypad Configures the Keybus interface with the specified pins Initialize components Checks for a keypad key press", "Advertising parameters should have a global scope. Do NOT define them in 'setup' or in 'loop' Build scan response data packet Set parameters for scan response packet Copy set parameters in the actual scan response packet Build advertising data packet", "Create PDM receiver object, with Clock and Data pins used (not all pins available) Adafruit_ZeroPDM pdm = Adafruit_ZeroPDM(34, 35); a windowed sinc filter for 44 khz, 64 samples We'll use DMA to transfer one chunk of data from PDM/I2S for us DMA status codes returned by some functions", "Simple WAV file player example for SD or QSPI flash storage Audio connections require memory to work.  For more detailed information, see the MemoryAndCpuUsage example Start arcada! If we are using TinyUSB & QSPI we will have the filesystem show up!", "no_description", "Initial Value for each Motor Initialization function for Ciao Initialization function for Braccio You should set begin(SOFT_START_DISABLED) if you are using the Arm Robot shield V1.6 Select REST connector", "Get pressure value Print the results", "no_description", "Don't take any steps if there is an issue. We will switch directions after each pause. Pause for 250 ms once per second. Otherwise, take a step roughly every 1500 microseconds. Send the SPI command to change the direction, but only", "customizing a prompt look! by extending the prompt class ,SUBMENU(togOp) use this commented lines if you want your stringIn object to be used as part or normal menu input menuIn* inputsList[]={&serial,&strIn};", "this array of char[][] each has space for 39 chars + '\\0' each element of this the array of const char* only has space for the initial string NOTE: since these strings are const, the compiler may only keep one copy of identical strings put your setup code here, to run once: to modify the string safely wrap it in a SafeString", "Select your modem: #define TINY_GSM_MODEM_SIM808 #define TINY_GSM_MODEM_SIM868 #define TINY_GSM_MODEM_SIM900 #define TINY_GSM_MODEM_SIM7000", "no_description", "no_description", "Set serial for debug console (to the Serial Monitor, default speed 115200) Set serial for AT commands (to the module) Use Hardware Serial on Mega, Leonardo, Micro See all AT commands, if wanted #define DUMP_AT_COMMANDS", "Construct object, StepMotor(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency Stop Button) Waits for the user to send a value via serial port put your main code here, to run repeatedly: Check the forward button signal Check the forward button signal", "This Arduino sketch was automatically generated by IrScrutinizer. It supports: * Infrared4Arduino https: http: For problems, bugs, and suggestions, please open an issue at", "---------------------------------------- The following \"defines\" control library functionality at compile time, and should be used in the main sketch depending on the functionality required #define _TASK_TIMECRITICAL #define _TASK_WDT_IDS", "Arduino Uno doesn't have enough SRAM to store 100 samples of IR led data and red led data in 32-bit format To solve this problem, 16-bit MSB of the sampled data will be truncated. Samples become 16-bit data. Initialize sensor read the first 100 samples, and determine the signal range calculate heart rate and SpO2 after first 100 samples (first 4 seconds of samples)", "#warning Using LAN8742A Ethernet & STM32Ethernet lib Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Select the IP address according to your local network join default namespace (no auto join in Socket.IO V3)", "const int myInput = AUDIO_INPUT_MIC; Create the Audio components.  These should be created in the order data flows, inputs/sources -> processing -> outputs Create Audio connections between the components Create an object to control the audio shield.", "NeoPixel Ring simple sketch (c) 2013 Shae Erisson Released under the GPLv3 license to match the rest of the Adafruit NeoPixel library This sketch shows use of the \"new\" operator with Adafruit_NeoPixel. It's helpful if you don't know NeoPixel settings at compile time or", "Report ID HID report descriptor using TinyUSB's template USB HID object. the setup function runs once when you press reset or power the board Manual begin() is required on core without built-in support e.g. mbed rp2040", "create two new variables to store the previous joystick and the new joystick value Initialize Serial comunication wait for the serial port to connect, Needed for USB native only initialize the Accessory Shield library", "Copyright (C) 2010 Georg Kaindl http: This file is part of Arduino EthernetBonjour. EthernetBonjour is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License", "declare some variables to store temperature, humidity and heat index : tempC -> temperature in degrees Celsius tempF -> temperature in degrees Fareneith tempK -> temperature in degrees Kelvin humidity -> relative humidity", "include the library SX1262 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "no_description", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP Optional values to override default settings", "=cm*58; 50cm,50*58=2900 10 Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "The API key can be obtained from Firebase console > Project Overview > Project settings. Define the project location e.g. us-central1 or asia-northeast1 */ https: ServiceAuth is required for Google Cloud Functions functions. Binding the FirebaseApp for authentication handler.", "include the library LR1110 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "Adafruit_WavePlayer example using Adafruit_ZeroDMA. Adafruit_ZeroTimer (within Adafruit_Arcada) is used for setting up timing (no per-sample interrupt). EVEN FOR 8-BIT WAVS, it's important to use the NATIVE DAC RESOLUTION: 10 bits on SAMD21, 12 bits on SAMD51. Initialize DAC by calling", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console Blynk will work through SoftwareSerial Do not read or write this serial manually in your sketch", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Database.resetApp(); In case setting the external async result to the sync task (optional)", "Get IoTtweet Library version Connect WiFi Send data from your iot to Dashboard Waiting storage data on IoTtweet cloud 15 sec.", "check if a color reading is available read the color print the values wait a bit before reading again", "while (!Serial); delay(100); Start TFT and fill black Turn on backlight Set up the logo bitmap obstacle in the PixelDust playfield Set up initial sand coordinates, in 8x8 blocks", "Image buffer; Initialize the OV7675 camera Read incoming commands from serial monitor Command interpretation", "Calculate preDelay and postDelay in microseconds as per Modbus RTU Specification MODBUS over serial line specification and implementation guide V1.02 Paragraph 2.5.1.1 MODBUS Message RTU Framing https: start the Modbus RTU client in 8E1 mode", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "These are the interrupt and control pins for 3000 You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Your WiFi credentials. Choose wifi_sec from WLAN_SEC_UNSEC, WLAN_SEC_WEP, WLAN_SEC_WPA or WLAN_SEC_WPA2", "Basic demo for accelerometer & gyro readings from Adafruit LSM6DSO32 sensor For SPI mode, we need a CS pin For software-SPI mode we need SCK/MOSI/MISO pins if (!dso32.begin_SPI(LSM_CS)) {", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Enter a MAC address and IP address for your controller below.", "Sensor Includes Sensor Objects (Debugging defaults to false) Sensor Data Variables Output Formatting Variables Start up Serial (wired) Communications", "no_description", "Set a callback to get the current time used to validate the servers certificate Set the ECCX08 slot to use for the private key and the accompanying public certificate for it Optional, set the client id used for MQTT,", "#define ASYNC_TCP_SSL_ENABLED       false #define MQTT_HOST         IPAddress(192, 168, 2, 110) ensure we don't reconnect to MQTT when no ETH ensure we don't reconnect to MQTT when no ETH ensure we don't reconnect to MQTT when no ETH", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Now support ArduinoJson 6.0.0+ ( tested with v6.15.2 to v6.16.1 )", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "while (1) { rfm.handleIRQ(); };", "Log messages both on Serial and WebSocket clients In this example a custom websocket event handler is used instead default Test \"config\" values Timezone definition to get properly time from NTP server FILESYSTEM INIT", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP Optional values to override default settings", "Audio level visualizer for Adafruit Circuit Playground: uses the built-in microphone, 10x NeoPixels for display.  Like the FFT example, the real work is done in the Circuit Playground library via the 'mic' object; this code is almost entirely just dressing up the output with a lot of averaging and scaling math and colors.", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" We make these values volatile, as they are used in interrupt context Most boards won't send data to WiFi out of interrupt handler.", "Create an ESP8266 WiFiClient class to connect to the MQTT server. Setup the MQTT client class by passing in the WiFi client and MQTT server and login details. Setup a feed called 'time' for subscribing to current time Setup a feed called 'slider' for subscribing to changes on the slider Setup a feed called 'onoff' for subscribing to changes to the button", "initialize the robot initialize the robot's screen initialize the serial port read the compass print out the sensor's value", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "no_description", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Ported to ESP32", "This sketch combines sending and receiving. It is useful for testing by developers. It is NOT intended as a pedagogical example of usage of the library. NEC(1) 122 29 with no repetition; powers on many Yamaha receivers", "no_description", "See the list of country codes in https: To modify https: Check https: Check connection every 1s", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP Optional values to override default settings", "#define IRQ_PIN   5 Reverse x/y values to match joystick orientation Serial.println(buttons, BIN);", "Search the element in JSON object Assign the search criteria criteria.path = \"rows/[3]/elements/[0]/distance/text\"; /* without wildcard in path */ criteria.value = \"1,286 mi\"; criteria.depth = 0; /* begin dept to search, default is 0 */", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Network settings Blynk cloud server Start the WiFi connection", "Set gain Set resolution Set oversampling Set digital filtering Print out magnetic field measurements for each axis", "For transport=websocket instead of transport=polling Select the Server's IP address according to your local network Select the IP address according to your local network Google DNS Server IP join default namespace (no auto join in Socket.IO V3)", "Update these with values suitable for your network. Setup console Or to set a binary message: char msg[4] = { 0xde, 0xad, 0xbe, 0xef }; con.set_will(\"test\", msg, 4);", "Create an ESP8266 WiFiClient class to connect to the MQTT server. or... use WiFiClientSecure for SSL WiFiClientSecure client; Setup the MQTT client class by passing in the WiFi client and MQTT server and login details. Setup a feed called 'photocell' for publishing.", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_DEBUG Uncomment your board, or configure a custom board in Settings.h #define USE_ESP32_DEV_MODULE", "create switch characteristic and allow remote device to read and write begin initialization set the local name peripheral advertises set the UUID for the service this peripheral advertises add the characteristic to the service", "get starting positions did we move around? change the neopixel color, mulitply the new positiion by 4 to speed it up don't overwhelm serial port", "We will set the MAC address at the beginning of `setup()` using TeensyID's `teensyMac` helper. Enter websockets server port. Define how many clients we accpet simultaneously. Set the MAC address.", "send message to client send message to client webSocket.sendTXT(num, \"message here\"); send data to all connected clients webSocket.broadcastTXT(\"message here\");", "scroll 13 positions (string length) to the left to move it offscreen left: scroll 29 positions (string length + display length) to the right to move it offscreen right: scroll 16 positions (display length + string length) to the left to move it back to center:", "FS& gfs = SPIFFS; FS& gfs = SDFS; open file 'DAVROOT nf' (/dav/userfilename) This is a reachable piece of code if the file is explicitally ignored in dav.setIgnored({}),", "no_description", "initialize the accessory Shield library turn the RED led ON wait for 1 second (1000 milliseconds) turn the RED led OFF wait for 1 second (1000 milliseconds)", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- Initiate the session", "First parameter is the event type (0x09 = note on, 0x08 = note off). Second parameter is note-on/note-off, combined with the channel. Channel can be anything between 0-15. Typically reported to the user as 1-16. Third parameter is the note number (48 = middle C). Fourth parameter is the velocity (64 = normal, 127 = fastest).", "for your motor initialize the stepper library on pins 8 through 11: initialize the serial port: step one step:", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" This function sends Arduino's up time every second to Virtual Pin (5). You can send any value at any time.", "StreamUtils - github.com/bblanchon/ArduinoStreamUtils Copyright Benoit Blanchon 2019-2024 MIT License This example shows how to read from EEPROM Initialize serial port", "Convert voltage to temperature in Fahrenheit and then subtract the offset Convert temperature to Celsius", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "Configure the motor driver. The setup routine runs once when you press reset. The loop routine runs over and over again forever.", "GOT FROM ThingsStream! Initialize the SSL client library Arguments: EthernetClient, our trust anchors Klugde to temporarily fix RP2040W WiFi.status() bug ( https: You can change longer or shorter depending on your network response", "Initialize the Wifi initialize serial: reserve 200 bytes for the inputString: print the string when a newline arrives: clear the string:", "Delay demonstration example, Teensy Audio Library http: Creates a chirp on the left channel, then three delayed copies on the right channel. Requires the audio shield:", "Initialize sensor We sensed a beat! Take average of readings", "initialize the AccessoryShield library and the Oled library init done Show image buffer on the display hardware. Since the buffer is intialized with an Adafruit splashscreen internally, this will display the splashscreen.", "while (!Serial);", "no_description", "KH Print hearbeat every HEARTBEAT_INTERVAL (20) seconds. Debug console Set customized AP SSID and PWD Optional to change default AP IP(192.168.4.1) and channel(10)", "include the GSM library PIN Number for the SIM initialize the library instances Array to hold the number a SMS is retreived from initialize serial communications and wait for port to open:", "include the EduIntro library nothing here check the switchState of the button each time it is pressed, it toggles the LED when LOW, light should go on", "Use the MD_MAX72XX library to create an mechanical pushwheel type display When numbers change they are scrolled up or down as if on a cylinder 'Speed' displayed is read from pot on SPEED_IN analog in. Define the number of devices we have in the chain and the hardware interface NOTE: These pin numbers will probably not work with your hardware and may", "no_description", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "no_description", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Set your LED and physical button pins here Every time we connect to the cloud...", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection setup function for SinricPro", "include the library code: initialize the library by associating any needed LCD interface pin with the arduino pin number it is connected to set up the LCD's number of columns and rows: initialize the serial communications:", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "replace with your motor pins how many millis motors will run", "Create backlight object init library", "Emulate Serial1 on pins 6/7 if not present don't continue waiting for connection to Wifi network set with the SetupWiFiConnection sketch parse the parameters sent by the html form send a response before attemting to connect to the WiFi network", "The API key can be obtained from Firebase console > Project Overview > Project settings. The id token obtained from app.token() when initialize app with UserAuth Blocking authentication handler with timeout The JWT token processor required for ServiceAuth and CustomAuth authentications. JWT is a static object of JWTClass and it's not thread safe.", "Globals, used for compatibility with Arduino-style sketches. Create an area of memory to use for input, output, and intermediate arrays. The size of this will depend on the model you're using, and may need to be determined by experimentation. The name of this function is important for Arduino compatibility.", "      motor_demo   0    -255.. 255   PID_SPEED/ACCEL_SPEED motor.setTargetSpeedDeg(val*3);", "define a callback for key presses create a new ripple here while(!Serial); activate all keys and set callbacks do a little animation to show we're on", "Put your supabase URL and Anon key here... Because Login already implemented, there's no need to use secretrole key put your WiFi credentials (SSID and Password) here Put Supabase account credentials here", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network message += server.uri(); start the ethernet connection and the server Use random mac", "Cancel an interval after 10 seconds", "from: https: The circuit: * SD card attached to SPI bus as follows: ** MOSI - pin 11 ** MISO - pin 12", "File system on SD Card USB Mass Storage object Set to true when PC write to flash the setup function runs once when you press reset or power the board Set disk vendor id, product id and revision with string up to 8, 16, 4 characters respectively", "Change handler to handle websockets changes Connect WIFI ? Check connection Control assist setup Every time a variable changed changeHandler will be called", "include the library code: initialize the library by associating any needed LCD interface pin with the arduino pin number it is connected to set up the LCD's number of columns and rows: turn on the cursor:", "rotary encoder pins customizing a prompt look! by extending the prompt class define menu colors -------------------------------------------------------- each color is in the format:", "no_description", "Example shows how to connect to Firebase RTDB and perform basic operation for set, get, push and update data to database Required WiFiNINA Library for Arduino from https: Define Firebase data object Provide the autntication data clear internal memory used", "10 Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 163), 8080);", "Adafruit_ImageReader test for Mini TFT FeatherWing. Demonstrates loading images from SD card or flash memory to the screen, to RAM, and how to query image file dimensions. OPEN THE ARDUINO SERIAL MONITOR WINDOW TO START PROGRAM. Requires three BMP files in root directory of SD card or flash: minibot.bmp, rgbwheel.bmp and wales.bmp.", "Select the Server's IP address according to your local network Select the IP address according to your local network Google DNS Server IP join default namespace (no auto join in Socket.IO V3) Serial.begin(921600);", "Set the baud rate between the modem and the board Set serial printing out the communication Set serial for input from modem Set serial for AT commands (to the module) Use Hardware Serial on Mega, Leonardo, Micro", "Clock example using a seven segment display & DS1307 real-time clock. Must have the Adafruit RTClib library installed too!  See: https: Designed specifically to work with the Adafruit LED 7-Segment backpacks and DS1307 real-time clock breakout:", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define array of supported color temperatures a map used to convert a given color temperature into color temperature index (used for colorTemperatureArray)", "Bluetooth Low Energy LED Switch Characteristic - custom 128-bit UUID, read and writable by central set LED pin to output mode begin initialization set advertised local name and service UUID: add the characteristic to the service", "Callback methods prototypes Tasks", "as described in the footer comment below Note that for additional security and reusability, you could use #define statements to specify these values in a .h file. your Dropbox app key, available on the Dropbox developer console after registering an app your Dropbox app secret, available on the Dropbox developer console after registering an app", "Note: Must use Seeed_Arduino_mbedtls-dev Library version to avoid \"esp_system.h\" error Select the IP address according to your local network IPAddress clientIP(192, 168, 2, 225); send message to server when Connected send message to server", "#define ENABLE_MINIMIZATION This function is used by Blynk to receive data This function is used by Blynk to send data", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 debounce contact state transitions (same as debouncing a pushbutton) if state has changed", "Global Variables used in the setup() and loop() Initial setup to prepare loop() initialize digital pin LED_BUILTIN as an output. Increasing brightness Decreasing brightness", "Uncomment below to enable debug output. #define DEBUG_MODE Uncomment below to add a demo mode before USB connect These defines setup debug output if enabled above (otherwise it turns into no-ops that compile out).", "--------------------------------------------------------------------+ Video descriptors --------------------------------------------------------------------+ --------------------------------------------------------------------+ Video and frame buffer", "suppress unused warnings", "libraries pin manager object save input in serial by user authenticated with PIN code serial monitor result messages", "include the EduIntro library initialize serial communications at 9600 bps read the potentiometer's value: map the data from the sensor (0..1023) to one the servo can take (0..180)", "These are the interrupt and control pins These can be any two pins Use hardware SPI for the remaining pins On an UNO, SCK = 13, MISO = 12, and MOSI = 11 We get the SSID & Password from memory thanks to SmartConfigCreate!", "Pattern numbers First up, display whatever neopixel patterm we're doing a small pause go to next phase next time Did we get any infrared signals?", "all global objects (e.g. `camera`) are scoped under the `eloq` namespace camera settings replace with your own model! supported models:", "Adafruit_ImageReader test for Adafruit ST7735 TFT Breakout for Arduino. Demonstrates loading images from SD card or flash memory to the screen, to RAM, and how to query image file dimensions. Requires three BMP files in root directory of SD card: rgbwheel.bmp, miniwoof.bmp and wales.bmp.", "Test code for Ultimate GPS Using Hardware Serial (e.g. GPS Flora or FeatherWing) This code is similar to GPS_HardwareSerial_Parsing, except for the additional elements to keep track of how long it has been since time and fix data have been received. This approach lets you keep an up to date clock based on GPS", "no_description", "Arduino Colors", "Redirect log output from MbedOS and low-level libraries to Serial", "Adafruit Grand Central M4 QSPI Flash and SD Card Setup Example Author: Joshua Scoggins This is an example of how to bring up both the QSPI Flash and SD Card found on the Adafruit Grand Central M4. This example will setup both the QSPI Flash and SD card (if present) and display information about the QSPI flash.", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console You can also specify server: Blynk.begin(auth, \"blynk-cloud.com\", 80);", "USB Host using MAX3421E: SPI, CS, INT Default CS and INT are pin 10, 9 Language ID: English CFG_TUH_DEVICE_MAX is defined by tusb_config header --------------------------------------------------------------------+", "Check connection every 1s #define MQTT_HOST         IPAddress(192, 168, 2, 110) Repeat forever, millis() resolution start the ethernet connection and the server Use random mac", "This example shows how to store and read binary data from file on SD card to database. If SD Card used for storage, assign SD card type and FS used in src/FirebaseFS.h and change the config for that card interfaces in src/addons/SDHelper.h Provide the token generation process info. Provide the RTDB payload printing info and other helper functions.", "enable serial data print Static IP Ethernet.begin(mac, ip, gateway, subnet); DHCP Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for WiFi connection", "The SSL client used for secure server connection. The default network config object that used in this library. The client, aka async client, is the client that handles many tasks required for each operation. The authentication task handler, aka FirebaseApp. The Realtime database class object that provides the functions.", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Docs.resetApp(); In case setting the external async result to the sync task (optional)", "#include \"Botletics_modem.h\" Required for Serial on Zero based boards Define *one* of the following lines: #define SIMCOM_2G #define SIMCOM_3G", "Core AUnit features are tested here. Meta assertion tests have been moved to MetaAssertionTest because they make this sketch no longer fit in a Arduino Micro (ATmega32U4, max flash: 28672). If ArduinoUnit is used, this unit test no longer fits in a 32kB Arduino UNO or Nano.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 channelNames used to convert channelNumber into channelName please put in your TV channel names", "bool hasInt = digitalPinToInterrupt(i) != NOT_AN_INTERRUPT;", "Open serial communications and wait a few seconds", "Connect RED of the AM2315 sensor to 5.0V Connect BLACK to Ground Connect WHITE to i2c clock (SCL) - on '168/'328 Arduino Uno/Duemilanove/etc that's Analog 5 Connect YELLOW to i2c data (SDA) - on '168/'328 Arduino Uno/Duemilanove/etc that's Analog 4 Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal", "This example USES the ADC function. LIS.setFullScaleRange(LIS3DHTR_RANGE_2G); LIS.setFullScaleRange(LIS3DHTR_RANGE_4G); LIS.setFullScaleRange(LIS3DHTR_RANGE_8G); LIS.setFullScaleRange(LIS3DHTR_RANGE_16G);", "attach motor a attach motor b", "GLEE 2023 Module 2: Intro to Arduino - Hello Luna Put your setup code here, to run once: Put your main code here, to run repeatedly:", "Configure the PulseSensor manager. Now that everything is ready, start reading the PulseSensor signal. Flash the led to show things didn't work. write the latest sample to Serial.", "#include <SPI.h> #include <menuIO/chainStream.h> Setting PWM properties, do not change this! customizing a prompt look! by extending the prompt class", "see the tutorial https: Pin 13 has an LED connected on most Arduino boards. if using Arduino IDE 1.5 or above you can use pre-defined LED_BUILTIN  instead of 'led' have const here so it is easy to find and change", "Emulate Serial1 on pins 6/7 if not present don't continue use this lines for custom SoftAP IP. it determines the IP of stations too IPAddress ip(192, 168, 2, 1); WiFi.configureAP(ip);", "initialize the serial communication: read the sensors into variables: convert the sensor readings to light levels: print the light levels: write the light levels to the LED.", "   GyverMotor       : AccelMotor motor(DRIVER2WIRE, dig_pin, PWM_pin, level) AccelMotor motor(DRIVER3WIRE, dig_pin_A, dig_pin_B, PWM_pin, level) AccelMotor motor(RELAY2WIRE, dig_pin_A, dig_pin_B, level)", "const int FlashChipSelect = 21; uncomment these if using Teensy audio shield SPI.setSCK(14); SPI.setMOSI(7); uncomment these if you have other SPI chips connected", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "Ladyada's logger modified by Bill Greiman to use the SdFat library This code shows how to listen to the GPS module in an interrupt which allows the program to have more 'freedom' - just parse when a new NMEA sentence is available! Then access data when desired.", "The target is to move a servo, allowing four buttons to change driven mode (fast, slow exclusive, memo and very slow). And four other buttons to reach four different positions. A classic button also toggle between min and max positions. DCC codes", "This example requires a core that implements analogWriteFrequency() such as Teensy 3 and 4 Tested on Teensy 3.1 and Teensy 4.0  speed is quite limited on Teensy 3.1 AwfTicker can only work with StepperDriver", "This function is used by Blynk to receive data This function is used by Blynk to send data Blynk.virtualWrite(V10, (int64_t)1, (uint64_t)1);", "assume a true response for any headers not handled by this validator if the header passed is the Cookie header, validate it according to the rules in 'isCookieValid' function USE_SERIAL.begin(921600); Serial.setDebugOutput(true); connecting clients must supply a valid session cookie at websocket upgrade handshake negotiation time", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network start the ethernet connection and the server Use random mac Use Static IP", "Advanced Microcontroller-based Audio Workshop http: https: Part 1-5: Respond to Pushbuttons & Volume Knob Do more while playing.  Monitor pushbuttons and adjust", "LW MQTT Client https: Enable LW MQTT library after include the library and before include the FirebaseJson. If you are using the library that built in the FirebaseJson and get the compilation error, move #define FBJS_ENABLE_LW_MQTT to the top above that library inclusion.", "Initialize the Web client object Open serial communications and wait for port to open: start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP", "Listen on default port 5555, the webserver on the Yn will forward there all the HTTP requests for us. Bridge startup using A0 and A2 as vcc and gnd for the TMP36 sensor: Listen for incoming connection only from localhost", "----- CHANGE THIS LINE ----- ----------------------------- Blink to let user know EEPROM write status. Slow blink is 'ok'. Fast blink is an 'error'.", "Callback methods prototypes Tasks Test Initially only tasks 1 and 2 are enabled Task1 runs every 2 seconds 10 times and then stops", "set this to 0 to disable autoranging and scale to FFT_MAX the sample rate. the setup routine runs once when you press reset: while(!Serial); draw some reference lines", "#warning Using LAN8742A Ethernet & STM32Ethernet lib Change pins according to your boards Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Serial.println( \"[\" + String(num) + \"] Disconnected!\");", "These are the interrupt and control pins These can be any two pins Use hardware SPI for the remaining pins On an UNO, SCK = 13, MISO = 12, and MOSI = 11 Security can be WLAN_SEC_UNSEC, WLAN_SEC_WEP, WLAN_SEC_WPA or WLAN_SEC_WPA2", "no_description", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Change pins according to your boards", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "no_description", "#define DEBUG_MODE Create a Bsec object Print the header Set config", "if you would like to create your own mac address for your canary... by default we're using a Synology mac address (0x00, 0x11, 0x32) must be unique per network if you are using your own webhook,with a bunch of GET parameters then you would want this to be \"&\" so the IP", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Air quality sensor event dispatch time.  Min is every 1 min. setup function for WiFi connection setup function for SinricPro", "Example of using injected Environment variables to change WiFi login credentials. Set MQTT status (unretained) Convert incoming JSON string to Object Parse and apply your Environment vars password may be empty string", "M5PaperCoreInkLovyanGFX.hppinclude If you use it with M5Paper or CoreInk libraries, include it before LovyanGFX.hpp. #include <M5EPD.h> #include <M5CoreInk.h>  define ", "SPDX-FileCopyrightText: (c) 2023-2024 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later MbedTLSDemo shows how to use Mbed TLS 2.x.x. Prerequisites: 1. Enable the following lwIP options (in lwipopts.h or the project", "SafeStringReader_CmdsTimed.ino Example of NON-Blocking read commmands from the Arduino Monitor input and acts on them the available commands are start stop the commands and their functions are stored in struct array Commands are delimited by space dot comma NL or CR, OR if there is no more input for 2secs", "Basic demo for magnetometer readings from Adafruit LIS3MDL Try to initialize! if (! lis3mdl.begin_SPI(LIS3MDL_CS)) { if (! lis3mdl.begin_SPI(LIS3MDL_CS, LIS3MDL_CLK, LIS3MDL_MISO, LIS3MDL_MOSI)) { Single shot mode will complete conversion and go into power down", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "First DEFINE the components of the library we're going to use for this sketch Define #USE_ALB_LCD_I2C to include the LCD functions of the ArduinoLearningBoard Library (Must do this before including ArduinoLearningBoard.h) NOW include the main ArduinoLearningBoard library Based on the defines above, the appropriate modules will be added to the project", "reconstruct the self signed cert Set a callback to get the current time used to validate the servers certificate Set the ECCX08 slot to use for the private key and the accompanying public certificate for it", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "Connect WIFI ? Check connection Start web sockets Setup webserver Start web server", "include the EduIntro library initialize serial communications at 9600 bps", "no_description", "New in v2.16.0 Select the IP address according to your local network Select the IP address according to your local network join default namespace (no auto join in Socket.IO V3) hexdump(payload, length);", "KH Print hearbeat every PRINT_INTERVAL (20) seconds. don't continue Check for New Ip Every 10 mins.", "First DEFINE the components of the library we're going to use for this sketch Define #USE_ALB_MPU6050 to include the MPU6050 (Gyro) functions of the ArduinoLearningBoard Library (Must do this before including ArduinoLearningBoard.h) NOW include the main ArduinoLearningBoard library Based on the defines above, the appropriate modules will be added to the project", "Initialization functions and set up the initial position for Braccio All the servo motors will be positioned in the \"safety\" position: Base (M1):90 degrees Shoulder (M2): 45 degrees Elbow (M3): 180 degrees", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "#define USE_DEBUG_CODE Firmware version This function loads an wave array with a sinewave using RES samples. wave1.sine(freq1); wave2.sine(freq1);", "Only to deal with ESP8266 core v3.0.0 warning in Ticker library Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag.", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "StreamUtils - github.com/bblanchon/ArduinoStreamUtils Copyright Benoit Blanchon 2019-2024 MIT License This example shows how to buffer the read operations of a stream. Like \"echo,\" it reads from the serial port and prints back the same thing.", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3 Optional values to override default settings", "SD chip select pin file system object define a serial output stream ------------------------------------------------------------------------------ Wait for USB Serial", "no_description", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false From v1.1.0", "#define BLYNK_USE_DIRECT_CONNECT You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Next functions are optional. Add ZeRGBa Widget on V0 to control onboard LED.", "CS5490 line(MCLK_default); Initializing communication with CS5490 600 is the default baud rate velocity. Initializing communication arduino/PC to show results in Monitor Serial wait for serial port to connect. Needed for Leonardo only", "Record sound as raw data to a SD card, and play it back. Requires the audio shield: http: Three pushbuttons need to be connected: Record Button: pin 0 to GND", "Include the library Pin definition Create one motor instance Used to display information Wait for Serial Monitor to be opened", "This sketch demonstrates the IrReceiverSampler together with Pronto::toHexString. It requires a demodulating sensor connected to pin RECEIVE_PIN. For this reason, we \"guess\" the modulation frequency to be IrSignal::defaultFrequency. receiver->dump(Serial);", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Choose wifi_sec from WLAN_SEC_UNSEC, WLAN_SEC_WEP, WLAN_SEC_WPA or WLAN_SEC_WPA2", "Touch screen library with X Y and Z (pressure) readings as well as oversampling to avoid 'bouncing' This demo code returns raw readings, public domain For better pressure precision, we need to know the resistance between X+ and X- Use any multimeter to read it", "#include <menuIO/jsFmt.h> on debug mode I put aux files on external server to allow changes without SPIFF update on this mode the browser MUST be instructed to accept cross domain files this version numbers MUST be the same as data/1.2 on my esp12e led pin is 2", "Initialize serial: check for the presence of the shield: don't continue: attempt to connect to Wifi network: Connect to WPA/WPA2 network. Change this line if using open or WEP network:", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 is button pressed (inverted logic! button pressed = LOW) and debounced? flip myPowerState: if it was true, set it to false, vice versa", "no_description", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield Non default portnr ----------------------------------------------------------------------------- -----------------------------------------------------------------------------", "Variable to store the battery voltage the setup function runs once when you press reset or power the board while (!Serial); the loop function runs over and over again forever Serial.println(\"V\");", "attempt to decode it Print the results.  Change parameter to \"true\" for verbose output.", "To demo how to include files in multi-file Projects The .hpp contains only definitions, and can be included as many times as necessary, without `Multiple Definitions` Linker Error The .h contains implementations, and can be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error", "use arrays to store the names of the pins to be read initialize the robot open the serial port to send the information of what you are reading read all the D inputs at the Motor Board as analog analogReadB_Ds();", "Language ID: English CFG_TUH_DEVICE_MAX is defined by tusb_config header --------------------------------------------------------------------+ setup() & loop() --------------------------------------------------------------------+", "Wifi network station credentials Telegram BOT Token (Get from Botfather) Content type for PNG image/png if the file didn't open, print an error: attempt to connect to Wifi network:", "StreamUtils - github.com/bblanchon/ArduinoStreamUtils Copyright Benoit Blanchon 2019-2024 MIT License This example shows how to use StringPrint Initialize serial port", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Enter a MAC address and IP address for your controller below.", "Deprecated echo.websocket.org to be replaced To run a local WebSocket Server send message to server when Connected send message to server KH, To check", "==================== start of TUNEABLE PARAMETERS ==================== The GPIO an IR detector/demodulator is connected to. Recommended: 14 (D5) Note: GPIO 16 won't work on the ESP8266 as it does not have interrupts. Note: GPIO 14 won't work on the ESP32-C3 as it causes the board to reboot. GPIO to use to control the IR LED circuit. Recommended: 4 (D2).", "Update these with values suitable for your network. IPAddress mqttServer(172, 16, 0, 2); Klugde to temporarily fix RP2040W WiFi.status() bug ( https: You can change longer or shorter depending on your network response Shorter => more responsive, but more ping traffic", "SafeStringReader_flushInput.ino Reads words into a SafeString delimited by space or timeout uses line limit, timeout and input flushing https: download SafeString library from Arduino library manager", "port where LM35 temperature sensor is connected a function that calculates temperature (in *C) from analogRead raw reading see datasheet of LM35 and analogRead Arduino function documentation set the best resolution of measurement available for analogRead it's 12 bits for SAM21D-based Arduino boards", "Libraries to include Constructors Set up the lcd Welcome messages Draw the graph:", "#define RS485_RE RS485_DE", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" This function will run every time Blynk connection is established Request Blynk server to re-send latest values for all pins", "These are the interrupt and control pins These can be any two pins Use hardware SPI for the remaining pins On an UNO, SCK = 13, MISO = 12, and MOSI = 11 Security can be WLAN_SEC_UNSEC, WLAN_SEC_WEP, WLAN_SEC_WPA or WLAN_SEC_WPA2", "Emulate Serial1 on pins 6/7 if not present check for the WiFi module: don't continue waiting for connection to Wifi network set with the SetupWiFiConnection sketch", "Configure the PulseSensor manager. Now that everything is ready, start reading the PulseSensor signal. Flash the led to show things didn't work. write the latest sample to Serial.", "Default pin 10 to SS/CS IPAddress ip = webSocket.remoteIP(num); Serial.printf(\"[%u] Connected from %d.%d.%d.%d url: %s\\n\", num, ip[0], ip[1], ip[2], ip[3], payload); send message to client hexdump(payload, length);", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false For ESP32, To use ESP32 Dev Module, QIO, Flash 4MB/80MHz, Upload 921600", "Include the DHT11 library for interfacing with the sensor. Create an instance of the DHT11 class. - For Arduino: Connect the sensor to Digital I/O Pin 2. - For ESP32: Connect the sensor to pin GPIO2 or P2. - For ESP8266: Connect the sensor to GPIO2 or D4.", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "Use the MD_MAX72XX library to Print some text on the display while cycling through the hardware types. Easy way to determine what type of hardware is being used. Prints out the module type - the one that is legible is the type of hardware being used.", "Update these with values suitable for your network. IPAddress mqttServer(172, 16, 0, 2); Klugde to temporarily fix RP2040W WiFi.status() bug ( https: You can change longer or shorter depending on your network response Shorter => more responsive, but more ping traffic", "print the input retrieve the public key print the public key calculate the signature, input MUST be 32-byte array print the signature", "create a serial output stream ------------------------------------------------------------------------------ Wait for USB Serial initialize input string parse the string \"123 456 789\"", "Open serial communications and wait for port to open: wait for Serial Monitor to connect. Needed for native USB port boards only: open the file. note that only one file can be open at a time, so you have to close this one before opening another. if the file is available, write to it:", "include the library code: initialize the library by associating any needed LCD interface pin with the arduino pin number it is connected to make some custom characters: initialize LCD and set up the number of columns and rows:", "RS485Class RS485(Serial2, 26, 32, -1, -1); scan addr", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ENC28J60 & ESP32-S3 Optional values to override default settings", "Callback methods prototypes Tasks", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings make a SafeString to report a sensor reading: the reading's most significant digit is at position 16 in the sensorStr:", "INTERRUPT HANDLERS ------------------------------------------------------ Set up analog output ------------------------------------------ Serial.println(voiceLastReading);", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "no_description", "LIBRARIES SETTINGS base URL for SockJS (websocket) connection The complete URL will look something like this(cf. http: ws:", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "Adafruit Watchdog Library Sleep Example Simple example of how to do low power sleep with the watchdog timer. Author: Tony DiCola For boards with \"native\" USB support (e.g. not using an FTDI chip or similar serial bridge), Serial connection may be lost on sleep/wake,", "---------------------------- Standard Libraries ---------------------------- ---------------------------- Additional Libraries - each one of these will need to be installed.", "Arduino_Portenta_OTA_SD ota(SD_FATFS, 0);", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Use 1 decimal point Use 1 decimal point", "removed as extra libs are not included into travis #define USE_CLICK_ENCODER ST7735 1.8TFT 128x160 rotary encoder pins customizing a prompt look!", "Note: Must use Seeed_Arduino_mbedtls-dev Library version to avoid \"esp_system.h\" error send message to client send message to client send data to all connected clients webSocket.broadcastTXT(\"message here\");", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for WiFi connection", "FILE: DHT20_test_rp2040.ino AUTHOR: Rob Tillaart PURPOSE: Demo for DHT20 I2C humidity & temperature sensor URL: https: Always check datasheet - front view", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Enter a MAC address and IP address for your controller below.", "put your setup code here, to run once: put your main code here, to run repeatedly:", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our speaker Speaker device callbacks", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" This function sends Arduino's up time every second to Virtual Pin (5) You can send any value at any time.", "Emulate Serial1 on pins 6/7 if not present don't continue waiting for connection to Wifi network set with the SetupWiFiConnection sketch", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "include the library no need to configure pins, signals are routed to the radio internally set RF switch configuration for Nucleo WL55JC1 NOTE: other boards may be different! Some boards may not have either LP or HP.", "Initialize serial and wait for port to open: check for the presence of the shield: don't continue: attempt to connect to WiFi network: wait 10 seconds for connection:", "no_description", "A simple server implementation with regex routes: * serve static messages * read GET and POST parameters * handle missing pages / 404s Add buildflag ASYNCWEBSERVER_REGEX to enable the regex support", "######### IMPORTANT ! ######### The macro TINY_GSM_MODEM_SIM7600 should be defined in src/Config.h or user sefined config at src/UserConfig.h Set serial for debug console (to the Serial Monitor, default speed 115200) Set serial for AT commands (to the module) Use Hardware Serial on Mega, Leonardo, Micro", "while there's any characters coming back from the process, print them to the serial monitor:", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Debug console", "------------------------------------------------------------------------------ print error msg, any SD error codes, and halt. store messages in flash ------------------------------------------------------------------------------ Wait for USB Serial", "Listen to the default port 5555, the Yn webserver will forward there all the HTTP requests you send Bridge startup Listen for incoming connection only from localhost (no one from the external network could connect)", "To connect with SSL/TLS: 1) Change WiFiClient to WiFiSSLClient. 2) Change port value from 1883 to 8883. 3) Change broker value to a server with a known SSL/TLS root certificate flashed in the WiFi module.", "Initialize serial and wait for port to open: check for the presence of the shield: don't continue: attempt to connect to WiFi network: Connect to WPA/WPA2 network. Change this line if using open or WEP network:", "Include dependencies (libraries) Instantiate TMP117 class with id of one and debugging set to false Observation configuration Dynamic Variables Begin Serial Communications (Lunasat baud rate set to 9600)", "do NOT include the standard NeoPixel library use Adafruit_CPlay_NeoPixel to create a separate external NeoPixel strip initialize the Circuit Playground as usual this will initialize the onboard NeoPixels as well initialize external NeoPixel strip separately", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "This example downloads the URL \"http: Name of the server we want to connect to Path to download (this is the bit after the hostname in the URL that you want to download Number of milliseconds to wait without receiving any data before we give up", "Color definitions Buffers surrounding the plot area millisecond delay between samples Buffer for our plot data while (!Serial) yield();", "create a variable of type SpacebrewYun and initialize it with the constructor create variables to manage interval between each time we send a string start the serial port for debugging, wait until a serial console is connected start-up the bridge", "This example shows how to create registration tokens for iOS APNs tokens. Library allows your ESP device to interact with FCM server through FCM Server protocols. https: This means your device now is not a FCM app client and unable to get the notification messages. The device registration tokens used in this example were taken from the FCM mobile app (Android or iOS)", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG we use a struct to store all states and values for our dimmable switch setup function for WiFi connection set callback function to device", "time to play each tone in milliseconds enable optimized read - some cards may timeout Number of files. Files are 'touch tone phone' DTMF tones, P = #, S = * Most phones don't have A, B, C, and D tones.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our fan fanSpeed (1..3)", "BMP280_DEV - SPI Communications, Default Configuration, Normal Conversion bmp280.setPresOversampling(OVERSAMPLING_X4); bmp280.setTempOversampling(OVERSAMPLING_X1); bmp280.setIIRFilter(IIR_FILTER_4);", "Note, we're configuring an Analog input as digital input which is perfectly fine.  I did this to make the wiring easier and keep all of the wires on the same side of the board the input will read High (+5V) When the button is closed (pressed), the input pin", "while (!Serial) delay(10); Start TFT and fill black Turn on backlight Display the results (acceleration is measured in m/s^2) Read light sensor", "To use the default WiFi library here Deprecated echo.websocket.org to be replaced To run a local WebSocket Server send message to server when Connected send message to server", "This example shows how to retrieve all database data using shallowed data. Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Define Firebase Data object", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console Blynk will work through Serial Do not read or write this serial manually in your sketch", "Print a list of error codes, symbols, and comments.", "set up the LCD's number of columns and rows: Print a message to the LCD. set the cursor to column 0, line 1 (note: line 1 is the second row, since counting begins with 0): print the number of seconds since reset:", "Serial.print(\"X Raw: \"); Serial.print(accel.raw.x); Serial.print(\"  \"); Serial.print(\"Y Raw: \"); Serial.print(accel.raw.y); Serial.print(\"  \"); Serial.print(\"Z Raw: \"); Serial.print(accel.raw.z); Serial.println(\"\");", "Just a trivial exercise on creating and printing of IrSignal", "Credits of [Miguel Alexandre Wisintainer](https: For some STM32, there is only definition of Serial in variant.h, and is used for Serial/USB Debugging For example, in Nucleo-144 F767ZI original variant.h #define SERIAL_PORT_MONITOR     Serial #define SERIAL_PORT_HARDWARE    Serial", "Check the timer callback, this function is called every millisecond! while (!Serial); Read light sensor Read battery Read the 2 Stemma connectors (these are not in ARCADA because they're external hardware)", "Dial Tone (DTMF) decoding example. The audio with dial tones is connected to analog input A2, without using the audio shield.  See the \"DialTone_DTMF\" example for using the audio shield. This example code is in the public domain.", "#define EEPROM_EMULATION_SIZE     (4 * 1024) Use 0-2. Larger for more debugging messages To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error start reading from the first byte (address 0) of the EEPROM read a byte from the current address of the EEPROM", "#define MQTT_HOST         IPAddress(192, 168, 2, 110) ensure we don't reconnect to MQTT when no ETH ensure we don't reconnect to MQTT when no ETH ensure we don't reconnect to MQTT when no ETH To be called before ETH.begin()", "This is the place to gather the sensor inputs Instead of reading any real sensor, we just generate some random numbers as example Build payload byte array Perform an uplink Check if a downlink was received", "SPDX-FileCopyrightText: (c) 2023-2024 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later RandomNumbers demonstrates how to use random number distributions and engines using the included entropy functions. See also:", "Create a BridgeClient instance to communicate using the Yun's bridge & Linux OS. Setup the MQTT client class by passing in the WiFi client and MQTT server and login details. Setup a feed called 'photocell' for publishing. Notice MQTT paths for AIO follow the form: <username>/feeds/<feedname> Setup a feed called 'onoff' for subscribing to changes.", "your code can be here", "SPDX-FileCopyrightText: (c) 2021-2023 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later OSCPrinter prints received OSC messages. It uses the well-known OSC port 8000 and advertises an OSC mDNS service on that port. To see messages, discover this example using a program such as", "    9600. : q<> -    (: q0, q50, q90) w - stop() e - brake() motor.reverse(1);", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Use 1 decimal point Use 1 decimal point", "Adafruit_BME680 bme(BME_CS); Adafruit_BME680 bme(BME_CS, BME_MOSI, BME_MISO,  BME_SCK); by default, we'll generate the high voltage from the 3.3v line internally! (neat!) init done Set up oversampling and filter initialization", "Read a two dimensional array from a CSV file. 5 X 4 array Delete CR. ------------------------------------------------------------------------------ ------------------------------------------------------------------------------", "reconstruct the self signed cert Set a callback to get the current time used to validate the servers certificate Set the ECCX08 slot to use for the private key and the accompanying public certificate for it", "Adafruit_ImageReader test for Adafruit ST7789 320x240 TFT Breakout for Arduino. Demonstrates loading images to the screen, to RAM, and how to query image file dimensions. Requires three BMP files in root directory of SD card: parrot.bmp, miniwoof.bmp and wales.bmp.", "libraries modem verification object IMEI variable initialize serial communications and wait for port to open: start modem test (reset and check response)", "Panasonic Plasma TV Descrete code (Power On). Acquired from: https: e.g. 0000 006D 0000 0022 00ac 00ac 0016 0040 0016 0040 0016 0040 0016 0015 0016", "no_description", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Docs.resetApp(); In case setting the external async result to the sync task (optional)", "read the command is \"digital\" command? Read pin number If the next character is a '/' it means we have an URL with a value like: \"/digital/13/1\"", "Display the settings. Display the encoded IR sequence. Set up what we want to send. See ir_MitsubishiHeavy.(cpp|h) for all the options. Now send the IR signal.", "create 4 encoders! create 4 encoder pixels wait for serial port to open See if we can find encoders on this address use a pin for the built in encoder switch", "put your setup code here, to run once: wm.resetSettings(); ESP.restart(); wm.resetSettings();", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. isButtonPressed = !digitalRead(BUTTON_PIN);", "Construct object, Embryo(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency) put your setup code here, to run once: interruptions pins and configures endstops as OUTPUT Use this function only with the motor outside the axis put your main code here, to run repeatedly:", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. #define USE_SIMULATION    false", "the on off button feed turns this LED on/off the slider feed sets the PWM output of this pin Create an ESP8266 WiFiClient class to connect to the MQTT server. or... use WiFiFlientSecure for SSL WiFiClientSecure client;", "USBHost is defined in usbh_helper.h HID report descriptor using TinyUSB's template Single Report (no ID) descriptor USB HID object. For ESP32 these values cannot be changed after this declaration desc report, desc len, protocol, interval, use out endpoint", "CS5490 line(MCLK_default); Initializing communication with CS5490 600 is the default baud rate velocity. Initializing communication arduino/PC to show results in Monitor Serial wait for serial port to connect. Needed for Leonardo only", "Initialize RF Object Flag to indicate that a packet was received Disable interrupt when it's not needed Assemble LunaSat Packet Assemble LunaSat Packet", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for setupEthernet connection ETHERNET_USE_RPIPICO, use default SS = 5 or 17", "Emulate Serial1 on pins 6/7 if not present we can't expect a readable answer over SoftwareSerial at 115200", "no_description", "server config 0 <= percentage <= 100 WiFi.setAutoConnect(true); flash twice to know that we are trying to connect to the WiFi wait for connection", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Ported to ESP32", "Blink sequence number Declare it volatile since it's incremented inside an interrupt Pin used to trigger a wakeup How sensitive to be to changes in voltage Read the voltage at the ADC pin", "Try to read 32 bytes read a register by writing first, then reading", "scan addr", "declare 3D sensor instances default ADC range is -32768 to 32767 (16 bit) Update function should be continuously polled print gyroscope/acceleration data once every second", "dnsServer.processNextRequest();", "BlockingMillisDelay see the tutorial https: Pin 13 has an LED connected on most Arduino boards. if using Arduino IDE 1.5 or above you can use pre-defined LED_BUILTIN  instead of 'led'", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield The IP address will be dependent on your local network: Initialize serial and wait for port to open: start the Ethernet connection and the server:", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. isButtonPressed = !digitalRead(BUTTON_PIN);", "Note that the actual MDNS name will have '.local' after the name above, so \"wifi101\" will be accessible on the MDNS name \"wifi101.local\". Create a MDNS responder to listen and respond to MDNS name requests. Initialize serial and wait for port to open:", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. #define USE_SIMULATION    false", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings startsWith() checks to see if a SafeString starts with a particular substring:", "These are the interrupt and control pins These can be any two pins Use hardware SPI for the remaining pins On an UNO, SCK = 13, MISO = 12, and MOSI = 11 The SSID & Password are retrieved via the Smartconfig app", "Example of non-blocking reading of DS18B20 temperature sensor read the actual temperature after it's been converted do what you need with the temperature here start temperature conversion (does not block) schedule reading the actual temperature in 750 milliseconds", "#define USE_WROVER_BOARD This handles the network and cloud connection", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP Optional values to override default settings", "Two buttons are pullups, connect to ground to activate Two LEDs are outputs, on by default", "no_description", "no_description", "default number of output channels default PCM output frequency Buffer to read samples into, each sample is 16-bits Number of audio samples read Configure the data receive callback", "Note: Set Serial Monitor to \"Newline\" for TelekomDesign TD1208 Sigfox device THiNX::forceHTTP = true; disable HTTPS to speed-up checkin in development API Key, Owner ID Pad with zero Always call the loop or THiNX will not happen (there's callback available, see library example)", "----------------------------------------------------------------------------- case ANALOG: TODO: save status to EEPROM here, if changed 0xFF03 == B1111111100000011    0x03 == B00000011 -----------------------------------------------------------------------------", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Use 1 decimal point Use 1 decimal point", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for setupEthernet connection", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards IPAddress ip = webSocket.remoteIP(num);", "Quad channel output test Play two WAV files on two audio shields. TODO: add info about required hardware connections here.... Data files to put on your SD card can be downloaded here: http:", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for WiFi connection", "This example shows how to make a simple synth out of an Arduino, using the tone() function. It also outputs a gate signal for controlling external analog synth components (like envelopes). ----------------------------------------------------------------------------- -----------------------------------------------------------------------------", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Select the IP address according to your local network Google DNS Server IP LOCK_PIN where the lock is connected to: HIGH = locked, LOW = unlocked", "Required for Serial on Zero based boards For botletics SIM70X0 shield #define DTR 8 #define RI 9 #define T_ALERT 12", "Start serial Print length of data to run CRC on. Print the result of calling eeprom_crc()", "efont need efont to run this example. URL : https: include Include a header corresponding to the character set used.", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Select the Server's IP address according to your local network join default namespace (no auto join in Socket.IO V3) hexdump(payload, length);", "FirstDamperControl.ino Only one call to runStepper() task in the loop(); install SafeString library from Library manager or from https: the loopTimer, BufferedOutput, SafeStringReader and millisDelay are all included in SafeString library V3+ Use software SPI: CS, DI, DO, CLK", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define deviceIds in an array go through the devices", "SPDX-FileCopyrightText: (c) 2023 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later LinkWatcher is a simple application that watches the link state using a listener. It doesn't try to set an address. This file is part of the QNEthernet library.", "Check connection every 1s #define MQTT_HOST         IPAddress(192, 168, 2, 110) Repeat forever, millis() resolution Ethernet.maintain(); Start the Ethernet connection, using DHCP", "Initialize serial and wait for port to open: check for the presence of the shield: don't continue: attempt to connect to WiFi network: Connect to WPA/WPA2 network:", "   GyverMotor       : AccelMotor motor(DRIVER2WIRE, dig_pin, PWM_pin, level) AccelMotor motor(DRIVER3WIRE, dig_pin_A, dig_pin_B, PWM_pin, level) AccelMotor motor(RELAY2WIRE, dig_pin_A, dig_pin_B, level)", "SD chip select pin number of lines to print file system test file Serial output stream", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "Only to deal with ESP8266 core v3.0.0 warning in Ticker library Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change. report status to Blynk Debug console From v1.0.5", "Default pin 10 to SS/CS SSL not working here yet. Deprecated echo.websocket.org to be replaced To run a local WebSocket Server send message to server when Connected", "open the serial port: initialize control over the keyboard: check for incoming serial data: read incoming serial data: Type the next ASCII value from what you received:", "begin initialization set the discovered event handle start scanning for peripherals with duplicates poll the central for events discovered a peripheral", "reset and try again, or maybe put it to deep sleep if you get here you have connected to the WiFi", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Initialize DHT sensor. Note that older versions of this library took an optional third parameter to", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Database.resetApp(); In case setting the external async result to the sync task (optional)", "For scope, instantiate all objects you will need to access in loop() It may be just one Fuzzy, but for demonstration, this sample will print all FuzzySet pertinence Fuzzy FuzzyInput", "Circuit Playground Birthday Candles All the NeoPixels will flicker like candles and the speaker will play the tune to Happy Birthday continuously.  Blow on the board to slowly blow out all the candles and hear a victory song! Controls:", "no_description", "DNS server Web server If captive portal redirect instead of displaying the page. Redirect to captive portal if we got a request for another domain. Return true in that case so the page handler do not try to handle the request again.", "include the library RF69 has the following connections: CS pin:    10 DIO0 pin:  2 RESET pin: 3", "include the library SX1280 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "while (!Serial); Show image buffer on the display hardware. Since the buffer is intialized with an Adafruit splashscreen internally, this will display the splashscreen. Clear the buffer.", "Initialize sensor Setup to sense up to 18 inches, max LED brightness particleSensor.setup();", "You can use Ethernet.init(pin) to configure the CS pin Ethernet.init(10); Ethernet.init(5); Ethernet.init(0); Ethernet.init(20);", "send reply connects to access point", "| cayenne button | cayenne temp sensor   | node.joinABP(devAddr, nwkSessionKey, appSessionKey); register callback for incoming messages begin initialization debounce button to send the frame just once at pressure", "Joystick Colors Variables Event Handlers Screens functions", "On ESP8266: Runs up to 115200bps at 80MHz, 250000bps at 160MHz, with nearly zero errors. This example is currently not ported to ESP32, which is based on FreeRTOS. Becomes set from ISR / IRQ callback function. Only half duplex this way, but reliable TX timings for high bps", "Adafruit_ImageReader test for Adafruit E-Ink Breakouts. Demonstrates loading images from SD card or flash memory to the screen, to RAM, and how to query image file dimensions. Requires BMP file in root directory of QSPI Flash: blinka.bmp.", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- Normal callbacks - always available", "print the SSID of the network you're attached to: you're connected now, so print out the data print the received signal strength: initialize serial for ESP module initialize ESP module", "Open serial communications and wait for port to open: wait for serial port to connect. Needed for Leonardo only set the data rate for the SoftwareSerial port Wait for 3 bytes to arrive Read 3 byte information", "To eliminate FW warning when using not latest nina-fw version To use whenever WiFi101-FirmwareUpdater-Plugin is not sync'ed with nina-fw version #define WIFI_FIRMWARE_LATEST_VERSION        \"1.4.8\" Initialize serial and wait for port to open: Print a welcome message", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Configures GSM modem model. Must be done before including TinyGsmClient library. Settings Configures the Keybus interface with the specified pins - dscWritePin is optional, leaving it out disables the", "include CanSatKit library used for pressure sensor BMP280 is a pressure sensor, create the sensor object use begin() function to check if sensor is conneted and is able to communicate with the CanSat board if connection failed - print message to the user", "Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "initialize serial and wait for port to open: Initilaize using AT24CXX(i2c_address, size of eeprom in KB). Print Msg When Completed.", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 debounce contact state transitions (same as debouncing a pushbutton) if state has changed", "Passing in FAHRENHEIT as the unit parameter to ENV.readTemperature(...), PSI to readPressure(...) and FOOTCANDLE to readIlluminance(...) allows you to read the sensor values in imperial units print each of the sensor values print an empty line", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Turn LED on, so colors are visible V3 LED Widget is blinking", "set the framerate of the game at 60 fps Initializes ATMSynth and samplerate Begin playback of song. Lower the tempo ever so slightly", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set. Large data transmission may require larger RX buffer, otherwise connection issue or data read time out can be occurred.", "These are the interrupt and control pins These can be any two pins Use hardware SPI for the remaining pins On an UNO, SCK = 13, MISO = 12, and MOSI = 11 Security can be WLAN_SEC_UNSEC, WLAN_SEC_WEP, WLAN_SEC_WPA or WLAN_SEC_WPA2", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our speaker Speaker device callbacks", "#define USE_NODE_MCU_BOARD #define USE_WITTY_CLOUD_BOARD #define USE_CUSTOM_BOARD see \"Custom board configuration\" in Settings.h This handles the network and cloud connection", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for setupEthernet connection", "SPDX-FileCopyrightText: (c) 2021-2024 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later SNTPClient demonstrates a simple SNTP client. See: https: This file is part of the QNEthernet library.", "Wifi network station credentials Telegram BOT Token (Get from Botfather) You can't use own message, just choose from one of bellow typing for text messages upload_photo for photos", "Set a callback to get the current time used to validate the servers certificate Set the ECCX08 slot to use for the private key and the accompanying public certificate for it Optional, set the client id used for MQTT,", "Open serial communications and wait for port to open: start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip);", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Select the IP address according to your local network", "#if defined(ARDUINO_SAMD_ZERO) || defined(ARDUINO_SAMD_MKR1000) ||             \\ defined(ARDUINO_ARCH_SAMD) Create a WiFiClient class to connect to the MQTT server You have to get from a sensor. Here is just an example Serial.println(F(\"Failed to send value to Temperature feed!\"));", "no_description", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Debug console", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 163), 8080);", "join default namespace (no auto join in Socket.IO V3) USE_SERIAL.begin(921600); Serial.setDebugOutput(true); disable AP WiFi.disconnect();", "Construct object, StepMotor(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency Stop Button) Clears the trigPin condition Sets the trigPin HIGH (ACTIVE) for 10 microseconds Reads the echoPin, returns the sound wave travel time in microseconds Calculating the distance", "no_description", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3", "Required for Serial on Zero based boards Define *one* of the following lines: #define SIMCOM_2G #define SIMCOM_3G #define SIMCOM_7070", "request->addInterestingHeader(\"ANY\"); your other setup stuff... more handlers...", "Initialize RF Object flag to indicate that a packet was received disable interrupt when it's not needed dDn't set flag if interrupt isn't enabled Set flag signifying message was recieved", "Callback methods prototypes Tasks Tasks running on events Replace with WiFi parameters of your Access Point/Router: NTP Related Definitions", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "SafeStringReader_Cmds.ino Example of NON-Blocking read commmands from the Arduino Monitor input and acts on them the available commands are start stop See the SafeStringReader_CmdsTimed.ino for an example using a struct to hold the commands and their functions Commands are delimited by space dot comma NL or CR", "USBHost is defined in usbh_helper.h HID report descriptor using TinyUSB's template Single Report (no ID) descriptor USB HID object. For ESP32 these values cannot be changed after this declaration desc report, desc len, protocol, interval, use out endpoint", "This example shows how to create the spreadsheet, update and read the values. For SD/SD_MMC mounting helper For how to create Service Account and how to use the library, go to https: Service Account's client email Your email to share access to spreadsheet", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "PMIC.debug(Serial);", "For ESP8266, change for other boards if necessary For ESP8266 Pin                D0(GPIO16)    D1(GPIO5)    D2(GPIO4)    D3(GPIO0)    D4(GPIO2)    D8 Ethernet_Generic   X                 X            X            X            X        0 D2 is safe to used for Ethernet_Generic libs", "no_description", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "include the EduIntro library initialize serial communications at 9600 bps initialize the IMU, if failed, stay here read all data from the IMU and store it in local variables print the collected data in a row on the Serial Monitor", "Debug Level from 0 to 4 LittleFS has higher priority than SPIFFS For core v1.0.6-, ESP32-C3 only supporting SPIFFS and EEPROM. To use v2.0.0+ for LittleFS Use LittleFS Check cores/esp32/esp_arduino_version.h and cores/esp32/core_version.h", "Program to exercise the MD_MAX72XX library Test the library transformation functions Use a button to transfer between transformations or just do it on a timer basis We always wait a bit between updates of the display Number of times to repeat the transformation animations", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "StreamUtils - github.com/bblanchon/ArduinoStreamUtils Copyright Benoit Blanchon 2019-2024 MIT License This example shows how to use StringStream Initialize serial port", "Blink sequence number Declare it volatile since it's incremented inside an interrupt Pin used to trigger a wakeup Set pin 8 as INPUT_PULLUP to avoid spurious wakeup Attach a wakeup interrupt on pin 8, calling repetitionsIncrease when the device is woken up", "camera settings replace with your own model! init camera init SPIFFS await for \"capture\" from the Serial Monitor", "no_description", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "debug port", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" This function will run every time Blynk connection is established get data stored in virtual pin V0 from server", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Deprecated echo.websocket.org to be replaced", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Enter a MAC address and IP address for your controller below.", "For Teensy 4.1 Use true for NativeEthernet Library, false if using other Ethernet libraries Only one of the following to be true. Only one of the following to be true. Enter a MAC address and IP address for your controller below.", "Declaration for an SSD1306 display connected to I2C (SDA, SCL pins) The pins for I2C are defined by the Wire-library. On an arduino UNO:       A4(SDA), A5(SCL) On an arduino MEGA 2560: 20(SDA), 21(SCL) On an arduino LEONARDO:   2(SDA),  3(SCL), ...", "A non-blocking everyday NeoPixel strip test program. NEOPIXEL BEST PRACTICES for most reliable operation: - Add 1000 uF CAPACITOR between NeoPixel strip's + and - connections. - MINIMIZE WIRING LENGTH between microcontroller board and first pixel. - NeoPixel strip's DATA-IN should pass through a 300-500 OHM RESISTOR.", "Emulate Serial1 on pins 6/7 if not present Initialize serial and wait for port to open: check for the WiFi module: don't continue waiting for connection to Wifi network set with the SetupWiFiConnection sketch", "OLED FeatherWing buttons map to different pins depending on board: Show image buffer on the display hardware. Since the buffer is intialized with an Adafruit splashscreen internally, this will display the splashscreen. Clear the buffer.", "This example show the temperature. LIS.closeTemp(); LIS.setFullScaleRange(LIS3DHTR_RANGE_2G); LIS.setFullScaleRange(LIS3DHTR_RANGE_4G); LIS.setFullScaleRange(LIS3DHTR_RANGE_8G);", "#include <Wire.h> the pin that is connected to SQW initializing the rtc this will adjust to the date and time at compilation we don't need the 32K Pin, so disable it", "A UDP instance to let us send and receive packets over UDP Open serial communications and wait for port to open: check for the presence of the shield: don't continue: attempt to connect to WiFi network:", "Level from 0-4 300s = 5 minutes to not flooding 10s Seconds for timeout, default is 3s Uncomment for certain HTTP site to optimize", "#define EEPROM_EMULATION_SIZE     (4 * 1024) Use 0-2. Larger for more debugging messages To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error initialize the LED pin as an output. The time spent can be very short (5-25ms) if the EEPROM is not dirty.", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Input a value 0 to 255 to get a color value. The colours are a transition r - g - b - back to r.", "   GyverMotor       : AccelMotor motor(DRIVER2WIRE, dig_pin, PWM_pin, level) AccelMotor motor(DRIVER3WIRE, dig_pin_A, dig_pin_B, PWM_pin, level) AccelMotor motor(RELAY2WIRE, dig_pin_A, dig_pin_B, level)", "DCCEXProtocol_Serial Shows how to use DCCEXProtocol over serial using a Mega2560 This uses a Mega2560 (or other AVR device) that has a second hardware serial port (Serial1) Tested with Arduino Mega2560 Peter Cole (PeteGSX) 2024", "do one analogRead per loop, so if PC is sending a lot of analog write messages, we will only delay 1 analogRead", "FILE: uvi_color.ino AUTHOR: Rob Tillaart PURPOSE: demo UV sensor URL: https: -- END OF FILE --", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Choose wifi_sec from WPA2, WPA, or WEP", "boolean", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Default is 30s, using 20s now", "Default pin 10 to SS/CS Select the IP address according to your local network Select the IP address according to your local network join default namespace (no auto join in Socket.IO V3) hexdump(payload, length);", "no_description", "BLYNK_TEMPLATE_ID & BLYNK_DEVICE_NAME can be commented if you wish to use old blynk uncomment this if using Serial for ESP #define EspSerial Serial comment this if using Serial for ESP or Software Serial on Uno, Nano...", "variables for button configure the button pin as input initialize the Bluetooth Low Energy hardware start scanning for peripherals check if a peripheral has been discovered", "no_description", "#define HARDWARE_GENERATED_CLOCK Be sure to use the correct pin numbers for your setup. Note that on ATmega328: 17=A3, 16=A2, 15=A1, 14=A0 DA7, DA6, DA5, DA4, DA3, DA2, DA1, DA0, BDIR, BC2, BC1 Write the data at a rate of 50 Hz <-> every 20000 us", "libraries Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number APN data initialize the library instance", "enqueue button press dequeueing every 2 seconds", "initialize digital pin LED_BUILTIN as an output. DIY", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Define Firebase Data object Or custom set the root certificate for each FirebaseData object", "Create rgb object init library all pixels off red pixel on green pixel on", "Find out how many items there are in the string. Now we know how many there are, allocate the memory to store them all. Check we malloc'ed successfully. Now convert the strings to integers and place them in code_array. initialize serial:", "Use the MD_MAX72XX library to Display a Scrolling Chart Scroll Chart Style can be changed from line to bar chart, triggered by a switch on the MODE_SWITCH pin. Uses the MD_UIswitch library found at https: --------------------", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ENC28J60 & ESP32-S3 Optional values to override default settings", "send message to server when Connected send message to server webSocket.sendTXT(\"message here\"); send data to server webSocket.sendBIN(payload, length);", "Definities Aantal rijen displays (Voor de A-Vision ESP8266 learning board is dat 1) Aantal kolommen displays (Voor de A-Vision ESP8266 learning board is dat 1) Gebruikte display type (Voor de A-Vision ESP8266 learning board is dat MD_MAX72XX::PAROLA_HW) https:", "Select your modem: #define TINY_GSM_MODEM_SIM808 #define TINY_GSM_MODEM_SIM868 #define TINY_GSM_MODEM_SIM900 #define TINY_GSM_MODEM_SIM7000", "Adapted from code fragment in the README.md in https: ---------------------------------------------------------------------------- setup() and loop() ----------------------------------------------------------------------------", "Debug Level from 0 to 4 Select the IP address according to your local network Google DNS Server IP Using this if Serial debugging is not necessary or not using Serial port while (!Serial && (millis() < 3000));", "Start TFT and fill black Turn on backlight tft.drawPixel(x, y, (n * 29)<<8 | (n * 67)); Input a value 0 to 255 to get a color value. The colours are a transition r - g - b - back to r.", "To use faster 25MHz clock instead of defaulf 14MHz. Only for W5200 and W5500. W5100 also tested OK. #define USE_W5100     false #define USE_ETHERNET_WRAPPER    false Use true  for ENC28J60 and UIPEthernet library (https: Use false for W5x00 and Ethernetx library      (https:", "Use from 0 to 4. Higher number, more debugging messages and memory usage. SSID and PW for Config Portal SSID and PW for Config Portal SSID and PW for your Router From v1.0.10, WPA2 passwords can be up to 63 characters long.", "Advanced Microcontroller-based Audio Workshop http: https: Part 3-3: Add a TFT Display copy the Design Tool code here", "no_description", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 is button pressed (inverted logic! button pressed = LOW) and debounced? flip myPowerState: if it was true, set it to false, vice versa", "Declare our NeoPixel strip object: Argument 1 = Number of pixels in NeoPixel strip Argument 2 = Arduino pin number (most are valid) Argument 3 = Pixel type flags, add together as needed: NEO_KHZ800  800 KHz bitstream (most NeoPixel products w/WS2812 LEDs)", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP Optional values to override default settings", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip); Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "Definities Definieer op welke Digitale ingang de drukknoppen zijn aangesloten https: LED posities - [0] [1] [2] [3]", "no_description", "Copyright (c) 2021 Cesanta Software Limited All rights reserved This Arduino sketch demonstrates \"elk\" JavaScript library integration: 1. Edit `ssid` and `pass` variables below 2. Flash this sketch to your ESP32 board", "only send the data when it changes, otherwise you get too many messages!", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct for the std::map below this is the main configuration", "do nothing ignore", "Deprecated echo.websocket.org to be replaced To run a local WebSocket Server KH sendTXTMessage every SEND_INTERVAL (30) seconds. webSocket.sendTXT(\"message here\");", "no_description", "Modified from code of https: Posted in https: client->text(\"Hello from RP2040W Server\"); error was received from the other end pong message was received (in response to a ping request maybe)", "RawHardwareTest - Check if a SPI Flash chip is compatible with SerialFlash by performing many read and write tests to its memory. The chip should be fully erased before running this test. Use the EraseEverything to do a (slow) full chip erase.", "Initialize serial and wait for port to open: check for the WiFi module: don't continue attempt to connect to Wifi network: Connect to WPA/WPA2 network:", "set radio receiver parameters - see comments below remember to set the same radio parameters in transmitter and receiver boards! start radio module prepare empty space for received frame", "Feather RP2040 ThinkInk Adafruit_IL0373 display(152, 152, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY, EPD_SPI); Adafruit_SSD1608 display(200, 200, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY, EPD_SPI);", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our dimmable switch setup function for setupEthernet connection", "Test software to map display hardware rows and columns Generic SPI interface and only one MAX72xx/8x8 LED module required Does not use any libraries as the code is used to directly map the display orientation Observe the display and relate it to the MAX7219 hardware being exercised through the instructions and output on the serial monitor.", "Can be included as many times as necessary, without `Multiple Definitions` Linker Error start reading from the first byte (address 0) of the FlashStorage read a byte from the current address of the FlashStorage", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip); read the status code and body of the response", "For SD/SD_MMC mounting helper In case SD/SD_MMC storage file access, mount the SD/SD_MMC card. SD_Card_Mounting(); Set the callback for Google API access token generation status (for debug only) The WiFi credentials are required for Pico W", "no_description", "no_description", "Update these with values suitable for your network. const char* mqttServer = \"broker.example\"; const char* mqttServer = \"broker.shiftr.io\"; IPAddress mqttServer(172, 16, 0, 2); Loop until we're reconnected", "const int FlashChipSelect = 21; uncomment these if using Teensy audio shield SPI.setSCK(14); SPI.setMOSI(7); uncomment these if you have other SPI chips connected", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ENC28J60 & ESP32-S3 Optional values to override default settings", "To use for Y_Coordinate Coordinates to display \"WIFI\", \"Sinric\", \"Device1\", etc. this is the main configuration please put in your deviceId, the PIN for Relay and PIN for flipSwitch this can be up to N devices...depending on how much pin's available on your device ;)", "Use the MD_MAX72XX library to scroll text on the display received through the ESP32 WiFi interface. Demonstrates the use of the callback function to control what is scrolled on the display text. User can enter text through a web browser and this will display as a scrolling message on", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Read and send Sensor data every SENSOR_CHECK_INTERVAL (10) seconds", "include the library RF69 has the following connections: CS pin:    10 DIO0 pin:  2 RESET pin: 3", "Button statuses ISR: count the button taps ISR: keep elapsed timings ISR: Final button status Wait for Serial Monitor for timeout ms", "no_description", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "#define RS485_RE RS485_DE", "no_description", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "#include \"utility/NetTime.h\" These are the interrupt and control pins These can be any two pins Use hardware SPI for the remaining pins On an UNO, SCK = 13, MISO = 12, and MOSI = 11", "include the library LR1110 has the following connections: NSS pin:   10 IRQ pin:   2 NRST pin:  3", "no_description", "Create new LCD03 instance Initialise a 20x4 LCD Check they keypad state once a second and print to the LCD Clear the display and move the cursor to the top-left Read the keypad state", "Wait for Serial Monitor or start after 2.5s Init IRQ INPUT pins Attach callbacks to IRQ pins Check for received IRQ every second.", "init Ciao and LCD Read file from lininoOS extract data from Ciao Print message via serial Delay the operations because IO is slow", "Select the IP address according to your local network Google DNS Server IP SKETCH BEGIN the whole message is in a single frame and we got all of it's data message is comprised of multiple frames or the frame is split into multiple packets", "include the library SX1231 has the following connections: CS pin:    10 DIO0 pin:  2 RESET pin: 3", "define pin data", "Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change. report status to Blynk Debug console From v1.0.5 Set config portal SSID and Password", "no_description", "wait 1 second for the reply from EspSoftwareSerial if any high speed half duplex, turn off interrupts during tx high speed half duplex, turn off interrupts during tx", "Use the MD_MAX72XX library to Print some text on the display Demonstrates the use of the library to print text. User can enter text on the serial monitor and this will display as a message on the display. Define the number of devices we have in the chain and the hardware interface", "This example uses the tone() function, some restrictions apply. https: Tested on AVR, Teensy 3.1 and Teensy 4.1 ToneTicker can only work with StepperDriver", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song. test", "include the library code: initialize the library by associating any needed LCD interface pin with the arduino pin number it is connected to set up the LCD's number of columns and rows: set the cursor to (0,0):", "Your board <-> ESP_AT baud rate: initialize serial for ESP module", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings", "On ESP8266: Local EspSoftwareSerial loopback, connect D5 (rx) and D6 (tx). For local hardware loopback, connect D5 to D8 (tx), D6 to D7 (rx). For hardware send/sink, connect D7 (rx) and D8 (tx). Hint: The logger is run at 9600bps such that enableIntTx(true) can remain unchanged. Blocking", "#define HARDWARE_GENERATED_CLOCK Be sure to use the correct pin numbers for your setup. Note that on ATmega328: 17=A3, 16=A2, 15=A1, 14=A0 DA7, DA6, DA5, DA4, DA3, DA2, DA1, DA0, BDIR, BC2, BC1 Write the data at a rate of 50 Hz <-> every 20000 us", "Check the timer callback, this function is called every millisecond! while (!Serial); Serial.printf(\"lite = %d\\n\", i); Serial.printf(\"color fills\"); arcada.writeFileToFlash(\"test.txt\");", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "SerialDEBUG->begin(DEBUG_BAUD, SERIAL_8N1, SERIAL_TX_ONLY); digitalWrite(DEVICE_PIN_BUTTON_OUTPUT, DEVICE_PIN_BUTTON_DEFSTATE); ESP.deepSleep(300000000); define node \"relay\" subscribe listen", "Colors Sets the initial angle for the motors Check if the Joystick Left is pressed Check if the Joystick Right is pressed", "no_description", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Enter a MAC address and IP address for your controller below.", "include the library SX1262 has the following connections: NSS pin:   10 IRQ pin:   2 NRST pin:  3", "You could use a spare Hardware Serial on boards that have it (like Mega) You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console Blynk will work through Serial", "Touch screen library with X Y and Z (pressure) readings as well as oversampling to avoid 'bouncing' This demo code returns raw readings, public domain These are the pins for the shield! For better pressure precision, we need to know the resistance", "Sends Rc5 0/1 twice with different toggle values. Turns e.g. a Philips TV to channel 11.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for WiFi connection", "Globals, used for compatibility with Arduino-style sketches. An area of memory to use for input, output, and intermediate arrays. The name of this function is important for Arduino compatibility. Set up logging. Google style is to avoid globals or statics because of lifetime uncertainty, but since this has a trivial destructor it's okay.", "include the library LR1110 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "Program to exercise the MD_MAX72XX library Uses a sequence of bitmaps defined as a font to display animations of eyes to convey emotion. Eyes are coordinated to work together. NOTE: These pin numbers will probably not work with your hardware and may need to be adapted", "print  drawString  drawString XY drawNumber  drawFloat XY print setCursor (print)", "<<<<<<<<<<<<<<<<<<<<<<<<<< Setup >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> <<<<<<<<<<<<<<<<<<<<<<<<<<<< Loop >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>", "Replace with your network credentials Sets the trigPin on HIGH state for 10 micro seconds Reads the echoPin, returns the sound wave travel time in microseconds Calculate the distance Prints the distance in the Serial Monitor", "Delete demo files Write demo data to file Print the demo data to file. No matter what the separation between each JSON object or array is, it can be space, new line or nothing No matter what JSON data separation is newline or any.", "Basic demo for accelerometer/gyro readings from Adafruit LSM6DS33 For SPI mode, we need a CS pin For software-SPI mode we need SCK/MOSI/MISO pins if (!lsm6ds33.begin_SPI(LSM_CS)) { if (!lsm6ds33.begin_SPI(LSM_CS, LSM_SCK, LSM_MISO, LSM_MOSI)) {", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. To get the authentication time to live in seconds before expired. app.ttl(); Blocking authentication handler with timeout", "Make an instance of MicroGamer used for many functions Variables for your game go here. Width of each charcter including inter-character space Height of each charater To get the number of characters, we subtract 1 from the length of", "Sensor Includes Sensor Initializations Sensor Data Variable Initialization Initialize RF Object Standard V4 Lunasat I2C Sensors", "include the utility function for ths sketch see the details below necessary initialization sequence show the logos from the SD card clear the screen", "initialize the robot initialize the sound speaker", "Include the library Pin definition Create one motor instance Used to display information Wait for Serial Monitor to be opened", "no_description", "no_description", "When OTA is available, stay there until it completes. The rest of the loop() does not run and the sketch restarts automatically at the end of the OTA process.", "SPDX-FileCopyrightText: (c) 2021-2023 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later FixedWidthServer demonstrates how to serve a protocol having a continuous stream of fixed-size messages from multiple clients. This file is part of the QNEthernet library.", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "Configure the PulseSensor manager. Flash the led to show things didn't work. write the latest sample to Serial.", "An example of an external SPI driver. SD chip select pin. This is a simple driver based on the the standard SPI.h library. You can write a driver entirely independent of SPI.h. It can be optimized for your board or a different SPI port can be used.", "Wait until a Serial Monitor is connected. This command line runs the WifiStatus script, (/usr/bin/pretty-wifi-info.lua), then sends the result to the grep command to look for a line containing the word \"Signal:\"  the result is passed to this sketch: do nothing until the process finishes, so you get the whole output:", "Try to connect to a wifi network Give the ESP some time to connect if input state has changed store the new state in the server Make sure `put` was successful", "#define _TASK_TIMECRITICAL #define _TASK_STATUS_REQUEST #define _TASK_WDT_IDS #define _TASK_LTS_POINTER #define _TASK_SLEEP_ON_IDLE_RUN", "OPTION 1 (recommended) is to use the HARDWARE SPI pins, which are unique to each board and not reassignable. OPTION 2 lets you interface the display using ANY TWO or THREE PINS, tradeoff being that performance is not as fast as hardware SPI above. #define TFT_MOSI 29", "GUItool: begin automatically generated code GUItool: end automatically generated code", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Debug console Enable NTP time helper (needed for SSL authentiction)", "include the EduIntro library nothing here check the state of the PIR sensor if you just want to detect the turn from not active to active use pir.activated() instead", "Include the GSM library Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number initialize the library instance Array to hold the number for the incoming call", "file system test file Serial output stream ------------------------------------------------------------------------------ ------------------------------------------------------------------------------", "no_description", "no_description", "Connect WIFI ? Check connection Setup control assist Auto send on connect Setup webserver", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Read and send Sensor data every SENSOR_CHECK_INTERVAL (10) seconds", "FILE: PIR_demo.ino AUTHOR: Rob Tillaart PURPOSE: demo pir sensor class URL: https: -- END OF FILE --", "Copyright 2015 chaeplin Copyright 2017 xpokor22 This is based on: https: 0 : TOWER", "#define DEBUG #define TRACE 2. compare for slower decreasing temperatures Array to hold enough values to compare TEMPERATURE_COMPARE_AMOUNT values with the same amount of values TEMPERATURE_COMPARE_DISTANCE positions before ATMEL ATTINY85", "status = bmp.begin(BMP280_ADDRESS_ALT, BMP280_CHIPID);", "An example of an external chip select functions. Useful for port expanders or replacement of the standard GPIO functions. SD_CHIP_SELECT_MODE must be set to one or two in SdFat/SdFatConfig.h. A value of one allows optional replacement and two requires replacement. SD chip select pin.", "customizing a prompt look! by extending the prompt class define a pad style menu (single line menu) here with a set of fields to enter a date in YYYY/MM/DD format altMENU(menu,birthDate,\"Birth\",doNothing,noEvent,noStyle,(systemStyles)(_asPad|Menu::_menuData|Menu::_canNav|_parentDraw)", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Docs.resetApp(); In case setting the external async result to the sync task (optional)", "The SSL client used for secure server connection. The default network config object that used in this library. The client, aka async client, is the client that handles many tasks required for each operation. The authentication task handler, aka FirebaseApp. The Realtime database class object that provides the functions.", "To use the default WiFi library here Select the IP address according to your local network Select the IP address according to your local network join default namespace (no auto join in Socket.IO V3) hexdump(payload, length);", "SD chip select pin Time between printing progress dots number of blocks in the contiguous file file system test file", "capture picture run FOMO let the car follow the object", "Create an area of memory to use for input, output, and intermediate arrays. Finding the minimum value for your model may require some trial and error. This constant represents the range of x values our model was trained on, which is from 0 to (2 * Pi). We approximate Pi to avoid requiring additional libraries.", "no_description", "For AirLift Breakout/Wing/Shield: Configure the following to match the ESP32 Pins! Don't change the names of these #define's! they match the variant ones Using port 8883 for MQTTS Adafruit IO Account Configuration (to obtain these values, visit https:", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Following includes are for Arduino Ethernet Shield (W5100) If you're using another shield, see Boards_* examples", "read the command is \"digital\" command? is \"analog\" command? is \"mode\" command? Read pin number", "#define _TASK_SLEEP_ON_IDLE_RUN Callback methods prototypes Tasks put your setup code here, to run once: put your main code here, to run repeatedly:", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings here's a String with empty spaces at the end (called white space):", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "You can change longer or shorter depending on your network response Shorter => more responsive, but more ping traffic Use ping() to test TCP connections WFM_LOGDEBUG1(\"\\nWiFi connected, RSSI:\", WiFi.RSSI()); For ESP32, this better be 0 to shorten the connect time.", "DCC codes Commanders Accessories List of the ports on the Arduino. Light Ports are handled in analog mode for fading. Setup", "no_description", "Connect RED of the AM2315 sensor to 5.0V Connect BLACK to Ground Connect WHITE to i2c clock (SCL) - on '168/'328 Arduino Uno/Duemilanove/etc that's Analog 5 Connect YELLOW to i2c data (SDA) - on '168/'328 Arduino Uno/Duemilanove/etc that's Analog 4 V1 and V2 are Blynk Display widgets' VPIN", "include the library RF69 has the following connections: CS pin:    10 DIO0 pin:  2 RESET pin: 3", "List of the ports on the Arduino. Light Ports are handled in analog mode for fading. Setup while (!Serial); Ports setups Accessories setups", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "To eliminate FW warning when using not latest nina-fw version To use whenever WiFi101-FirmwareUpdater-Plugin is not sync'ed with nina-fw version Initialize serial and wait for port to open: don't continue attempt to connect to WiFi network:", "============================================================================== Start of configuration constants. ============================================================================== Abort run on an overrun.  Data before the overrun will be saved. ------------------------------------------------------------------------------", "Parses the received RGB information into three separate variables (R, G, B)", "needed for library if you used auto generated SSID, print it put your setup code here, to run once: WiFiManager Local intialization. Once its business is done, there is no need to keep it around", "Pin connected to the Raspberry Pi's GPIO Command buffer Initialize serial communication Configure the Raspberry Pi control pin Set Raspberry Pi to off state initially", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "Pin untuk motor stepper Pin untuk tombol push Jumlah langkah yang diinginkan setiap kali tombol ditekan Status sebelumnya dari tombol push Periksa apakah tombol baru saja ditekan (transisi dari LOW ke HIGH)", "check if a proximity reading is available read the proximity - 0   => close - 255 => far - -1  => error", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "no_description", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Database.resetApp(); Push int", "Define a struct for store all info about each gpio Define an array of struct GPIO and initialize with values the whole message is in a single frame and we got all of it's data If this is a \"writeOut\" command, set the pin level to value Create a JSON message with current GPIO state", "Same as ../basic/basic.ino except this uses <AUnitVerbose.h> instead of <AUnit.h> to get the more verbose assertion messages containing the string fragment of the actual arguments in the assertXxx() macros. The cost is ~20-25% increase in flash memory to store those strings for moderate to large unit tests. But the verbose version may be helpful for debugging.", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console as soon as connected update TimeInput widget state seconds from the start of a day. 0 - min, 86399 - max", "Try to connect to a wifi network Give the ESP some time to connect", "camera settings replace with your own model! see example of motion detection for config values init camera capture picture", "WiThrottleProtocol library: Roster and other objects example Shows how to retrieve the Roster, Turnouts/Points, Routes, Turntables Tested with ESP32-WROOM board Peter Akers (Flash62au), Peter Cole (PeteGSX) and Chris Harlow (UKBloke), 2023 Luca Dentella, 2020", "Variables: Settable: Others: Do something with message Count of responses handled by RESPONSES_STRUCT", "Construct object, StepMotor(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency Stop Button) put your setup code here, to run once: Configure and start Serial Communication put your main code here, to run repeatedly: Check the forward button signal", "initialize the serial port print out the keyboard readings", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP", "no_description", "LCD Encoder this encoder has a button here a keyboard with only one key as the encoder button input from the encoder + encoder button + serial", "Connect to WiFi Print the IP address Deserialize the data. Consider using the Arduino Json assistant- https: Print data", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "BMx280_I2C.ino shows how to use the BMP280 / BMx280 library with the sensor connected using I2C. Copyright (c) 2018 Gregor Christandl connect the AS3935 to the Arduino like this: Arduino - BMP280 / BME280", "Select the IP address according to your local network join default namespace (no auto join in Socket.IO V3) Message Includes a ID for a ACK (callback) creat JSON message for Socket.IO (ack) add payload (parameters) for the ack (callback function)", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console if connected to HWSERIAL (Serial1 of Teensy 4.0) Blynk will work through Serial <-> USB (/dev/ttyACM0) Do not read or write this BLYNK_SERIAL manually in your sketch", "Default pin 10 to SS/CS Serial.println( \"[\" + String(num) + \"] Disconnected!\"); IPAddress ip = webSocket.remoteIP(num); Serial.printf(\"[%u] Connected from %d.%d.%d.%d url: %s\\n\", num, ip[0], ip[1], ip[2], ip[3], payload); send message to client", "Feather RP2040 ThinkInk 1.54\" Monochrome displays with 200x200 pixels and SSD1681 chipset ThinkInk_154_Mono_D67 display(EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY, EPD_SPI); 1.54\" Monochrome displays with 200x200 pixels and SSD1608 chipset ThinkInk_154_Mono_D27 display(EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY, EPD_SPI);", "Commanders Accessories Ports l293 part The double turnout is on the l298n circuit, with the led.", "    2 ( 3  11)       : GMotor motor(DRIVER2WIRE, dig_pin, PWM_pin, (LOW / HIGH) ) GMotor motor(DRIVER3WIRE, dig_pin_A, dig_pin_B, PWM_pin, (LOW/HIGH) ) GMotor motor(RELAY2WIRE, dig_pin_A, dig_pin_B, (LOW/HIGH) )", "Basic demo for accelerometer/gyro readings from Adafruit LSM6DS33 Adafruit_LSM6DS3TRC lsm; For SPI mode, we need a CS pin For software-SPI mode we need SCK/MOSI/MISO pins if (!lsm.begin_SPI(LSM_CS)) {", "=========================================================================== some values for user data record some user data record type to be edited by the menu how to copy this data... THE DATA <-----------------------------------------", "Setup Bridge (needed every time we communicate with the Arduino Yn) Initialize the Serial Setup File IO Upload script used to gain network statistics Run stats script every 5 secs.", "#define _TASK_TIMECRITICAL #define _TASK_STATUS_REQUEST #define _TASK_LTS_POINTER #define _TASK_PRIORITY #define _TASK_MICRO_RES", "put your setup code here, to run once: WiFiManager Local intialization. Once its business is done, there is no need to keep it around reset saved settings wifiManager.resetSettings();", "------------------------------------------------------------------------- Test externTest() and externTesting() macros and various meta assertions. ------------------------------------------------------------------------- ------------------------------------------------------------------------- -------------------------------------------------------------------------", "WiFi network configuration. Initialize Serial Port Connect to the WLAN Initialize the SSL library Send the request", "You could use a spare Hardware Serial on boards that have it (like Mega) You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console Blynk will work through Serial", "NeoPixel test program showing use of the WHITE channel for RGBW pixels only (won't look correct on regular RGB NeoPixel strips). Which pin on the Arduino is connected to the NeoPixels? On a Trinket or Gemma we suggest changing this to 1: How many NeoPixels are attached to the Arduino?", "no_description", "no_description", "include the EduIntro library initialize serial communications at 9600 bps Print the collected data in a row on the Serial Monitor", "Demonstrate how to use FlashStorage_STM32 with an API that is similar to the EEPROM library. #define EEPROM_EMULATION_SIZE     (4 * 1024) Use 0-2. Larger for more debugging messages To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error Check signature at address 0", "Wifi network station credentials Telegram BOT Token (Get from Botfather) There are 3 image sizes after Telegram has process photo You may choose what you want, in example was choosed bigger size do something", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings MQTT topics - match to Home Assistant's configuration.yaml Configures the Keybus interface with the specified pins - dscWritePin is optional, leaving it out disables the", "FILESYSTEM INIT --------------------------------------- http: Enable ACE FS file web editor and add FS info callback function Start server", "Set up what we want to send. See state_t, opmode_t, fanspeed_t, swingv_t, & swingh_t in IRsend.h for all the various options. For every protocol the library has ... If the protocol is supported by the IRac class ...", "Set up what we want to send. See ir_Trotec.cpp for all the options. Now send the IR signal.", "Emulate Serial1 on pins 6/7 if not present don't continue don't continue waiting for connection to Wifi network set with the SetupWiFiConnection sketch", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Debug console", "no_description", "no_description", "SD_FAT_TYPE = 0 for SdFat/File as defined in SdFatConfig.h, 1 for FAT16/FAT32, 2 for exFAT, 3 for FAT16/FAT32 and exFAT. SDCARD_SS_PIN is defined for the built-in SD on some boards. Assume built-in SD is used. Try max SPI clock for an SD. Reduce SPI_CLOCK if errors occur.", "a windowed sinc filter for 44 khz, 64 samples a manual loop-unroller! draw some reference lines the setup routine runs once when you press reset: while(!Serial);", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 is button pressed (inverted logic! button pressed = LOW) and debounced? flip myPowerState: if it was true, set it to false, vice versa", "create a global shift register object parameters: (number of shift registers, data pin, clock pin, latch pin) setting all pins at the same time to either HIGH or LOW setting single pins set all pins at once", "FFT Test Compute a 1024 point Fast Fourier Transform (spectrum analysis) on audio connected to the Left Line-In pin.  By changing code, a synthetic sine wave can be input instead. The first 40 (of 512) frequency analysis bins are printed to", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 debounce contact state transitions (same as debouncing a pushbutton) if state has changed", "<<<<<<<<<<<<<<<<<<<<<<<<<< Setup >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> <<<<<<<<<<<<<<<<<<<<<<<<<<<< Loop >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>", "To demonstrate the coexistence of this EthernetWebServer and ESP8266 ESP8266WebServer library Open serial communications and wait for port to open: For ESP8266, change for other boards if necessary For ESP8266 Pin                D0(GPIO16)    D1(GPIO5)    D2(GPIO4)    D3(GPIO0)    D4(GPIO2)    D8", "BTS7960 works between +3v and +5v so you can use a uno, mega or a nano.", "Parameter 1 = number of pixels in strip Parameter 2 = Arduino pin number (most are valid) Parameter 3 = pixel type flags, add together as needed: NEO_KHZ800  800 KHz bitstream (most NeoPixel products w/WS2812 LEDs) NEO_KHZ400  400 KHz (classic 'v1' (not v2) FLORA pixels, WS2811 drivers)", "no_description", "Membaca tombol dan menggerakkan stepper ke depan atau belakang Membaca sensor suara dan menghentikan motor stepper jika suara tinggi terdeteksi Menggerakkan stepper jika tidak ada suara tinggi yang terdeteksi Normalisasi Speed Motor State Motor Speed", "SPDX-FileCopyrightText: (c) 2024 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later SimpleHTTPClient implements a very rudimentary HTTP client. It makes an HTTP request once upon acquiring an IP address and then reads until connection-close. It also demonstrates use of a state", "as described in the footer comment below Note that for additional security and reusability, you could use #define statements to specify these values in a .h file. your Gmail username, formatted as a complete email address, eg \"bob.smith@gmail.com\" your application specific password (see instructions above)", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 if device switched off...do nothing debounce motionsensor state transitions (same as debouncing a pushbutton)", "BMP280_DEV - ESP8266, I2C Communications, Default Configuration, Normal Conversion, User-Defined Pins", "Definities Analoge ingang voor het lezen van de draaiknop (potentiometer) De ESP8266 heeft slechts n analoge ingang A0 De maximale waarde van de nalage ingang uitlezen (10bit => 1023) https:", "Debug level, 0-3 #define USE_NEW_WEBSERVER_VERSION     true #define ESP_AT_LIB_DEBUG_OUTPUT   Serial Uncomment to use ESP32-AT commands #define USE_ESP32_AT      true", "and starts serial communication Range options: 2_G, 4_G, 8_G, 16_G Calibration (LunaSat flat on table) Get sums of axes measurements Find average axes measurements", "Audio Tutorial Kit Tester http: Easily test all the tutorial hardware by only listening and pressing buttons. 1: listen for microphone  (any button press moves to #2) 2: listen for SD card playing  (any button press moves to #2)", "no_description", "Try to read 32 bytes read a register by writing first, then reading", "Minimize size for non-Pro version You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Blynk will work through SerialUSB Do not read or write this serial manually in your sketch", "Start communicationg with the motor shield Reboot the motor controller; brings every value back to default Reset the encoder internal counter to zero (can be set to any initial value) Start DC Motor 1 (labeled M1) with 90% of maximum speed, clockwise Read the encoder connected to Motor1 until it reaches 36000 counts", "Set DEBUG to true in order to enable debug print Update and then sleep only for 1ms", "no_description", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "uncomment if you want to pass third argument as the output mfuThings.connectWiFi(SSID,PASSWD,D8); you can replace D8 with another pin as you want if type is output, the output pin must be determined comment if type is input", "Adafruit_ImageReader test for Adafruit ST7789 320x240 TFT Breakout for Arduino. Demonstrates loading images to the screen, to RAM, and how to query image file dimensions. Requires three BMP files in root directory of SD card: parrot.bmp, miniwoof.bmp and wales.bmp.", "no_description", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Change pins according to your boards", "init Ciao Run commands in Linino OS to get the CPU Usage Get data back", "Reverse the value of button (! = \"Not\", so !button = \"Not\" Button) If Button is HIGH (or 1), !button will be LOW (or 0)", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct to store measurement from powersensor this is where you read from power sensor", "First DEFINE the components of the library we're going to use for this sketch Define #USE_ALB_RFID to include the RFID functions of the ArduinoLearningBoard Library (Must do this before including ArduinoLearningBoard.h) NOW include the main ArduinoLearningBoard library (quotes now, <Arduino...> when it's \"live\") Based on the defines above, the appropriate code will be added to the project", "SDCARD_SS_PIN is defined for the built-in SD on some boards. Try to select the best SD card configuration. ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ ------------------------------------------------------------------------------", "Anything else, defaults! read diagnostics (optional but can help debug problems) Outlines are not included in timing results Screen is not cleared for this one -- this is intentional and does not affect the reported time.", "this sketch wiil do a read stress test on a SD card. run time is about 25 seconds print partition table", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG comment the following line if you use a toggle switches instead of tactile buttons struct for the std::map below PIN_D0 can't be used for PWM/I2C", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Enter a MAC address and IP address for your controller below.", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries You have to add initialization for your Custom Ethernet here This is just an example to setCSPin to USE_THIS_SS_PIN, and can be not correct and enough Ethernet.init(USE_THIS_SS_PIN);", "Create the object", "StreamUtils - github.com/bblanchon/ArduinoStreamUtils Copyright Benoit Blanchon 2019-2024 MIT License This example shows how to log what read from a Stream Create a new stream that will forward all calls to Serial, and log to Serial.", "print the SSID of the network you're attached to: print your board's IP address: print the received signal strength: check for the WiFi module: don't continue", "no_description", "TODO: fix drive3 and drive4", "SPDX-FileCopyrightText: (c) 2021-2024 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later AppWithListenersTemplate shows one way to start writing a network application using a listener approach. It doesn't do any network communication, but it configures the network and shows possible", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "Configure Touch Buttons as Inputs Define variables to hold values of buttons Read buttons (HIGH = button pushed, LOW = button not pushed) Output values of all buttons to serial port", "include the library CC1101 has the following connections: CS pin:    10 GDO0 pin:  2 RST pin:   unused", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 debounce contact state transitions (same as debouncing a pushbutton) if state has changed", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection setup function for SinricPro", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Debug console If you want to remove all points:", "ignore", "no_description", "unsigned long lastConnectionTime = 0; const unsigned long postingInterval = 10000L; Initialize the Web client object Klugde to temporarily fix RP2040W WiFi.status() bug ( https: You can change longer or shorter depending on your network response", "Begin Serial Communications set calibration values by reading from EEprom Set pinMode for LED and average temperature difference is greater than the threshold,", "no_description", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP Optional values to override default settings", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for setupEthernet connection ETHERNET_USE_RPIPICO, use default SS = 5 or 17", "Debug Level from 0 to 4 Select the IP address according to your local network Google DNS Server IP This is GandiStandardSSLCA2.pem, the root Certificate Authority that signed the server certifcate for the demo server https:", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection setup function for SinricPro", "BMX280-sensor ForcedBMX280 climateSensor = ForcedBMX280(); int32_t g_temperature; ForcedBMX280Float climateSensor = ForcedBMX280Float(); float g_temperatureFloat;", "Demo of rewriting a line read by fgets SD card chip select pin file system print stream ------------------------------------------------------------------------------", "Settings Configures the Keybus interface with the specified pins Commonly known DSC codes are tested first Initialize components Pin setup", "Set oneshot to false to trigger continuous mode when you finished setting up the whole flow Wait for the serial Something is really wrong, try rebooting Reboot is useful if we are powering the board using an unreliable power source (eg. solar panels or other energy harvesting methods)", "Enter your sensitive data in arduino_secrets.h Enter your sensitive data in arduino_secrets.h Wait for Serial Monitor or start after 2.5s Set the callbacks for connectivity management Check for HSM", "For Teensy 4.1 Use true for NativeEthernet Library, false if using other Ethernet libraries Only one of the following to be true. Enter a MAC address and IP address for your controller below. Set the static IP address to use if the DHCP fails to assign", "Connect to WiFi Print the IP address ================================================================ ================================================================ Examples of setting String, integer and float values.", "Set the time Set the date you can use also rtc.setTime(hours, minutes, seconds); rtc.setDate(day, month, year);", "Continue looping until you get a complete signal received", "ESP8266 GPIO pin to use for IR blaster. Library initialization, change it according to the imported library file. / ##### End user configuration ###### core settings", "see the tutorial https: Pin 13 has an LED connected on most Arduino boards. if using Arduino IDE 1.5 or above you can use pre-defined LED_BUILTIN  instead of 'led' have const here so it is easy to find and change", "Image Buffer Among various image quality given by QCIF: 176x144 x 2 bytes per pixel (RGB565) Initialize the Serial initialize the Shield", "Advanced Microcontroller-based Audio Workshop http: https: Part 1-3: First \"Hello World\" program, play a music file WAV files for this and other Tutorials are here:", "Be sure to use the correct pin numbers for your setup. Note that on ATmega328: 17=A3, 16=A2, 15=A1, 14=A0 DA7, DA6, DA5, DA4, DA3, DA2, DA1, DA0, BDIR, BC2, BC1 psg.setAddress(TheChipsAddress);", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Your WiFi credentials. Set password to \"\" for open networks. Debug console", "Uncomment this function if you wish to attach function dummy when RTC wakes up the chip Triggers a 2000 ms sleep (the device will be woken up only by the registered wakeup sources and by internal RTC) The power consumption of the chip will drop consistently Send sleep command to MIPS CPU and then go to sleep This function will be called once on device wakeup", "#include <TFT_eSPI.h> pseudo-code for cheesy RLE start with color1 while more input data remaining count =  0nnnnnnn = 1 byte or 1nnnnnnn nnnnnnnn 2 bytes (0 - 32767)", "BMx280_I2C.ino shows how to use the BMP280 / BMx280 library with the sensor connected using I2C. Copyright (c) 2018 Gregor Christandl connect the AS3935 to the Arduino like this: Arduino - BMP280 / BME280", "SerialDEBUG->begin(DEBUG_BAUD, SERIAL_8N1, SERIAL_TX_ONLY); define node \"sensor\" set device to ready", "ADVANCED EXAMPLE: demonstration of how HardwareBLESerial can work together with CommandParser to provide a commandline interface over BLE (NOTE: requires CommandParser to be installed separately) Globals HardwareBLESerial instance CommandParser instance CommandParser command callbacks", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 checkButtonpress reads if BUTTON_PIN gets LOW and send Event", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "Default pin 10 to SS/CS base URL for SockJS (websocket) connection The complete URL will look something like this(cf. http: ws: For the default config of Spring's SockJS/STOMP support, the default base URL is \"/socketentry/\".", "Helper functions declarations Create an object of the class Bsec Entry point for the example Print the header Function that is looped forever", "USB WebUSB object Landing Page: scheme (0: http, 1: https), url Page source can be found at https: the setup function runs once when you press reset or power the board Manual begin() is required on core without built-in support e.g. mbed rp2040", "include the library code: initialize the library by associating any needed LCD interface pin with the arduino pin number it is connected to these constants won't change.  But you can change the size of your LCD using them:", "Start the I2C interface Start the serial interface invert state of 32kHz oscillator. Turn on oscillator pin, frequency j So... The 32kHz oscillator (pin 1) will turn on or off once each 2s,", "some example libraries to handle the rotation and clicky part of the encoder. These will generate our events. Encoder -- Display", "Neural network architecture Total number of layers in the network The weights obtained by training The biases obstained by training Inputs and outputs", "This example shows how to connect to Google API via ethernet. This example is for ESP32 with LAN8720 Ethernet board. For how to create Service Account and how to use the library, go to https: Service Account's client email Service Account's private key", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3", "Emulate Serial1 on pins 6/7 if not present don't continue waiting for connection to Wifi network set with the SetupWiFiConnection sketch", "Function definitions (we define them here, but the code is below) if (!card.init(true)) { enable optimize read - some cards may timeout. Disable if you're having problems Now we will look for a FAT partition! Lets tell the user about what we found", "include the library code: initialize the library by associating any needed LCD interface pin with the arduino pin number it is connected to set up the LCD's number of columns and rows: Print a message to the LCD.", "This handles the network and cloud connection", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection setup SinricPro", "the signal in signal.h has 2048 samples. Set this to a value between 16 and 2048 inclusive. this must be a power of 2 the sample rate the setup routine runs once when you press reset: run the FFT", "no_description", "Use the MD_MAX72XX library to simuate an hourglass Uses the graphics functions to animate an hourglass on two matrix modules.The matrices are placed diagonally touching at one point. --------------------", "read pins A8, A9, A10", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "------------------------------------------------------------------- This class defines a light signal by giving patterns of lights: like the state -x--BB---- for a signal with 10 lights. Where x means light on, - means off, and B is blink. -------------------------------------------------------------------", "Include the DHT11 library for interfacing with the sensor. Create an instance of the DHT11 class. - For Arduino: Connect the sensor to Digital I/O Pin 2. - For ESP32: Connect the sensor to pin GPIO2 or P2. - For ESP8266: Connect the sensor to GPIO2 or D4.", "include the library nRF24 has the following connections: CS pin:    10 IRQ pin:   2 CE pin:    3", "Circuit Playground Color Sensing Example Use a NeoPixel RGB LED and light sensor on the Circuit Playground board to do basic color detection.  By quickly flashing full red, green, and blue color light from the NeoPixel the light sensor can read the intensity of the reflected light and roughly approximate the color of the object.", "app Blynk.email(\"Subject: Button Logger\", \"You just pushed the button...\"); Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080); GPIO2emailOnButtonPress", "Write the status value to On to Pin 3 Read from Pin 3 Write the status value to Off to Pin 3 Sets all the status Pins Values to On in one single operation Toggles the actual status values of all digital programmables Pins", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Select the IP address according to your local network Google DNS Server IP setup function for ETH connection", "Les boutons du TCO... Les trois moteurs Les ports pour connecter les moteurs. Memoriser les positions des moteurs dans l'EEPROM. Activation de la reception de messages Dcc", "send message to server when Connected send message to server webSocket.sendTXT(\"message here\"); send data to server webSocket.sendBIN(payload, length);", "setup function for WiFi connection get a new Blinds device from SinricPro setup SinricPro main setup function", "Create, parsing and modify JSON object and JSON array FirebaseJSON supports Arduino String, PROGMEM, flash string, std::string, char array, string literal, and sum of arduino String. All functions supported FPSTR, String, std::string, const char* and char array as parameters. To set content To add data to json", "Variables: Settable: Others: start with max available size Do something with message", "#include <menuIO/jsFmt.h> on debug mode I put aux files on external server to allow changes without SPIFF update on this mode the browser MUST be instructed to accept cross domain files this version number MUST be the same as data/* char wifiSSID[wifiSSIDLen+1];", "Include the (new) library Initialize both motors Used to display information Wait for Serial Monitor to be opened do nothing", "include MDNS select which pin will trigger the configuration portal when set to LOW put your setup code here, to run once wm.resetSettings(); wm.setEnableConfigPortal(false);", "while (!Serial); play_tune(audio, sizeof(audio)); Start TFT and fill black while (1); Display the results (acceleration is measured in m/s^2)", "Check if communication with wifi module has been established wait 10 seconds for connection: you're connected now, so print out the status: listen for incoming clients Process request", "Wifi network station credentials Telegram BOT Token (Get from Botfather) attempt to connect to Wifi network:", "Connect to wifi Wait some time to connect to wifi run callback when messages are received run callback when events are occuring Connect to server", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Select the IP address according to your local network Google DNS Server IP / To be called before ETH.begin() bool begin(uint8_t phy_addr=ETH_PHY_ADDR, int power=ETH_PHY_POWER, int mdc=ETH_PHY_MDC, int mdio=ETH_PHY_MDIO,", "no_description", "Can be obtained with: openssl s_client -showcerts -connect echo.websocket.org:443 </dev/null send message to server when Connected send message to server webSocket.sendTXT(\"message here\");", "Use a map to collect IRQ counts Map pin numbers to pin names for pretty printing Wait for Serial Monitor or start after 2.5s Init IRQ pins and attach callbacks NOTE: .first holds the channel pin and .second holds the counter", "#define _TASK_TIMECRITICAL #define _TASK_MICRO_RES #define _TASK_STD_FUNCTION Callback methods prototypes Tasks", "the setup function runs once when you press reset or power the board initialize digital pin LED_BUILTIN as an output. the loop function runs over and over again forever", "An existing file Read bloack size", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "----------------------------------------------------------------------------- This example shows the old way of checking for input messages. It's simpler to use the callbacks now, check out the dedicated example. ----------------------------------------------------------------------------- -----------------------------------------------------------------------------", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "ILI9341 Color TFT Display connections Initialize the peripherals. Uncomment one these to try other window functions fft1024_1.windowFunction(NULL); fft1024_1.windowFunction(AudioWindowBartlett1024);", "Init commands and reset devices Calibration cycle: disable Watermark demuxer Measures cycle: enable Watermark demuxer", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "for your motor initialize the stepper library on pins 8 through 11: nothing to do inside the setup read the sensor value: map it to a range from 0 to 100:", "Manual begin() is required on core without built-in support e.g. mbed rp2040 clear configuration will remove all USB interfaces including CDC (Serial) If already enumerated, additional class driverr begin() e.g msc, hid, midi won't take effect until re-enumeration Manual call tud_task since it isn't called by Core's background toggle LED", "no_description", "no_description", "Hologram Dash uses UBLOX U2 modems Increase RX buffer if needed Uncomment this if you want to see all AT commands #define DUMP_AT_COMMANDS Uncomment this if you want to use SSL", "For Teensy 4.1 Use true for NativeEthernet Library, false if using other Ethernet libraries Only one of the following to be true. Only one of the following to be true. Enter a MAC address and IP address for your controller below.", "Adafruit_ImageReader test for Adafruit ST7789 320x240 TFT Breakout for Arduino. Demonstrates loading images to the screen, to RAM, and how to query image file dimensions. Requires three BMP files in root directory of SD card: parrot.bmp, miniwoof.bmp and wales.bmp.", "no_description", "Update function should be continuously polled", "use a SoftwareSerialTX on Pin 2 setup baurdrate send a char", "Debug Level from 0 to 4 Select the IP address according to your local network Google DNS Server IP Using this if Serial debugging is not necessary or not using Serial port while (!Serial && (millis() < 3000));", "Color definitions Buffers surrounding the plot area millisecond delay between samples Buffer for our plot data while (!Serial) yield();", "----------------------------------------------------------------------------- ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- Listen to incoming notes", "Dummy file to placify the silly Arduino IDE. The real program resides in Girs.cpp. Rationale: see http:", "Pin receiving the one-pulse-per-second signal from the RTC. This should be an interrupt-capable pin. We will use the PCF8523 RTC, which has the handy \"Second Timer\". Other RTCs could be used with their \"square wave\" output configured to 1 Hz.", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" If item 2 is selected, change menu items... You can also use it like this:", "no_description", "Display the settings. Display the encoded IR sequence. Set up what we want to send. See ir_Mitsubishi.cpp for all the options. Now send the IR signal.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define deviceIds in an array go through the devices", "include the library SX1280 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "SKETCH BEGIN the whole message is in a single frame and we got all of it's data message is comprised of multiple frames or the frame is split into multiple packets Initialize LittleFS/SPIFFS file-system Stay forever here as useless to go further", "define menu colors -------------------------------------------------------- each color is in the format: {{disabled normal,disabled selected},{enabled normal,enabled selected, enabled editing}} only draw if menu changed for gfx device", "#define DEBUG Just 4 random names", "You don't need the following includes if you're not using MQTT You can find the Adafruit MQTT library here: https: Required for Serial on Zero based boards Define *one* of the following lines: #define SIMCOM_2G", "Select the IP address according to your local network Google DNS Server IP send message to client send message to client send data to all connected clients", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "Include necessary libraries for communication with the INA219 sensor and I2C Define the I2C address and labels for each INA219 sensor Create an array of INA219 sensors and their labels Initialize serial communication at 9600 bits per second Initialize I2C communication and configure each INA219 sensor", "--------------------------------------------------------------------+ MSC RAM Disk Config --------------------------------------------------------------------+ 8KB is the smallest size that windows allow to mount --------------------------------------------------------------------+", "Simple MP3 file player example https: Requires the prop-shield and Teensy 3.2 or 3.1 This example code is in the public domain. #include <play_sd_aac.h>", "no_description", "enable transmission, can be disabled with: RS485.endTransmission(); enable reception, can be disabled with: RS485.noReceive();", "Initialize Console and wait for port to open: Wait for Console port to connect look for the newline character, this is the last character in the string print text with the name received Ask again for name and clear the old name", "no_description", "Initialize the Web client object print the SSID of the network you're attached to: you're connected now, so print out the data print the received signal strength: this method makes a HTTP connection to the server", "initialize the robot", "This example shows how to send JSON payload FCM to the subscribed topic's recipientsvia HTTPv1 API. This new API requires OAuth2.0 authentication. Library allows your ESP device to interact with FCM server through FCM Server protocols. https: This means your device now is not a FCM app client and unable to get the notification messages.", "Default pin 10 to SS/CS Change pins according to your boards Serial.println( \"[\" + String(num) + \"] Disconnected!\"); IPAddress ip = webSocket.remoteIP(num); Serial.printf(\"[%u] Connected from %d.%d.%d.%d url: %s\\n\", num, ip[0], ip[1], ip[2], ip[3], payload);", "the setup function runs once when you press reset or power the board Set disk vendor id, product id and revision with string up to 8, 16, 4 characters respectively Set read write callback Still initialize MSC but tell usb stack that MSC is not ready to read/write If we don't initialize, board will be enumerated as CDC only", "Supply your own freeMemory method Callback methods prototypes Statis task Generating another task to-do: think of something to put in here.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our dimmable switch setup function for setupEthernet connection", "#define DHTTYPE DHT22 #define DHTTYPE DHT21 Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 31, 249), 8080); float t = dht.readTemperature(true);", "Adafruit Crickit Capacitive Touch Demo for Arduino Displays the value of Adafruit Crickit touchpad values when touched Tested with the Crickit + micro:bit, all good", "include the library select the firmware image you want to upload WARNING: Make sure you select the correct firmware for your device! Uploading incorrect firmware (e.g. LR1110 firmware to LR1120 device)", "initialize the robot write empty strings for the different fields do nothing", "SPDX-FileCopyrightText: 2021 Kattni Rembor for Adafruit Industries SPDX-License-Identifier: MIT while (!Serial) delay(10); read the potentiometer Input a value 0 to 255 to get a color value.", "SerialDEBUG->begin(DEBUG_BAUD, SERIAL_8N1, SERIAL_TX_ONLY); define node \"sensor\" set device to ready", "After decoding received below codes Power button mute button Vol. low VOl. High", "libraries Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number initialize the library instance URL, path and port (for example: arduino.cc)", "the signal in signal.h has 2048 values. Set this to a value from 16 to 2048. this must be a power of 2 the sample rate this array will hold the normalized data the setup routine runs once when you press reset:", "needed for library put your setup code here, to run once: WiFiManager Local intialization. Once its business is done, there is no need to keep it around reset settings - for testing", "Copyright (C) 2010 Georg Kaindl http: This file is part of Arduino EthernetBonjour. EthernetBonjour is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License", "put your setup code here, to run once: put your main code here, to run repeatedly:", "Pick one of three wiring options below! Option #1 - uses I2C, connect to hardware I2C port only! SCL to I2C clock (#A5 on Uno) and SDA to I2C data (#A4 on Uno) tie MODE to GND and POWER CYCLE (there is no reset pin) Option #2 - use hardware SPI, connect to hardware SPI port only!", "print the SSID of the network you're attached to: you're connected now, so print out the data print the received signal strength: initialize serial for ESP module initialize ESP module", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set. Large data transmission may require larger RX buffer, otherwise connection issue or data read time out can be occurred.", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ENC28J60 & ESP32-S3 Optional values to override default settings", "the LED pin to use as output the amplitude threshold for a clap to be detected create an amplitude analyzer to be used with the I2S input variable to keep track of last amplitude setup the serial", "Can be included as many times as necessary, without `Multiple Definitions` Linker Error Get the float data from the FlashStorage at position 'FlashAddress'", "Deprecated echo.websocket.org to be replaced To run a local WebSocket Server #define WS_SERVER           \"192.168.2.222\" #define WS_SERVER           \"192.168.2.30\" send message to server when Connected", "Libraries also needed: https: Set according to your local network if you need static IP IPAddress myIP(192, 168, 1, 232); IPAddress myGW(192, 168, 1, 1); IPAddress mySN(255, 255, 255, 0);", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "In order to set SSID and password open the /setup webserver page const char* ssid; const char* password; onProgress handling is missing with ESP32 library http:", "---------------------------- Standard Libraries - Already Installed if you have ESP32 set up ---------------------------- ------- Replace the following! ------ #define CAMERA_MODEL_WROVER_KIT", "no_description", "The loop starts only when the Serial Monitor is opened. Reads and Prints all channels (in a single operation) Read one-by-one each channel and print them one-by-one", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct for the std::map below this is the main configuration", "Send nec1 122/27 (volume down for Yamaha) followed by 10 repeats Print a textual representation to Serial. Send it 11 times (payload followed by 10 repeats). Wait 10 seconds.", "Check if a proximity reading is available. Check if a gesture reading is available Ignore Check if a color reading is available Print updates every 100 ms", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "no_description", "no_description", "Date and time functions using a PCF8563 RTC connected via I2C and Wire lib use D2 for INT0; attach to CLKOUT pin on RTC flag to update serial; set in interrupt callback INT0 interrupt callback; update tick_tock flag attach interrupt to set_tick_tock callback on rising edge of INT0", "Uncomment the following, and set to a valid ip if you don't have dhcp available. IPAddress iotIP (192, 168, 0, 42); Uncomment the following, and set to your preference if you don't have automatic dns. IPAddress dnsIP (8, 8, 8, 8); If you uncommented either of the above lines, make sure to change \"Ethernet.begin(mac)\" to \"Ethernet.begin(mac, iotIP)\" or \"Ethernet.begin(mac, iotIP, dnsIP)\"", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG setup function for WiFi connection setup function for SinricPro add device to SinricPro", "no_description", "Blynk.begin(auth, ssid, pass); Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080);", "Simple test of Unicode filename. Unicode is supported as UTF-8 encoded strings. USE_UTF8_LONG_NAMES must be non-zero in SdFat/src/SdFatCongfig.h Remove files if non-zero. SD_FAT_TYPE = 0 for SdFat/File as defined in SdFatConfig.h,", "8KB is the smallest size that windows allow to mount the setup function runs once when you press reset or power the board Manual begin() is required on core without built-in support e.g. mbed rp2040 Set disk size and callback for Logical Unit 0 (LUN 0) Set disk size and callback for Logical Unit 1 (LUN 1)", "don't continue", "lcd.changeID(0x3C);", "#define HOST_NAME   \"arduino.tips\" Your board <-> ESP_AT baud rate: initialize serial for ESP module char hello[] = \"GET /asciilogo.txt HTTP/1.1\\r\\nHost: arduino.tips\\r\\nConnection: close\\r\\n\\r\\n\"; while (1);", "will pause Zero, Leonardo, etc until serial console opens Initialize the INA219. By default the initialization will use the largest range (32V, 2A).  However you can call a setCalibration function to change this range (see comments). To use a slightly lower 32V, 1A range (higher precision on amps):", "Print 6 decimal places for Lat, Lon Print 2 decimal places for Alt, Speed Blynk.begin(auth, ssid, pass); Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080);", "Create the object expect 0xE3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855 expect 0xD7A8FBB307D7809469CA9ABCB0082E4F8D5651E46D3CDB762D02D0BF37C9E592 expect 0xB613679A0814D9EC772F95D778C35FC5FF1697C493715653C6C712144292C5AD expect 0xF7BC83F430538424B13298E6AA6FB143EF4D59A14946175997479DBC2D1A3CD8", "Before running the program below, make sure you set UseReceiverActiveSensing (optionally UseSenderActiveSensing) in Settings.h to true", "Change handlers Connect WIFI ? Check connection Control assist setup Bind span controls", "Play low to high frequencies Now play high to low frequencies", "SD_FAT_TYPE = 0 for SdFat/File as defined in SdFatConfig.h, 1 for FAT16/FAT32, 2 for exFAT, 3 for FAT16/FAT32 and exFAT. SDCARD_SS_PIN is defined for the built-in SD on some boards. Assume built-in SD is used. Try max SPI clock for an SD. Reduce SPI_CLOCK if errors occur.", "create an array of 4 servos with our crickit object these are the pins they will be attached to begin the crickit attach the servos to their pins repeat for all 4 servos", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Ported to ESP32", "!!! IMPORTANT !!! !!! This example WON'T COMPILE unless you follow these instructions !!! Include TEXT file \"incbin-print-self.ino\" with name `Sketch` This will create global variables: const __FlashStringHelper gSketchTextData[];", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS base URL for SockJS (websocket) connection", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Select the IP address according to your local network Google DNS Server IP define array of supported color temperatures", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Now support ArduinoJson 6.0.0+ ( tested with v6.15.2 to v6.16.1 )", "Create a WiFiClient class to connect to the MQTT server. or... use WiFiClientSecure for SSL WiFiClientSecure client; Setup the MQTT client class by passing in the WiFi client and MQTT server and login details. Set up for publishing and subscribing to the same feed, for demonstration only", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. The ESP_SSLClient uses PSRAM by default (if it is available), for PSRAM usage, see https: For ESP_SSLClient documentation, see https: In case using ESP8266 without PSRAM and you want to reduce the memory usage,", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set. Large data transmission may require larger RX buffer, otherwise connection issue or data read time out can be occurred.", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Debug console", "libraries Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number initialize the library instance Save data variables", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings adding a variable integer to a String: adding a constant string to a String: adding a constant integer to a String:", "String i = param.asStr(); double d = param.asDouble(); Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "Show image buffer on the display hardware. Since the buffer is intialized with an Adafruit splashscreen internally, this will display the splashscreen. display.setContrast (0); Clear the buffer.", "Clock example using a seven segment display & GPS for time. Must have the Adafruit GPS library installed too!  See: https: Designed specifically to work with the Adafruit LED 7-Segment backpacks and ultimate GPS breakout/shield:", "JSON.typeof(jsonVar) can be used to get the type of the variable myArray.length() can be used to get the length of the array JSON.stringify(myVar) can be used to convert the JSONVar to a String", "if you don't want to use DNS (and reduce your sketch size) use the numeric IP instead of the name for the server: IPAddress server(192,168,1,1); Initialize the Ethernet client library with the IP address and port of the server", "Change the Server IPAddress accordingly send reply print the SSID of the network you're attached to: print your board's IP address: check for the WiFi module:", "Test code for Adafruit GPS That Support Using I2C This code shows how to parse data from the I2C GPS Pick one up today at the Adafruit electronics shop and help support open source hardware & software! -ada Connect to the GPS on the hardware I2C port", "/ Board Info Connect to WPA/WPA2 network: Random number for device name Board Serial Number Create Arduino Token", "Uncomment this function if you wish to attach function dummy when RTC wakes up the chip LowPower.attachInterruptWakeup(RTC_ALARM_WAKEUP, dummy, CHANGE); Triggers a 2000 ms sleep (the device will be woken up only by the registered wakeup sources and by internal RTC) The power consumption of the chip will drop consistently This function will be called once on device wakeup", "Learning Board LED is connected to D13 and Ground Learning Board Button is connected to D12 and Ground See if button is being pushed BUtton UN-Pushed returns high (pull-up) Button PUSHED returns LOW (switch connects D12 to Ground)", "FILE: DHT20_I2C_speed.ino AUTHOR: Rob Tillaart PURPOSE: Demo for DHT20 I2C humidity & temperature sensor URL: https: Always check datasheet - front view", "Date and time functions using a PCF8563 RTC connected via I2C and Wire lib When time needs to be set on a new device, or after a power loss, the following line sets the RTC to the date & time this sketch was compiled This line sets the RTC with an explicit date & time, for example to set January 21, 2014 at 3am you would call:", "BMx280_SPI.ino shows how to use the BMx280 library with the sensor connected using SPI. Copyright (c) 2018 Gregor Christandl connect the AS3935 to the Arduino like this: Arduino - AS3935", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "------------------------------------------------------ The main body. ------------------------------------------------------", "Important: For ESP32, check https: and replace cores/esp32/Server.h to avoid compile error Initialize the Ethernet client object You can use Ethernet.init(pin) to configure the CS pin Ethernet.init(10);", "This example is for ESP32 C3 and similar boards that have a ws8212 RGB led installed use -ve for the ledPin to trigger ws2812 led control on that pin It runs a simple hello server Configure a staticIP so you can connect the the hello server which pin drives the ws2812 addressable RGB led on ESP32 C/S", "Adafruit_ImageReader test for Adafruit ST7789 320x240 TFT Breakout for Arduino. Demonstrates loading images to the screen, to RAM, and how to query image file dimensions. Requires three BMP files in root directory of SD card: parrot.bmp, miniwoof.bmp and wales.bmp.", "For transport=websocket instead of transport=polling Select the IP address according to your local network join default namespace (no auto join in Socket.IO V3) Serial.begin(921600); Serial.setDebugOutput(true);", "#define BLYNK_USE_DIRECT_CONNECT You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Add Blynk service...", "include the library LR1110 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Debug console", "include the EduIntro library initialize serial communications at 9600 bps Print the collected data in a row on the Serial Monitor", "needed for library put your setup code here, to run once: WiFiManager Local intialization. Once its business is done, there is no need to keep it around reset saved settings", "Calculate and set the client id used for MQTT Set the message callback, this function is called when the MQTTClient receives a message MQTT client is disconnected, connect poll for new MQTT messages and send keep alives", "Membaca nilai pH dari sensor dan mengkonversi menjadi nilai pH Membaca nilai suhu dari sensor dan mengkonversi menjadi nilai suhu dalam derajat Celsius Membaca nilai kelembapan dari sensor dan mengkonversi menjadi persentase kelembapan tanah Menyiapkan data yang akan dikirim ke webgist", "stop keeping AWA history after 30 seconds, just as a demonstration some test data to use in build() add some data to the old Adafruit_GPS variables add some data to the new NMEA data values Record integer history for HDOP, scaled by 10.0, offset by 0.0,", "no_description", "For Arduino SAMD21 OTA supports. See https: The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. The large RX buffer is required for large data.", "define a callback for key presses Release event will trigger the game check Check is the pad pressed? or is the pad released? Check if the pressed button it correct", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Debug console Setup a function to be called every second", "L'ILS ... Le moteur Les DELS Les ports pour connecter le moteur et les DELs. Memoriser les positions des moteurs dans l'EEPROM.", "Wait for the Console port to connect initialize the LED pin as an output: see if there's incoming Console data: read the oldest byte in the Console buffer: if it's a capital H (ASCII 72), turn on the LED:", "#warning Using LAN8742A Ethernet & STM32Ethernet lib Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Only for W5100 Serial.println( \"[\" + String(num) + \"] Disconnected!\");", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Define Firebase Data object Or use legacy authenticate method", "no_description", "no_description", "Initialise MAX3100 instance with 1.8432 MHz crystal and chip select pin 10. Flags denoting whether the interrupt was from the internal and/or external USART. For an Arduino serial event, set the appropriate flag. For a MAX3100 serial event, set the appropriate flag.  Detach the interrupt", "------------Prosedur jika input berupa angka------------ ------------Jika input '#' maka cek password------------ ------------Jika input '*' maka hapus tampilan------------", "You have to select true for the first time for any board Number of seconds after reset during which a subseqent reset will be considered a double reset. RTC Memory Address for the DoubleResetDetector to use Call the double reset detector loop method every so often,", "include the EduIntro library initialize serial communications at 9600 bps read the potentiometer's value: map the data from the sensor (0..1023) to one the servo can take (0..180)", "Adafruit Internal Flash FatFs Format Example Author: Tony DiCola, Ha Thach !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! !!  NOTE: YOU WILL ERASE ALL DATA BY RUNNING THIS SKETCH!  !! !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", "create switch characteristic and allow remote device to read and write create button characteristic and allow remote device to get notifications begin initialization set the local name peripheral advertises set the UUID for the service this peripheral advertises:", "GFX Demo for multiple backends By Marc MERLIN <marc_soft@merlins.org> Contains code (c) Adafruit, license BSD You can use any (4 or) 5 pins hwspi hardcodes those pins, no need to redefine them", "no_description", "no_description", "This example requires the TimerOne library. https: Tested on Teensy 3.1  Doesn't work on Teensy 4.1  Works poorly on AVR boards (UNO, Leonardo, Mega, etc.)", "Talk into the mic and hear it through your headphones", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 is button pressed (inverted logic! button pressed = LOW) and debounced? flip myPowerState: if it was true, set it to false, vice versa", "lcd.print_u32f( time32, 4 ); lcd.print_u32f( rand32, 9 );", "Include dependencies (libraries) Instantiate TMP117 class with id of one and debugging set to false Observation configuration Dynamic Variables Begin Serial Communications (Lunasat baud rate set to 9600 bits per second)", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Ported to ESP32", "initialize serial for ESP module initialize ESP module don't continue Check for New Ip Every 10 mins.", "Try to connect to a wifi network Give the ESP some time to connect initialize value to 0 Get the current value Log", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS SETTINGS", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 debounce contact state transitions (same as debouncing a pushbutton) if state has changed", "#include <WiFi101.h> Initialize serial and wait for port to open: attempt to connect to WiFi network: Connect to WPA/WPA2 network. Change this line if using open or WEP network: wait 10 seconds for connection:", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false From v1.1.0", "include the library code: initialize the library by associating any needed LCD interface pin with the arduino pin number it is connected to set up the LCD's number of columns and rows: Print a message to the LCD.", "Arduino Moving Average Library https: Copyright (C) 2018 by Jack Christensen and licensed under GNU GPL v3.0, https: Example sketch to smooth the readings from a CdS photocell.", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip); read the status code and body of the response", "Pin settings for PyPortal ILI9341 with 8-bit parallel interface: Size of the color selection boxes and the paintbrush size while (!Serial); make the color selection boxes", "Basic demo for accelerometer/gyro readings from Adafruit LSM6DS33 For SPI mode, we need a CS pin For software-SPI mode we need SCK/MOSI/MISO pins Adafruit_LSM6DS3TRC lsm6ds; if (!lsm6ds.begin_SPI(LSM_CS)) {", "initialize the Robot, SD card, display, and speaker show the logots on the TFT screen add the instructions These are some general values that work for line following uncomment one or the other to see the different behaviors of the robot", "no_description", "include the library select which radio to use this can be any radio supported by RadioLib! set the pinout depending on the wiring and module type SPI NSS pin:               10", "macro used to print the relay state create two new variables to store the previous joystick and the new joystick value initialize Serial comunication wait for the serial port to connect, Needed for USB native only", "#include <lgfx_user/LGFX_ESP32_sample.hpp>", "no_description", "KH Print hearbeat every HEARTBEAT_INTERVAL (20) seconds. Debug console initialize serial for ESP module Optional to change default AP IP(192.168.4.1) and channel(10)", "set task1 to be called every 2 seconds every 8 seconds call task2 that changes the settings of task1 after 60 seconds stop both tasks your code can be here", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP", "#define EEPROM_EMULATION_SIZE     (4 * 1024) Use 0-2. Larger for more debugging messages To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error Note: the area of flash memory reserved for the variable is lost every time the sketch is uploaded on the board.", "BMx280_I2C.ino shows how to use the BMP280 / BMx280 library with the sensor connected using I2C. Copyright (c) 2018 Gregor Christandl connect the AS3935 to the Arduino like this: Arduino - BMP280 / BME280", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3", "SerialDEBUG->begin(DEBUG_BAUD, SERIAL_8N1, SERIAL_TX_ONLY); Print temperature sensor details. Print humidity sensor details. Set delay between sensor readings based on sensor details. sensorDelayMS = 60000;", "A simple server implementation with regex routes: * serve static messages * read GET and POST parameters * handle missing pages / 404s Add buildflag ASYNCWEBSERVER_REGEX to enable the regex support", "no_description", "no_description", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 channelNames used to convert channelNumber into channelName please put in your TV channel names", "#include <lgfx_user/LGFX_ESP32_sample.hpp>", "include the library LR1110 has the following connections: NSS pin:   10 IRQ pin:   2 NRST pin:  3", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP Optional values to override default settings", "no_description", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield Initialize serial: setup SD card don't continue:", "You can change longer or shorter depending on your network response Shorter => more responsive, but more ping traffic Use ping() to test TCP connections WFM_LOGDEBUG1(\"\\nWiFi connected, RSSI:\", WiFi.RSSI()); For general board, this better be 1000 to enable connect the 1st time", "Initialize serial: check for the presence of the shield: don't continue: attempt to connect to Wifi network: Connect to WPA/WPA2 network. Change this line if using open or WEP network:", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Optional values to override default settings #define SPI_HOST            1 #define SPI_CLOCK_MHZ       8 Must connect INT to GPIOxx or not working", "Adafruit_BME680 bme(&Wire1); Adafruit_BME680 bme(BME_CS); Adafruit_BME680 bme(BME_CS, BME_MOSI, BME_MISO,  BME_SCK); Set up oversampling and filter initialization", "libraries Wifi credentials Soil sensor pin Initialize Wi-Fi client Start serial communication", "Initialize sensor Setup to sense up to 18 inches, max LED brightness", "reply to client add to list register events print the SSID of the network you're attached to: print your board's IP address:", "Init fs On the fly decompression", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "if the LED is off turn it on and vice-versa: set the LED with the ledState of the variable:", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "Callback methods prototypes Tasks every 30 seconds for 5 seconds Upon being enabled, tBlink will define the parameters and enable LED blinking task, which actually controls", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 if device switched off...do nothing debounce motionsensor state transitions (same as debouncing a pushbutton)", "Advanced Microcontroller-based Audio Workshop http: https: Part 2-4: Using The Microphone copy the Design Tool code here", "#define HARDWARE_GENERATED_CLOCK Be sure to use the correct pin numbers for your setup. Note that on ATmega328: 17=A3, 16=A2, 15=A1, 14=A0 DA7, DA6, DA5, DA4, DA3, DA2, DA1, DA0, BDIR, BC2, BC1 The following code generates a 1 MHz 50% duty cycle output to be used", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Select the IP address according to your local network Google DNS Server IP channelNames used to convert channelNumber into channelName", "For ESP8266, change for other boards if necessary For ESP8266 Pin                D0(GPIO16)    D1(GPIO5)    D2(GPIO4)    D3(GPIO0)    D4(GPIO2)    D8 EthernetGeneric    X                 X            X            X            X        0 Ethernet_ESP8266   0                 0            0            0            0        0", "Construct object, Embryo(id, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency) put your setup code here, to run once: interruptions pins and configures endstops as OUTPUT Use this function only with the motor outside the axis put your main code here, to run repeatedly:", "no_description", "check for updates add your normal loop code below ...", "libraries Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number APN data initialize the library instance", "Use refresh token and force token to refresh immediately Refresh token, Client ID and Client Secret are required for OAuth2.0 token refreshing. The Client ID and Client Secret can be taken from https: Initialize the FirebaseApp or auth task handler. To deinitialize, use deinitializeApp(app).", "no_description", "Advanced Microcontroller-based Audio Workshop http: https: Part 2-3: Playing Samples WAV files converted to code by wav2sketch", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "#define ASYNC_TCP_SSL_ENABLED       false #define MQTT_HOST         IPAddress(192, 168, 2, 110) ensure we don't reconnect to MQTT when no ETH ensure we don't reconnect to MQTT when no ETH ensure we don't reconnect to MQTT when no ETH", "enable color sensign mode create some variables to store the color data in wait for color data to be ready get the data and print the different channels", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings Configures the Keybus interface with the specified pins. HTTPS root certificate for api.pushbullet.com: Google Trust Services GTS Root R1, expires 2036.06.21", "Globals, used for compatibility with Arduino-style sketches. Create an area of memory to use for input, output, and intermediate arrays. The size of this will depend on the model you're using, and may need to be determined by experimentation. The name of this function is important for Arduino compatibility.", "libraries Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number APN data initialize the library instance", "no_description", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Read and send Sensor data every SENSOR_CHECK_INTERVAL (10) seconds", "the pin that the interrupt is attached to create the APDS9960 object enable proximity mode set the interrupt threshold to fire when proximity reading goes above 175 enable the proximity interrupt", "initialize the robot initialize the screen get some time to place the robot on the ground set the robot in line following mode tell the robot to take a break and stop", "stop task2 as it is no longer needed schedule task1 to be called every 4 seconds but five times only schedule task2 to be called every 500 milliseconds your code can be here", "Update these with values suitable for your network. Callback function In order to republish this payload, a copy must be made as the orignal payload buffer will be overwritten whilst constructing the PUBLISH packet.", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console", "{ \"easeInElastic\",    lgfx::easing::easeInElastic    }, { \"easeInOutElastic\", lgfx::easing::easeInOutElastic }, { \"easeInQuad\",       lgfx::easing::easeInQuad       }, { \"easeOutQuad\",      lgfx::easing::easeOutQuad      }, { \"easeInOutQuad\",    lgfx::easing::easeInOutQuad    },", "Debug Level from 0 to 4 Select the IP address according to your local network Google DNS Server IP Using this if Serial debugging is not necessary or not using Serial port while (!Serial && (millis() < 3000));", "create an amplitude analyzer to be used with the I2S input Open serial communications and wait for port to open: A baud rate of 115200 is used instead of 9600 for a faster data rate on non-native USB ports setup the I2S audio input for 44.1 kHz with 32-bits per sample", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Enter a MAC address and IP address for your controller below.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Use 1 decimal point Use 1 decimal point", "FILE: DHT12_plotter.ino AUTHOR: Rob Tillaart PURPOSE: Demo for DHT12 I2C humidity & temperature sensor note no error checking -- END OF FILE --", "Wifi network station credentials Telegram BOT Token (Get from Botfather) bot.sendMessage(\"25235518\", \"Hola amigo!\", \"Markdown\"); attempt to connect to Wifi network: Check NTP/Time, usually it is instantaneous and you can delete the code below.", "const int myInput = AUDIO_INPUT_MIC; Create the Audio components.  These should be created in the order data flows, inputs/sources -> processing -> outputs Create Audio connections between the components Create an object to control the audio shield.", "This example shows how to copy sheet of spreadsheet to another spreadsheet. For SD/SD_MMC mounting helper For how to create Service Account and how to use the library, go to https: Service Account's client email Service Account's private key", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false From v1.1.0", "==== DEFINES =================================================================================== ==== Debug and Test options ================== #define _TEST_ ===== Debugging macros ======================== ==== INCLUDES ==================================================================================", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "no_description", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 channelNames used to convert channelNumber into channelName please put in your TV channel names", "no_description", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "SafeString_ReadCmds.ino This example takes commmands from the Arduino Monitor input and acts on them the available commands are start stop and reset Commands are delimited by space comma NL or CR, OR no more input for 2sec You can use any Arduino Monitor to line ending setting", "jump to the sketch Reset vector table address address of Reset_Handler is written by the linker at the beginning of the .text section (see linker script) jump to reset handler set values, for flash pointers.", "Example to wipe all data from an already formatted SD. Wait for USB Serial Initialize at the highest speed supported by the board that is not over 50 MHz. Try a lower speed if SPI errors occur. Use wipe() for no dot progress indicator.", "no_description", "GOT FROM ThingsStream! Initialize the SSL client library Arguments: EthernetClient, our trust anchors Loop until we're reconnected Attempt to connect", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "BLYNK_TEMPLATE_ID & BLYNK_DEVICE_NAME can be commented if you wish to use old blynk uncomment this if using Serial for ESP #define EspSerial Serial comment this if using Serial for ESP or Software Serial on Uno, Nano...", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Docs.resetApp(); In case setting the external async result to the sync task (optional)", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "Cancel a timeout before it executes Cancel instantly: t.cancel(timeoutId); Or cancel using another timeout after 3 seconds:", "Feather RP2040 ThinkInk ThinkInk_154_Grayscale4_T8 display(EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY, EPD_SPI); ThinkInk_213_Grayscale4_T5 display(EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY, EPD_SPI); 2.9\" Grayscale Featherwing or Breakout:", "#define USE_NODE_MCU_BOARD #define USE_WITTY_CLOUD_BOARD #define USE_CUSTOM_BOARD see \"Custom board configuration\" in Settings.h This handles the network and cloud connection", "Emulate Serial1 on pins 6/7 if not present don't continue", "Initialize serial Print a welcome message Check if communication with the wifi module has been established Print firmware version on the shield Print required firmware version", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3", "ESP32_LoopTimer.ino LED set for SparkFun ESP32 Thing board install SafeString library from Library manager or from https: to get BufferedOutput. See https: on Arduino Serial I/O that Works", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG setting PWM properties Select the IP address according to your local network Google DNS Server IP", "no_description", "On the top shield, connect two steppers, each with 200 steps On the bottom shield connect a stepper to port M3/M4 with 200 steps And a DC Motor to port M1 turn on the DC motor", "Use these with the Teensy Audio Shield Use these with the Teensy 3.5 & 3.6 SD card #define SDCARD_CS_PIN    BUILTIN_SDCARD #define SDCARD_MOSI_PIN  11 #define SDCARD_SCK_PIN   13", "This example shows how set node's priority and filtering the data based on priority of child nodes. The priority is virtual node with the key \".priority\" and can't see in Console. Since data ordering is not supported in Firebase's REST APIs, then the query result will not sorted. Provide the token generation process info. Provide the RTDB payload printing info and other helper functions.", "no_description", "Connect to WiFi Print the IP address", "Bitcrusher example by Jonathan Payne (Pensive) jon@jonnypayne.com No rights reserved. Do what you like with it. modified for trellis m4 by Dean Miller for Adafruit Create the Audio components. Audio Effect BitCrusher defs here", "no_description", "In ESP32 Core SDK v3.x.x, to use filesystem in this library, the File object should be defined globally and the library's internal defined FS object should be set with this global FS object in fileCallback function. The API key can be obtained from Firebase console > Project Overview > Project settings.", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "Adjust this number for the sensitivity of the 'click' force this strongly depend on the range! for 16G, try 5-10 for 8G, try 10-20. for 4G try 20-40. for 2G try 40-80 0 = turn off click detection & interrupt 1 = single click only interrupt output", "needed for library define your default values here, if there are different values in config.json, they are overwritten. length should be max size + 1 default custom static IP flag for saving data", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "JSON.typeof(jsonVar) can be used to get the type of the variable myObject.hasOwnProperty(key) checks if the object contains an entry for key JSONVars can be printed using print or println JSON.stringify(myVar) can be used to convert the JSONVar to a String myObject.keys() can be used to get an array of all the keys in the object", "if (! ags.begin(&Wire1, 0x1A)) { uncomment to change address, will need to restart and update the begin() argument! ags.setAddress(0x1A); while (1);", "This example requires the TimerThree library. https: Tested on Teensy 3.1  Doesn't work on Teensy 4.1  Works poorly on AVR boards (UNO, Leonardo, Mega, etc.)", "ArduinoJson - arduinojson.org Copyright Benoit Blanchon 2014-2018 MIT License This example shows how to store your project configuration in a file. It uses the SD library but can be easily modified for any other file-system.", "include the library LR1110 has the following connections: NSS pin:   10 IRQ pin:   2 NRST pin:  3", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network start the ethernet connection and the server Use random mac Use Static IP", "if you define WIFI_SSID and WIFI_PASS before importing the library, you can call connect() instead of connect(ssid, pass) If you set HOSTNAME and your router supports mDNS, you can access the camera at http: camera settings", "Teensy 3.x/LC single point calibration example", "Blocking authentication handler with timeout The JWT token processor required for ServiceAuth and CustomAuth authentications. JWT is a static object of JWTClass and it's not thread safe. In multi-threaded operations (multi-FirebaseApp), you have to define JWTClass for each FirebaseApp, and set it to the FirebaseApp via FirebaseApp::setJWTProcessor(<JWTClass>), before calling initializeApp.", "Passing PSI to readPressure(...) allows you to read the sensor values in imperial units print the sensor value print the sensor value print an empty line", "Select a test server address char GET_ServerAddress[]      = \"192.168.2.110/\"; 600s = 10 minutes to not flooding, 60s in testing Uncomment for certain HTTP site to optimize #define NOT_SEND_HEADER_AFTER_CONNECTED        true", "The API key can be obtained from Firebase console > Project Overview > Project settings. Define the project location e.g. us-central1 or asia-northeast1 */ https: ServiceAuth is required for Google Cloud Functions functions. Binding the FirebaseApp for authentication handler.", "no_description", "On ESP8266: EspSoftwareSerial loopback for remote source (loopback.ino), or hardware loopback. Connect source D5 (rx) to local D8 (tx), source D6 (tx) to local D7 (rx). Hint: The logger is run at 9600bps such that enableIntTx(true) can remain unchanged. Blocking interrupts severely impacts the ability of the EspSoftwareSerial devices to operate concurrently", "Uncomment/comment if needed Neural network architecture Total number of layers in the network The weights obtained by training The biases obstained by training", "FinalDamperControl.ino has extra calls to runStepper() in the loop(). on UNO runStepper() called every 1ms i.e. max 1000 steps/sec consistently install SafeString library from Library manager or from https: the loopTimer, BufferedOutput, SafeStringReader and millisDelay are all included in SafeString library V3+", "Configure the RPC controller Enable the 5V power rail Power on the MKR on connector 2 Wait for MKR2 to power-on Init the I2C bus", "DCC codes Commanders Accessories Drivers Setup", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "FILE: DHT20.ino AUTHOR: Rob Tillaart PURPOSE: Demo for DHT20 I2C humidity & temperature sensor URL: https: Always check datasheet - front view", "#include \"SPIFFS.h\" #define CONFIG_LITTLEFS_FOR_IDF_3_2 We start by connecting to a WiFi network", "check if chName already exists create a new channel devWiFiConnected = wifiProvisioning(rebootPin, led); ********************************************** send a message to the channel", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network message += server.uri(); start the ethernet connection and the server Use random mac", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 if device switched off...do nothing debounce motionsensor state transitions (same as debouncing a pushbutton)", "query the number of bytes available read into the sample buffer String to calculate the local and device name", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set. Large data transmission may require larger RX buffer, otherwise connection issue or data read time out can be occurred.", "SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9 DIO1 pin:  3", "Bridge takes about two seconds to start up it can be helpful to use the on-board LED as an indicator for when it has initialized Initialize the client library Make a HTTP request:", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Choose wifi_sec from LWIFI_OPEN, LWIFI_WPA, or LWIFI_WEP", "read the PC's volume setting scale to a nice range (not too loud) and adjust the audio shield output volume scale 0 = 1.0 range to: 0.3 = almost silent", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "First DEFINE the components of the library we're going to use for this sketch Define #USE_ALB_LCD_I2C to include the LCD functions of the ArduinoLearningBoard Library (Must do this before including ArduinoLearningBoard.h) NOW include the main ArduinoLearningBoard library Based on the defines above, the appropriate modules will be added to the project", "This example shows how to create two instances of the library to create a merger. There are two MIDI couples of IO, A and B, each using thru and merging with the input from the other node. The result is the following: A out = A in + B in B out = B in + A in", "Try to connect to a wifi network Give the ESP some time to connect if first button is pressed, increment the counter if second button is pressed, decrement the counter", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3 Optional values to override default settings", "enable this include if using esp8266 esp8266 SS (wemos mini) function to handle file select declared here and implemented bellow because we need to give it as event handler for `filePickMenu`", "Initializing communication with CS5490 600 is the default baud rate velocity. Initializing communication arduino/PC to show results in Monitor Serial Changing BaudRate of CS5490 to 115200 Set to continous conversion", "Disconnect WiFi Change handler to handle websockets changes Connect WiFi Connect WIFI ? Check connection", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings Configures the Keybus interface with the specified pins. HTTPS root certificate for api.twilio.com: DigiCert Global Root CA, expires 2031.11.10", "Adafruit_ADXL343 accel = Adafruit_ADXL343(12345, &Wire1); accel.setRange(ADXL343_RANGE_8_G); accel.setRange(ADXL343_RANGE_4_G); accel.setRange(ADXL343_RANGE_2_G);", "include the library no need to configure pins, signals are routed to the radio internally set RF switch configuration for Nucleo WL55JC1 NOTE: other boards may be different! Some boards may not have either LP or HP.", "i2c You can also use software SPI Adafruit_LSM9DS0 lsm = Adafruit_LSM9DS0(13, 12, 11, 10, 9); Or hardware SPI! In this case, only CS pins are passed in Adafruit_LSM9DS0 lsm = Adafruit_LSM9DS0(10, 9);", "BlinkDelay_Task.ino Blinks Led using delay (bad) install the loopTimer library from https: loopTimer.h also needs the millisDelay library installed from https: the setup function runs once when you press reset or power the board", "set not so bright! use a pin for the built in encoder switch get starting position did we move arounde? change the neopixel color", "DHT Temperature & Humidity Sensor Unified Sensor Library Example Written by Tony DiCola for Adafruit Industries Released under an MIT license. REQUIRES the following Arduino libraries:", "A simple server implementation with regex routes: * serve static messages * read GET and POST parameters * handle missing pages / 404s Add buildflag ASYNCWEBSERVER_REGEX to enable the regex support", "Drive the NXT/STEP and DIR pins low initially. Give the driver some time to power up. Reset the driver to its default settings. Set the current limit.  You should change the number here to an appropriate value for your particular system.", "The API key can be obtained from Firebase console > Project Overview > Project settings. Define the project location e.g. us-central1 or asia-northeast1 */ https: ServiceAuth is required for Google Cloud Functions functions. Binding the FirebaseApp for authentication handler.", "set radio receiver parameters - see comments below remember to set the same radio parameters in transmitter and receiver boards! start radio module tests", "TODO: add a test for getDirection When developing theses tests for the AMIS-30543, we found that a delay of 15 microseconds between changing NXT and reading the microstepping position was too short (resulting in getting the old microstepping position instead of the new one).  A", "In order to set SSID and password open the /setup webserver page const char* ssid; const char* password; Timezone definition to get properly time from NTP server FILESYSTEM INIT", "SD chip select pin file system object define a serial output stream ------------------------------------------------------------------------------ create dir if needed", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. config.cert.file = \"/cert.cer\"; config.cert.file_storage = mem_storage_type_flash; Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager", "include the library nRF24 has the following connections: CS pin:    10 IRQ pin:   2 CE pin:    3", "Simple performance test for Teensy 3.5/3.6 4.0 SDHC. Demonstrates yield() efficiency for SDIO modes. Use built-in SD for SPI modes on Teensy 3.5/3.6. Teensy 4.0 use first SPI port. SDCARD_SS_PIN is defined for the built-in SD on some boards.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection setup SinricPro", "This sample sketch connects to SSL website (https: Debug Level from 0 to 4 Select the IP address according to your local network Google DNS Server IP Initialize the SSL client library", "For SAMD21 and SAMD51  boards. To be changed and added as necessary Just need to do something such as Just need assign some pin, such as Just need assign some pin, such as Just need assign some pin, such as", "Basic demo for tap/doubletap readings from Adafruit MSA301 Try to initialize!", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "wifi_basic.ino #define NVSERASE Serial.println(WiFi.localIP()); / BUG WiFi.enableSTA(false);", "LunaSat Solar Panel Voltage Reader (modified arduino analog example) Note: P8 Jumper must be connected. Initialize serial communication at 9600 bits per second: The loop routine runs over and over again forever: Read the input on analog pin 0:", "IDs of the displayed directional UI buttons", "----------------------------------------------------------------------------- This function will be automatically called when a NoteOn is received. It must be a void-returning function with the correct parameters, see documentation here: https:", "onetime-measure:", "include the library SX1262 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "initialize serial for ESP module initialize ESP module check for the presence of the shield don't continue attempt to connect to WiFi network", "we are going to use the serial communication as a way to see on the PC what is happening on the Arduino", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings put your main code here, to run repeatedly:", "check for the presence of the shield: attempt to connect to WiFi network: Connect to WPA/WPA2 network. Change this line if using open or WEP network: wait 10 seconds for connection: if the current line is blank, you got two newline characters in a row.", "set up the heart servo on SERVO_PULSE set servo position to pos (90 degrees, mid position) Configure the PulseSensor manager. Now that everything is ready, start reading the PulseSensor signal. Flash the led to show things didn't work.", "Update function should be continuously polled Accelerometer values Gyroscope values", "Set DEBUG to true in order to enable debug print Update and then sleep", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Optional values to override default settings #define SPI_HOST            1 #define SPI_CLOCK_MHZ       8 Must connect INT to GPIOxx or not working", "#define SERIAL_DEBUG In order to use software serial, you will need to compile this sketch with Arduino IDE v1.6.6 or higher. Hardware serial should work back to Arduino 1.0. #include \"utility/SerialFirmata.h\" follow the instructions in wifiConfig.h to configure your particular hardware", "This file is intentionally left blank. Arduino IDE plays some dirty tricks on the main sketch .ino file: it rearranges #includes, blindly creates forward definitions, includes every file in the project that does not have .c or .cpp file extension.", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "no_description", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection setup SinricPro", "include the library CC1101 has the following connections: CS pin:    10 GDO0 pin:  2 RST pin:   unused", "OLED SSD1306 128x32 Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag.", "#include \"Botletics_modem.h\" Required for Serial on Zero based boards Define *one* of the following lines: #define SIMCOM_2G #define SIMCOM_3G", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "Simple tutorial on how to receive and send MIDI messages on a different serial port, using SoftwareSerial. Here, when receiving any message on channel 4, the Arduino will blink a led and play back a note for 1 second.", "initialize Serial comunication wait for the serial port to connect. Needed for Native USB only print instructions in the Serial Monitor initialize the Accessory Shield library while there are incoming bytes (characters) ...", "Remote Control - As The Controller Device This script configures your Arduino to remotely control another Arduino. This script is designed to pair with \"arduino_to_arduino_communication_as_the_remote_device.ino\" example sketch included with this library. Call Back Handlers", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct to store measurement from powersensor this is where you read from power sensor", "initialize the serial communication: read the sensor into a variable: map the sound level to a brightness level for the LED: write the brightness to the green LED: print the microphone levels and the LED levels (to see what's going on):", "Callback methods prototypes Tasks comment this line out if you want to test t2's 500 ms explicit delay as-is this delay tests that task in catch up mode will prevent explicit tickless delay", "Wait for Serial or start after 2.5s Set the PMC Communication Protocols to default config RS485/RS232 default config is: - RS485/RS232 system disabled - RS485 mode", "For Teensy 4.1 Use true for NativeEthernet Library, false if using other Ethernet libraries Only one of the following to be true. Only one of the following to be true. Enter a MAC address and IP address for your controller below.", "include the library SX1280 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "Only to deal with ESP8266 core v3.0.0 warning in Ticker library Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change. report status to Blynk Debug console", "Uncomment for certain HTTP site to optimize #define NOT_SEND_HEADER_AFTER_CONNECTED        true Level from 0-4 Select a test server address use your own thing name here", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). define pins (varies per shield/board) create ble serial instance, see pinouts above Debug console", "no_description", "You can use Ethernet.init(pin) to configure the CS pin Ethernet.init(10); Ethernet.init(5); Ethernet.init(0); Ethernet.init(20);", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Micro-RTSP from https: Select your camera model #define T_Camera_V16_VERSION", "file name to use for writing File object to represent file string to buffer output last time data was written to card: Open serial communications and wait for port to open:", "initializing output and menu nav without macros define output device define outputs controller define navigation root and aux objects", "include the library LR1110 has the following connections: NSS pin:   10 IRQ pin:   2 NRST pin:  3", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Docs.resetApp(); In case setting the external async result to the sync task (optional)", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set. Large data transmission may require larger RX buffer, otherwise connection issue or data read time out can be occurred.", "Empty file with name LowLatencyLoggerADXL345.ino to make IDE happy.", "Input a value 0 to 255 to get a color value. The colors are a transition r - g - b - back to r.", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS base URL for SockJS (websocket) connection", "Demonstrate how to use FlashStorage_SAMD with an API that is similar to the EEPROM library to Store and retrieve structured data. #define EEPROM_EMULATION_SIZE     (4 * 1024) Use 0-2. Larger for more debugging messages To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error Create a structure that is big enough to contain a name", "This example shows how to remove the topic subscription for the IID tokens. Library allows your ESP device to interact with FCM server through FCM Server protocols. https: This means your device now is not a FCM app client and unable to get the notification messages. The device registration tokens used in this example were taken from the FCM mobile app (Android or iOS)", "the LED pin to use as output sample rate for the input size of the FFT to compute size of the spectrum output, half of FFT size frequency of whistle to detect", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries You have to add initialization for your Custom Ethernet here This is just an example to setCSPin to USE_THIS_SS_PIN, and can be not correct and enough Ethernet.init(USE_THIS_SS_PIN);", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our speaker Speaker device callbacks", "#include <menuIO/encoderIn.h> #include <menuIO/keyIn.h> #define USE_PCD8544 rotary encoder pins #define encA    2", "First DEFINE the components of the library we're going to use for this sketch Define #USE_ALB_LCD_I2C to include the LCD functions of the ArduinoLearningBoard Library (Must do this before including ArduinoLearningBoard.h) NOW include the main ArduinoLearningBoard library Based on the defines above, the appropriate modules will be added to the project", "GUItool: begin automatically generated code GUItool: end automatically generated code const int myInput = AUDIO_INPUT_MIC; The scale sets how much sound is needed in each frequency range to show all 8 bars.  Higher numbers are more sensitive.", "This example shows how to subscribe the topic for the IID tokens. Library allows your ESP device to interact with FCM server through FCM Server protocols. https: This means your device now is not a FCM app clizent and unable to get the notification messages. The device registration tokens used in this example were taken from the FCM mobile app (Android or iOS)", "This example can have just about any frequency for the callback automatically calculated! timer tester the timer callback Set up the flexible divider/compare", "no_description", "Test code for the file chooser the setup function runs once when you press reset or power the board while (!Serial) delay(10); wait for button release", "A basic everyday NeoPixel strip test program. NEOPIXEL BEST PRACTICES for most reliable operation: - Add 1000 uF CAPACITOR between NeoPixel strip's + and - connections. - MINIMIZE WIRING LENGTH between microcontroller board and first pixel. - NeoPixel strip's DATA-IN should pass through a 300-500 OHM RESISTOR.", "Do not alter this file!", "Define for your board, not all have built-in LED:", "<<<<<<<<<<<<<<<<<<<<<<<<<< Setup >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> <<<<<<<<<<<<<<<<<<<<<<<<<<<< Loop >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>", "include the EduIntro library define the song as (note, duration) pairs note durations: 4 = quarter note, 8 = eighth note, etc. add the NULL to signify the end of the array nothing here", "Adafruit_WavePlayer example using the simplePlayer() function. This is much easier to use than other methods, but has some limitations: - The function \"blocks\" -- other code can't run while WAV is playing. - WAV playback may be slow, buzz or stutter with high sample rate WAVs. - analogWriteResolution() may be changed within the library -- if you", "These defines must be put before #include <ESP_MultiResetDetector.h> to select where to store MultiResetDetector's variable. For ESP32, You must select one to be true (EEPROM or SPIFFS) For ESP8266, You must select one to be true (RTC, EEPROM, LITTLEFS or SPIFFS) Otherwise, library will use default EEPROM storage", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Change pins according to your boards", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings Configures the Keybus interface with the specified pins. HTTPS root certificate for api.pushover.net: DigiCert Global Root CA, expires 2031.11.10", "initialize the serial communication: read the sensors into variables: convert the sensor readings to light levels: print the light levels (to see what's going on): write the light levels to the LED.", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "Calculate and set the client id used for MQTT Set the message callback, this function is called when the MQTTClient receives a message MQTT client is disconnected, connect poll for new MQTT messages and send keep alives", "initialize serial for ESP module initialize ESP module don't continue Check for New Ip Every 10 mins.", "Dependencies Instantiate TMP117 class with id of one and debugging set to true Initiate LunaSat Radio (SX1272 Transciever) Initialize buffer and string variables used in data conversion for transmission Observation Configuration", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Process start time Do nothing", "Define for your board, not all have built-in LED and/or button: D8F15B Sonoff (Expressif Inc) - see: http:", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards assume a true response for any headers not handled by this validator", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. isButtonPressed = !digitalRead(BUTTON_PIN);", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3", "Can be included as many times as necessary, without `Multiple Definitions` Linker Error start reading from the first byte (address 0) of the FlashStorage", "Update actual data in charts Update prediction values in UI Update predicted data in charts", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network start the ethernet connection and the server Use random mac Use Static IP", "Use the MD_MAX72XX library to Display a Daft Punk LED Helmet If RUN_DEMO is set to zero the display cycles changes triggered by a switch on the MODE_SWITCH pin. This can be substituted for any trigger as implemented by the helmet wearer. If RUN_DEMO is set to 1 the sketch will cycle each element of the display every", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries You have to add initialization for your Custom Ethernet here This is just an example to setCSPin to USE_THIS_SS_PIN, and can be not correct and enough Ethernet.init(USE_THIS_SS_PIN);", "const int FlashChipSelect = 21; uncomment these if using Teensy audio shield SPI.setSCK(14); SPI.setMOSI(7); uncomment these if you have other SPI chips connected", "Set the RTC only when LCD's PowerOn button is pressed. YMMV. Enables Alarm on the RTC Set the minutes at which the alarm should rise Trigger in a minute", "load the DC motor implementation first speed can go up to 255 blinky shit _______________________________________________________________________ Sonar Navigation", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Change pins according to your boards", "Construct object, StepMotor(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency Stop Button) Construct object, Embryo(axisX, axisY, Start Button, Emergency Stop Button) The start button is attached to the interrupt service routine that enables the motor and runs the homing procedure", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP", "--------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------- --------------------------------------------------------------------------------------- Uncomment one of these sounds to test notefreq", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our fan fanSpeed (1..3)", "Construct object, Embryo(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency) put your setup code here, to run once: Without this instruction the motor will move after the upload (It is dangerous)", "Start TFT and fill black Turn on backlight", "customizing a prompt look! by extending the prompt class this prompt will count seconds and update himself on the screen. when menu is suspended this function is called when entering or leaving suspended state", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "Note: Must use Seeed_Arduino_mbedtls-dev Library version to avoid \"esp_system.h\" error Select the IP address according to your local network IPAddress clientIP(192, 168, 2, 225); send message to server when Connected send message to server", "telnet defaults to port 23 WFM_LOGDEBUG1(\"\\nWiFi connected, RSSI:\", WiFi.RSSI()); For general board, this better be 1000 to enable connect the 1st time Check WiFi every WIFICHECK_INTERVAL (1) seconds. Print hearbeat every HEARTBEAT_INTERVAL (10) seconds.", "USBHost is defined in usbh_helper.h --------------------------------------------------------------------+ Using Host shield MAX3421E controller --------------------------------------------------------------------+ init host stack on controller (rhport) 1", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define array of supported color temperatures a map used to convert a given color temperature into color temperature index (used for colorTemperatureArray)", "initialize serial for ESP module initialize ESP module don't continue Check for New Ip Every 10 mins.", "first create a rectangular GFXcanvas8SerialDemo object and draw to it print it out rotated print it out unrotated Demonstrate GFXcanvas1SerialDemo Demonstrate GFXcanvas16SerialDemo", "Position control", "BMP280_DEV - I2C Communications (Alternative Address), Default Configuration, Normal Conversion bmp280.setPresOversampling(OVERSAMPLING_X4); bmp280.setTempOversampling(OVERSAMPLING_X1); bmp280.setIIRFilter(IIR_FILTER_4);", "Helper functions declarations Create an object of the class Bsec Entry point for the example Print the header Function that is looped forever", "Define for your board, not all have built-in LED and/or button:", "#warning Using LAN8742A Ethernet & STM32Ethernet lib SETTINGS URL for STOMP endpoint. For the default config of Spring's STOMP support, the default URL is \"/socketentry/websocket\". VARIABLES", "Adafruit Internal Flash FatFs Simple Datalogging Example Author: Tony DiCola, Ha Thach This is a simple example that opens a file and prints its entire contents to the serial monitor.  Note that you MUST have a flash chip that's formatted with a flash", "grab core from https: compile me with target arduino:samd:mkrmotorshield:bootloader=0kb,pinmap=complete,lto=disabled during development compile me with target arduino:samd:mkrmotorshield:bootloader=4kb,pinmap=complete,lto=enabled for release temp_init(); empty buffer", "In ESP32 Core SDK v3.x.x, to use filesystem in this library, the File object should be defined globally and the library's internal defined FS object should be set with this global FS object in fileCallback function. The API key can be obtained from Firebase console > Project Overview > Project settings.", "The SSD1331 is connected like this (plus VCC plus GND) connect a push button to ... SSD1331 color definitions The colors we actually want to use declare the display", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our fan fanSpeed (1..3)", "if you don't want to use DNS (and reduce your sketch size) use the numeric IP instead of the name for the server: IPAddress server(74,125,232,128); Initialize the Ethernet client library with the IP address and port of the server", "Include the (new) library Pin definition Initialize both motors Used to display information Wait for Serial Monitor to be opened", "Only the $GPRMC message is parsed. #define TEST_DATA UTC date/time could do these checks also BUT SafeString will just return empty sfCheckSumHex and so fail to hexToLong conversion below", "This example is supposed to work on all boards that use the WiFi.h header file, such as Portenta, ESP32 and more. Wait until the serial port is connected Configure the known networks (first one gets higher priority) Connect to the first available network", "no_description", "Initialize Bridge Initialize Serial Wait until a Serial Monitor is connected. run various example processes Do nothing here.", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries You have to add initialization for your Custom Ethernet here This is just an example to setCSPin to USE_THIS_SS_PIN, and can be not correct and enough Ethernet.init(USE_THIS_SS_PIN);", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Change pins according to your boards", "Select your modem: #define TINY_GSM_MODEM_SIM808 #define TINY_GSM_MODEM_SIM868 #define TINY_GSM_MODEM_SIM900 #define TINY_GSM_MODEM_SIM7000", "Example of using the non-volatile RAM storage on the DS1307. You can write up to 56 bytes from address 0 to 55. Data will be persisted as long as the DS1307 has battery power. Print old RAM contents on startup. Write some bytes to non-volatile RAM storage.", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings two SafeStrings equal: two SafeStrings not equal: two SafeStrings not equal (case sensitivity matters):", "no_description", "Create 2nd instance of CDC Ports. for ESP32, we need to specify instance number when declaring object check to see if multiple CDCs are enabled initialize 2nd CDC interface If already enumerated, additional class driverr begin() e.g msc, hid, midi won't take effect until re-enumeration", "#define i2c_Address 0x3d Show image buffer on the display hardware. Since the buffer is intialized with an Adafruit splashscreen internally, this will display the splashscreen. display.setContrast (0);", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Use 1 decimal point Use 1 decimal point", "Variable to store the battery voltage Variable to change the motor speed and direction Establishing the communication with the Motor Carrier Serial port initialization Reboot the motor controller; brings every value back to default", "This example USES the ADC function. LIS.begin(WIRE, 0x19); LIS.setFullScaleRange(LIS3DHTR_RANGE_2G); LIS.setFullScaleRange(LIS3DHTR_RANGE_4G); LIS.setFullScaleRange(LIS3DHTR_RANGE_8G);", "no_description", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "This example requires the Teensy_PWM library. https: Tested on Teensy 4.1  Doesn't work on Teensy 3.1 (most likely due to a bug in Teensy_PWM) KhoihTicker can only work with StepperDriver", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Blynk cloud server Network settings", "see the tutorial https: Pin 13 has an LED connected on most Arduino boards. if using Arduino IDE 1.5 or above you can use pre-defined LED_BUILTIN  instead of 'led' got a char handle it", "Arduino-misakiUTF16 need misakifont to run this example. URL : https: Arduino-misakiUTF16include Include the font data of Arduino-misakiUTF16.", "Basic demo for accelerometer readings from Adafruit MSA301 Try to initialize! msa.setDataRate(MSA301_DATARATE_31_25_HZ); msa.setPowerMode(MSA301_SUSPENDMODE); msa.setBandwidth(MSA301_BANDWIDTH_31_25_HZ);", "Program to exercise the MD_MAX72XX library Uses most of the functions in the library Turn on debug statements to the serial output Define the number of devices we have in the chain and the hardware interface NOTE: These pin numbers will probably not work with your hardware and may", "FILE: DHT20_plotter.ino AUTHOR: Rob Tillaart PURPOSE: Demo for DHT20 I2C humidity & temperature sensor URL: https: Always check datasheet - front view", "#define EEPROM_EMULATION_SIZE     (4 * 1024) Use 0-2. Larger for more debugging messages To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error One simple call, with the address first and the object second. Data to store.", "Wifi network station credentials Telegram BOT Token (Get from Botfather) attempt to connect to Wifi network: Check NTP/Time, usually it is instantaneous and you can delete the code below.", "no_description", "#define MQTT_HOST         IPAddress(192, 168, 2, 110) ensure we don't reconnect to MQTT when no ETH ensure we don't reconnect to MQTT when no ETH ensure we don't reconnect to MQTT when no ETH To be called before ETH.begin()", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection setup SinricPro", "Using pin 13 will crash ESP32_C3 Open serial communications and wait for port to open: initialize serial for ESP module initialize ESP module check for the presence of the shield", "Adafruit SPI Flash FatFs Full Usage Example Author: Tony DiCola This is an example of all the functions in the SPI Flash FatFs library.  Note that you MUST have a flash chip that's formatted with a flash filesystem before running.  See the", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for WiFi connection", "beginPacket fails if remote ethaddr is unknown. In this case an arp-request is send out first and beginPacket succeeds as soon the arp-response is received. check for new udp-packet: finish reading this packet:", "call my function 'task1' every 3 seconds your code can be here", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Deprecated echo.websocket.org to be replaced", "#warning Using LAN8742A Ethernet & STM32Ethernet lib base URL for SockJS (websocket) connection The complete URL will look something like this(cf. http: ws: For the default config of Spring's SockJS/STOMP support, the default base URL is \"/socketentry/\".", "Put your target table here Put your JSON that you want to insert rows You can also use library like ArduinoJson generate this", "echo.websocket.org is not working anymore.Please use your local WS server print the SSID of the network you're attached to: you're connected now, so print out the data print the received signal strength: initialize serial for ESP module", "no_description", "Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change. report status to Blynk Debug console From v1.0.5", "Include the library Pin definition Create one motor instance Used to display information Wait for Serial Monitor to be opened", "if you define WIFI_SSID and WIFI_PASS before importing the library, you can call connect() instead of connect(ssid, pass) If you set HOSTNAME and your router supports mDNS, you can access the camera at http: camera settings", "SerialDEBUG->begin(DEBUG_BAUD, SERIAL_8N1, SERIAL_TX_ONLY); ESP.deepSleep(300000000); ESP.deepSleep(300000000); define node \"bell\"", "This example shows how to set and delete data with checking the matching between node path ETag (unique identifier string) and provided Etag Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino", "change this to the number of steps on your motor create an instance of the stepper class, specifying the number of steps of the motor and the pins it's attached to the previous reading from the analog input", "Start NTP only after IP network is connected Manage network disconnection NTP.stop(); Deprecated Serial.println(millis() - last);", "WiThrottleProtocol library: Loco control example Shows how to control a single loco Tested with ESP32-WROOM board Peter Akers (Flash62au), Peter Cole (PeteGSX) and Chris Harlow (UKBloke), 2023 Luca Dentella, 2020", "no_description", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 if device switched off...do nothing debounce motionsensor state transitions (same as debouncing a pushbutton)", "#define DEBUG 0 query the number of bytes available read into the sample buffer String to calculate the local and device name", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield Set the static IP address to use if the DHCP fails to assign send message to server when Connected send message to server", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Enter a MAC address and IP address for your controller below.", "Advanced Microcontroller-based Audio Workshop http: https: Part 3-2: Fourier Transform copy the Design Tool code here", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" This function will run every time Blynk connection is established get data stored in virtual pin V0 from server", "Test code for Adafruit GPS modules using MTK3329/MTK3339 driver This code turns on the LOCUS built-in datalogger. The datalogger turns off when power is lost, so you MUST turn it on every time you want to use it! Tested and works great with the Adafruit Ultimate GPS module", "payloadLenght bytes of data follows... Read command Convert parameters from network byte order to cpu byte order Read payload Allocated statically so the compiler can tell us", "First DEFINE the components of the library we're going to use for this sketch Define #USE_ALB_DS1302 to include the DS1302  functions of the ArduinoLearningBoard Library (Must do this before including ArduinoLearningBoard.h) NOW include the main ArduinoLearningBoard library (quotes now, <Arduino...> when it's \"live\") Based on the defines above, the appropriate code will be added to the project", "SDA = 0, SCL = 2 set the Ds3131 with a specific UnixTimestamp ==>  \tTue Aug 16 2022 10:00:00 GMT+0000 - weekday 2 (0 = Sunday); CW 33 ==>    1660644000 feed UnixTimeStamp and don' t use localtime", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings bool haveToken = sfLine.nextToken(field, delimiters, true, true, true); nothing here", "initialize the robot initialize the screen read the value of the potentiometer print the value to the TFT screen set the same speed on both of the robot's wheels", "Your board <-> ESP_AT baud rate: initialize serial for ESP module", "lock communication here unlock communication here if inverted: pixBuf >>= 1 if inverted: pixBuf = 192", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false From v1.1.0", "LunaSat ship code put your main code here, to run repeatedly:", "Deprecated echo.websocket.org to be replaced To run a local WebSocket Server KH sendTXTMessage every SEND_INTERVAL (30) seconds. webSocket.sendTXT(\"message here\");", "Dummy file to placify the silly Arduino IDE. Do not delete unless you know what you do.", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Your WiFi credentials. Set password to \"\" for open networks. Debug console", "#define MQTT_HOST         IPAddress(192, 168, 2, 110) print the SSID of the network you're attached to: print your board's IP address: print the received signal strength: check for the WiFi module:", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection get a new Blinds device from SinricPro", "Pin Description for this screen: https: GND - GND VCC - 3.3v SCK - TFT_SCLK 5", "10 Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "Initialize serial and wait for port to open: Defined in thingProperties.h Connect to Arduino IoT Cloud", "The API key can be obtained from Firebase console > Project Overview > Project settings. Initialize the FirebaseApp or auth task handler. To deinitialize, use deinitializeApp(app). To get the authentication time to live in seconds before expired. app.ttl();", "This sketch sends a raw signal using the PWM sender every 5 seconds. It requires an IR-Led connected to the sending pin (3 on Uno/Nano, 9 on Leonardo/Uno, 9 on Mega2560 etc...) Just for the fun of it, the duty cycle is selected randomly. NEC(1) 122 29 with no repetition; powers on many Yamaha receivers", "HID report descriptor using TinyUSB's template USB HID objects the setup function runs once when you press reset or power the board Manual begin() is required on core without built-in support e.g. mbed rp2040 HID Keyboard", "no_description", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Docs.resetApp(); In case setting the external async result to the sync task (optional)", "Low Power Tickers for timed actions Event queue for managing IRQ-Unsafe tasks Serial Flash management Use a Mutex to coordinate reads and writes to SPIF storage Button statuses", "include the library this file contains binary patch for the SX1262 SX1262 has the following connections: NSS pin:   10 DIO1 pin:  2", "wifimanager can run in a blocking mode or a non blocking mode Be sure to know how to process loops with no delay() if using non blocking wm.resetSettings(); add a custom input field new (&custom_field) WiFiManagerParameter(\"customfieldid\", \"Custom Field Label\", \"Custom Field Value\", customFieldLength,\"placeholder=\\\"Custom Field Placeholder\\\"\");", "Require keyboard control library Initialize USB Controller Attach keyboard controller to USB This function intercepts key press This function intercepts key release", "Globals, used for compatibility with Arduino-style sketches. Create an area of memory to use for input, output, and intermediate arrays. The size of this will depend on the model you're using, and may need to be determined by experimentation. Whether we should clear the buffer next time we fetch data", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct for the std::map below this is the main configuration", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console Blynk will work through Serial Do not read or write this serial manually in your sketch", "Setting to true will need to upload contents of /data directory to esp SPIFFS using image upload #define BODY_FILE_NAME \"/src/test.html\" Toggle led on/off and send pin update A key is changed by web sockets", "Display the settings. Set up what we want to send. See ir_Samsung.cpp for all the options. Turn the A/C unit on and set to cooling mode. Increase the fan speed.", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip); read the status code and body of the response", "For transport=websocket instead of transport=polling Select the IP address according to your local network Google DNS Server IP #define USE_SSL         false To run a local WebSocket Server", "----------------------------------------------------------------------- Sample tests which are the targets of the various include() and exclude() ----------------------------------------------------------------------- ----------------------------------------------------------------------- Helper macros and test() to verify that the include() and exclude() methods", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Debug console You can also specify server:", "Serial.println(millis() - last);", "Adafruit_ImageReader test for Adafruit E-Ink Gizmo for CircuitPlayground. Demonstrates loading images to the screen, to RAM, and how to query image file dimensions. Requires BMP file in root directory of QSPI Flash: blinka.bmp.", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings Configures the Keybus interface with the specified pins. HTTPS root certificate for www.pushsafer.com: ISRG Root X1, expires 2035.06.04", "Wifi network station credentials Telegram BOT Token (Get from Botfather) Inline buttons with callbacks when pressed will raise a callback_query message Set WiFi to station mode and disconnect from an AP if it was Previously connected attempt to connect to Wifi network:", "initialize serial communications at 9600 bps store the ldr values into a variable called brightnessVal set the led brightness to have it at full brightness when it's dark, uncomment this line:", "include the library LR1110 has the following connections: NSS pin:   10 IRQ pin:   2 NRST pin:  3", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "FILE: uvi_plotter.ino AUTHOR: Rob Tillaart PURPOSE: demo UV sensor URL: https: Use the Arduino IDE -> Tools -> Serial plotter", "First DEFINE the components of the library we're going to use for this sketch Define #USE_ALB_SevenSegment to include the 7-Segment Display functions of the ArduinoLearningBoard Library (Must do this before including ArduinoLearningBoard.h) NOW include the main ArduinoLearningBoard library (quotes now, <Arduino...> when it's \"live\")", "filename of wave file to play variable representing the Wave File Open serial communications and wait for port to open: setup the SD card, depending on your shield of breakout board you may need to pass a pin number in begin for SS", "Definities Aantal rijen displays (Voor de A-Vision ESP8266 learning board is dat 1) Aantal kolommen displays (Voor de A-Vision ESP8266 learning board is dat 1) Digitale ingang voor de drukknop (Vrije keuze) Includes", "Construct object, StepMotor(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency Stop Button) Construct object, Embryo(axisX, axisY, Start Button, Emergency Stop Button) The start button is attached to the interrupt service routine that enables the motor and runs the homing procedure", "initialise le poussoir comme entre Selon l'tat du bouton, on allume ou teint la DEL", "Demonstrates the Pronto class: Three different forms of parsing (RAM string, explicit PROGMEM, F(.)-form), as well as the output function. Read a pronto string from RAM (normally highly wasteful with RAM). Read a signal from (explicit) PROGMEM", "no_description", "Instantiating a Fuzzy object Set the Serial output Set a random seed Instantiating a FuzzyInput object Instantiating a FuzzySet object", "Report ID HID report descriptor using TinyUSB's template USB HID object. For ESP32 these values cannot be changed after this declaration desc report, desc len, protocol, interval, use out endpoint the setup function runs once when you press reset or power the board", "no_description", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Define Firebase Data objects Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager", "Teensy 4 CPU Throttling at high temperature This example only works for Teensy 4 - it will not compile for Teensy 3. It sets the clock to 600 MHz until the CPU temperature gets above 45C, then sets the clock to 150 MHz until it cools to 40C, and repeats. set an alarm at high temperature", "Adafruit Motor shield library copyright Adafruit Industries LLC, 2009 this code is public domain, enjoy! DC motor on M2 DC hobby servo", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for setupEthernet connection ETHERNET_USE_RPIPICO, use default SS = 5 or 17", "Simple ZeroDMA example -- an equivalent to the memcpy() function. Decause it uses DMA, unlike memcpy(), your code could be doing other things simultaneously while the copy operation runs. The memory we'll be moving: Callback for end-of-DMA-transfer", "For the breakout, you can use any 2 or 3 pins These pins will also work for the 1.8\" TFT shield For the breakout board, you can use any 2 or 3 pins. These pins will also work for the 1.8\" TFT shield. Option 1 (recommended): must use the hardware SPI pins", "Using pin 13 will crash ESP32_C3 String out; out.reserve(ORIGINAL_STR_LEN); initialize serial for ESP module initialize ESP module", "Enter an IP address for your controller below. The IP address will be dependent on your local network. gateway and subnet are optional: telnet defaults to port 23 initialize the Ethernet device", "Try to connect to a wifi network Give the ESP some time to connect Check for connection Put a number value in the server with the key \"age\" notify if error occurred", "The API key can be obtained from Firebase console > Project Overview > Project settings. Initialize the FirebaseApp or auth task handler. To deinitialize, use deinitializeApp(app). To get the authentication time to live in seconds before expired. app.ttl();", "Definisikan pin-pin yang akan digunakan Buat objek dari kelas SegmentDisplay dengan nama display panggil fungsi testDisplay untuk menguji tampilan Menampilkan angka 1 Menampilkan angka 2", "no_description", "include the library SX1280 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "Globals, used for compatibility with Arduino-style sketches. An area of memory to use for input, output, and intermediate arrays. The name of this function is important for Arduino compatibility. Set up logging. Google style is to avoid globals or statics because of lifetime uncertainty, but since this has a trivial destructor it's okay.", "#warning Using LAN8742A Ethernet & STM32Ethernet lib Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Serial.println( \"[\" + String(num) + \"] Disconnected!\"); IPAddress ip = webSocket.remoteIP(num);", "-----Custom floatField---------------- menuFieldShadow<T>& s=*(menuFieldShadow<T>*)shadow; bool ed = this == root.navFocus; bool sel=nav.sel==i; -----Custom floatField----------------END", "include the library RF69 has the following connections: CS pin:    10 DIO0 pin:  2 RESET pin: 3", "Adafruit_ImageReader test for Adafruit ILI9341 TFT Shield for Arduino. Demonstrates loading images from SD card or flash memory to the screen, to RAM, and how to query image file dimensions. Requires three BMP files in root directory of SD card: purple.bmp, parrot.bmp and wales.bmp.", "Try playing with different debounceTime settings to see how it affects the number of times per second your loop will run. The library prevents setting it to anything below 1 millisecond. Report the number of times through the loop in 1 second. This will give you a relative idea of just how much the debounceTime has changed the", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Attach virtual serial terminal to Virtual Pin V10 You can send commands from Terminal to your hardware. Just use", "Your board <-> ESP_AT baud rate: initialize serial for ESP module", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Send only if changed Debug console", "send message to server when Connected send message to server webSocket.sendTXT(\"message here\"); send data to server webSocket.sendBIN(payload, length);", "Initialize the Web client object this method makes a HTTP connection to the server close any connection before send a new request this will free the socket on the WiFi shield if there's a successful connection", "Callback methods prototypes Three tasks emulating accidental infinite loop Heartbeat task - resetting the watchdog timer periodically Initiates WDT on enable, and deactivates it on disable Hang if random number between 0 and 19 is 5 (5% probability)", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our fan fanSpeed (1..3)", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "Now that everything is ready, start reading the PulseSensor signal. Flash the led to show things didn't work. write the latest sample to Serial.", "Using port 8883 for MQTTS Adafruit IO Account Configuration (to obtain these values, visit https: WiFiFlientSecure for SSL/TLS support Setup the MQTT client class by passing in the WiFi client and MQTT server and login details.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our fan fanSpeed (1..3)", "no_description", "holds the current upload Print hearbeat every HEARTBEAT_INTERVAL (10) seconds. format bytes Serial.print(F(\"handleFileUpload Data: \")); Serial.println(upload.currentSize); Initialize LittleFS/SPIFFS file-system", "==== DEFINES =================================================================================== ==== Debug and Test options ================== #define _TEST_ ===== Debugging macros ======================== ==== INCLUDES ==================================================================================", "Print date... ...and time", "Callback methods prototypes Tasks", "Uncomment line below if your SensorKit is the variant with the DHT20 sensor (It's marked IIC on the PCB and has a black cover, while the DHT11 sensor has a blue cover.) #define Environment Environment_I2C Uncomment line below if your kit has a DHT11 and you're connecting it to", "send message to client we get RGB data decode rgb data USE_SERIAL.begin(921600); USE_SERIAL.setDebugOutput(true);", "The tone sweep goes to left and right channels Length of time for the sweep in seconds <<<<<<<<<<<<<<>>>>>>>>>>>>>>>> wait for the sweep to end and now reverse the sweep", "------------------------------------------------------------------------------ Wait for USB Serial ------------------------------------------------------------------------------", "Delay to push SETUP button warning for example only, this will initialize empty memory into your vars always init flash memory or add some checksum bits Button pressed SSID & password parameters already included", "StreamUtils - github.com/bblanchon/ArduinoStreamUtils Copyright Benoit Blanchon 2019-2024 MIT License This example shows how to log what written to a Stream Create a new stream that will forward all calls to Serial, and log to Serial.", "see if there's incoming serial data: read the oldest byte in the serial buffer: if it's a capital H (ASCII 72), turn on the LED: if it's an L (ASCII 76) turn off the LED:", "Replace with your network details remove the oldest entry if array has more than 10 entries", "When time needs to be set on a new device, or after a power loss, the following line sets the RTC to the date & time this sketch was compiled This line sets the RTC with an explicit date & time, for example to set January 21, 2014 at 3am you would call: rtc.adjust(DateTime(2014, 1, 21, 3, 0, 0));", "DCC codes Commanders Accessories Drivers Setup", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3", "Adafruit Internal Flash FatFs Simple Datalogging Example Author: Tony DiCola, Ha Thach This is a simple dataloging example using the SPI Flash FatFs library.  The example will open a file on the SPI flash and append new lines of data every minute. Note that", "#define BLYNK_USE_DIRECT_CONNECT You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Blynk will work through Serial Do not read or write this serial manually in your sketch", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Create ble serial instance, parameters are ignored for MicroBit", "no_description", "SafeStringStream_testdata.ino This example can either read data from the Serial input OR from a pre-defined test data SafeString #define TEST_DATA determines which. Currently set to read from test data. For Serial input this example takes commmands from the Arduino Monitor input and acts on them the available commands are start stop and reset", "Set debug to false to enable continuous mode and disable serial prints We are using Serial1 instead of Serial because we are going into standby and the USB port could get confused during wakeup. To read the debug prints, connect pins 13-14 (TX-RX) to a 3.3 V USB-to-serial converter", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "no_description", "Display the settings. Display the encoded IR sequence. Set up what we want to send. See ir_Panasonic.cpp for all the options. Now send the IR signal.", "#define BLYNK_USE_DIRECT_CONNECT start the BLE stack", "#include <Streaming.h> custom field edit implementing a customized menu component --this components can be latter shared as plugins is already stored as a plugin", "The MIT License (MIT) Copyright (c) 2019 Ha Thach for Adafruit Industries for flashTransport definition the setup function runs once when you press reset or power the board", "Copyright (C) 2010 Georg Kaindl http: This file is part of Arduino EthernetBonjour. EthernetBonjour is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License", "Debounce for btnIncrease Debounce for btnDecrease", "include the library SX1262 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "set timezone offset from UTC adjust to local time zone only trigger on minute change Ensure the connection to the MQTT server is alive (this will make the first connection and automatically reconnect when disconnected).  See the MQTT_connect", "SafeString_readUntilToken.ino This example can either read data from the Serial input OR from a pre-defined test data SafeString #define TEST_DATA determines which. Currently set to read from test data. For Serial input this example takes commmands from the Arduino Monitor input and acts on them the available commands are start stop and reset", "For Teensy 4.1 Use true for NativeEthernet Library, false if using other Ethernet libraries Only one of the following to be true. Only one of the following to be true. Enter a MAC address and IP address for your controller below.", "Replace with your network credentials Sets the trigPin on HIGH state for 10 micro seconds Reads the echoPin, returns the sound wave travel time in microseconds Calculate the distance Prints the distance in the Serial Monitor", "The device address is set to BNO055_I2C_ADDR2 in this example. You can change this in the BNO055.h file in the code segment shown below. /* bno055 I2C Address */ #define BNO055_I2C_ADDR1                0x28 #define BNO055_I2C_ADDR2                0x29 #define BNO055_I2C_ADDR                 BNO055_I2C_ADDR2", "Empty file with name LowLatencyLoggerMPU6050.ino to make IDE happy.", "put your setup code here, to run once: put your main code here, to run repeatedly:", "Handle USB communication Forward MIDI", "The API key can be obtained from Firebase console > Project Overview > Project settings. Define the Firebase storage bucket ID e.g bucket-name.appspot.com */ ServiceAuth is required for Google Cloud Storage functions. Binding the FirebaseApp for authentication handler. To unbind, use cstorage.resetApp();", "a->dy += 4;", "no_description", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "do next sampling ASAP it's time to sample! the row below maps the slider position to a range between 10 and 290 seconds. let the RGB led blink green once per second, for 200ms.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for WiFi connection", "Initialize the Ethernet client library with the IP address and port of the server that you want to connect to (port 23 is default for telnet; if you're using Processing's ChatServer, use port 10002): Enter the IP address of the server you're connecting to:", "Simple demonstration on using an input device to trigger changes on your NeoPixels. Wire a momentary push button to connect from ground to a digital IO pin. When the button is pressed it will change to a new pixel animation. Initial state has all pixels off -- press the button once to start the first animation. As written, the button does not interrupt an", "or ServiceAuth sa_auth(timeStatusCB, FIREBASE_CLIENT_EMAIL, FIREBASE_PROJECT_ID, PRIVATE_KEY); Or initializeApp(aClient, app, getAuth(sa_auth), aResult_no_callback); Binding the FirebaseApp for authentication handler.", "Adafruit CC3000 Firmware V1.14 Upgrade Sketch Based on firmware patcher for MSP430 chips published by Texas Instruments. This sketch will upgrade CC3000 modules up to firmware version 1.14. You can find more details about the changes in the 1.14 firmware from TI at: http:", "send message to client send message to client send data to all connected clients webSocket.broadcastTXT(num, messageFromServer); send message to client", "no_description", "const int myInput = AUDIO_INPUT_MIC; Create the Audio components.  These should be created in the order data flows, inputs/sources -> processing -> outputs Create Audio connections between the components Just connecting in to out", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct for the std::map below this is the main configuration", "#define HOST_NAME   \"www.yahoo.com\" Your board <-> ESP_AT baud rate: initialize serial for ESP module", "Simple tutorial on how to receive and send MIDI messages. Here, when receiving any message on channel 4, the Arduino will blink a led and play back a note for 1 second.", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- AppleMIDI.whoCanConnectToMe = APPLEMIDI_NAMESPACE::None;", "these are the frequencies for the notes from middle C to one octave above middle C: read the button labeled SWITCH_DOWN. If it's low, then play a note: use map() to map the slider's range to the", "TempInputBlink_Tasks.ino Uses MAX31856_noDelay library which does not use delay(), (good) install SafeString library from Library manager or from https: the loopTimer, BufferedOutput, SafeStringReader and millisDelay are all included in SafeString library V3+ Use software SPI: CS, DI, DO, CLK", "A simple server implementation showing how to: * serve static messages * read GET and POST parameters * handle missing pages / 404s Send a GET request to <IP>/get?message=<message>", "'Boing' ball demo for PyPortal. Requires Adafruit_GFX 1.4.5 or later and Adafruit_DMA ILI9341 with 8-bit parallel interface: Ball coordinates are stored floating-point because screen refresh is so quick, whole-pixel movements are just too fast!", "M1--->motor_Group_1--->[M1A(+),M1B(-)] M2--->motor_Group_2--->[M2A(+),M1B(-)] M3--->motor_Group_3--->[M3A(+),M3B(-)] M4--->motor_Group_4--->[M4A(+),M4B(-)] CW: rotate in positive direction", "#define BLYNK_DEBUG #define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" You can specify your board mac adress", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG define deviceIds in an array go through the devices if deviceId matches", "On ESP8266: At 80MHz runs up 57600bps, and at 160MHz CPU frequency up to 115200bps with only negligible errors. Connect pin 13 to 15. For verification and as a example for how to use SW serial on the USB to PC connection, which allows the use of HW Serial on GPIO13 and GPIO15 instead, #define SWAPSERIAL below.", "Bring up the ethernet interface Show the network address Open a socket on the network interface, and create a TCP connection to mbed.org Receive a simple HTTP response Close the socket to return its memory and bring down the network interface", "Put your supabase URL and Anon key here... Because Login already implemented, there's no need to use secretrole key put your WiFi credentials (SSID and Password) here Put Supabase account credentials here", "BMx280_otherInterfaces.ino shows how to use the BMx280 library with interfaces other than the native I2C or SPI interfaces. here, the second I2C port of an Arduino Due is used (Wire1) Copyright (c) 2018 Gregor Christandl connect the BMx280 to the Arduino Due like this:", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "setup function for WiFi connection get a new Blinds device from SinricPro setup SinricPro main setup function", "To eliminate FW warning when using not latest nina-fw version To use whenever WiFi101-FirmwareUpdater-Plugin is not sync'ed with nina-fw version don't continue put your main code here, to run repeatedly:", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "print the SSID of the network you're attached to: you're connected now, so print out the data print the received signal strength: initialize serial for ESP module initialize ESP module", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP", "--------------------------------------------------------------------+ External Flash Config --------------------------------------------------------------------+ for flashTransport definition External Flash File system", "include the library SX1231 has the following connections: CS pin:    10 DIO0 pin:  2 RESET pin: 3", "Adafruit_ImageReader test for 3.5\" TFT FeatherWing. Demonstrates loading images from SD card or flash memory to the screen, to RAM, and how to query image file dimensions. OPEN THE ARDUINO SERIAL MONITOR WINDOW TO START PROGRAM. Requires three BMP files in root directory of SD card or flash: adabot.bmp, parrot.bmp and wales.bmp.", "no_description", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings", "Get limits of the In Application Program (IAP) flash, ie. the internal MCU flash. Create a block device on the available space of the FlashIAP Create a key/value store on the Flash IAP block device Dummy sketch stats for demonstration purposes Wait for terminal to come up", "include the library Si4432 has the following connections: nSEL pin:  10 nIRQ pin:  2 SDN pin:   9", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Debug console You can also specify server:", "no_description", "This example is specific to SIM8xx Select your certificate: #include \"DSTRootCAX3.der.h\" #include \"COMODORSACertificationAuthority.h\" Select the file you want to write into", "Set your network credentials Create AsyncWebServer object on port 80 JSON data Serial port for debugging purposes Initialize the WiFi", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" This function will be called every time Slider Widget in Blynk app writes values to the Virtual Pin V1", "Use the MD_MAX72XX library to display a Pacman animation Just for fun! -------------------- MD_MAX72xx hardware definitions and object Define the number of devices we have in the chain and the hardware interface", "no_description", "You could use a spare Hardware Serial on boards that have it (like Mega) You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console Blynk will work through Serial", "no usar delay!, chequear el tiempo transcurrido con millis()", "#define MQTT_HOST         IPAddress(192, 168, 2, 110) ensure we don't reconnect to MQTT when no ETH ensure we don't reconnect to MQTT when no ETH ensure we don't reconnect to MQTT when no ETH To be called before ETH.begin()", "initialize the robot initialize the robot's screen read a analog port write the sensor value on the screen erase the previous text on the screen", "Include necessary libraries for communication with the INA219 sensor and I2C Define the analog input pin for the TMP36 sensor and its label Define the I2C address and labels for each INA219 sensor Create an array of INA219 sensors and their labels Initialize serial communication at 9600 bits per second", "Menjadikan PIN 8, 9, dan 10 Arduino menjadi Output", "SafeString::setOutput(Serial); sfReader = '\\0' fails but sfReader still cleared because = .. always clears", "Blink the led every 1 second using setInterval", "Adafruit_ImageReader test for Adafruit ST7735 TFT Breakout for Arduino. Demonstrates loading images from SD card or flash memory to the screen, to RAM, and how to query image file dimensions. Requires three BMP files in root directory of SD card: rgbwheel.bmp, miniwoof.bmp and wales.bmp.", "Display the settings. Display the encoded IR sequence. Set up what we want to send. See ir_Gree.cpp for all the options. Most things default to off. kGreeAuto, kGreeDry, kGreeCool, kGreeFan, kGreeHeat", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Select your pin with physical button V3 LED Widget represents the physical button state", "PrintTime_Blink_millisDelay.ino Print and Blink without delay, (good) install SafeString library from Library manager or from https: the loopTimer, BufferedOutput, SafeStringReader and millisDelay are all included in SafeString library V3+ Pin 13 has an led connected on most Arduino boards.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for setupEthernet connection", "set this to 0 to disable autoranging and scale to FFT_MAX a windowed sinc filter for 44 khz, 64 samples a manual loop-unroller! the setup routine runs once when you press reset: while(!Serial);", "Functions to read a CSV text file one field at a time. next line for SD.h #include <SD.h> next two lines for SdFat example can use comma or semicolon", "Advanced Microcontroller-based Audio Workshop http: https: Part 2-8: Oscillators copy the Design Tool code here", "Try to connect to a wifi network Give the ESP some time to connect if nothing else to fetch, sleep for a minute and try again in case someone added more items to the collection in the server Pop the last item from the array", "#include <JeeLib.h>", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ENC28J60 & ESP32-S3 Optional values to override default settings", "Input a value 0 to 255 to get a color value. The colors are a transition r - g - b - back to r. define a callback for key presses while(!Serial); activate all keys and set callbacks", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. isButtonPressed = !digitalRead(BUTTON_PIN);", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "OLED SSD1306 128x32 Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag.", "Talkie library Copyright 2011 Peter Knight This code is released under GPLv2 license. The following phrases are derived from VM61003/4/5 ROMs A male voice with a US accent.", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip); send a hello #", "KH Print hearbeat every HEARTBEAT_INTERVAL (20) seconds. Debug console initialize serial for ESP module Optional to change default AP IP(192.168.4.1) and channel(10)", "base.setFont(&fonts::Roboto_Thin_24);", "Default pin 10 to SS/CS SETTINGS URL for STOMP endpoint. For the default config of Spring's STOMP support, the default URL is \"/socketentry/websocket\". VARIABLES", "no_description", "Remember to set the same radio parameters in transmitter and receiver boards!", "Create the object", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- -----------------------------------------------------------------------------", ".. ..", "Connect to Wi-Fi", "setup function for setupEthernet connection ETHERNET_USE_RPIPICO, use default SS = 5 or 17 For other boards, to change if necessary Must use library patch for Ethernet, EthernetLarge libraries For RPI Pico using Arduino Mbed RP2040 core", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Docs.resetApp(); In case setting the external async result to the sync task (optional)", "Musical Notes Configure Touch Buttons as Inputs Configure Passive Buzzer pin as Outputs Define variables to hold values of buttons Read buttons (HIGH = button pushed, LOW = button not pushed)", "include the library LR1110 has the following connections: NSS pin:   10 IRQ pin:   2 NRST pin:  3", "Adafruit_ImageReader test for Adafruit ST7789 320x240 TFT Breakout for Arduino. Demonstrates loading images to the screen, to RAM, and how to query image file dimensions. Requires three BMP files in root directory of SD card: parrot.bmp, miniwoof.bmp and wales.bmp.", "----------------------------------------------------------------------------- sets bits in a bit array (int) to toggle the reporting of the analogIns TODO: save status to EEPROM here, if changed", "Initialize the Web client object Klugde to temporarily fix RP2040W WiFi.status() bug ( https: You can change longer or shorter depending on your network response Shorter => more responsive, but more ping traffic Use ping() to test TCP connections", "initialize Serial comunication wait for the serial port to connect, Needed for USB native only initialize the Accessory Shield library set seed for random number generator set delay time with the value read from the potentiometer", "include the motor board header start serial communication initialize the library read the sensors and add them to the string print out the values", "Using pin 13 will crash ESP32_C3 initialize serial for ESP module initialize ESP module check for the presence of the shield don't continue", "print the SSID of the network you're attached to: you're connected now, so print out the data print the received signal strength: initialize serial for ESP module initialize ESP module", "Display the settings. Display the encoded IR sequence. Set up what we want to send. See ir_Toshiba.cpp for all the options. Now send the IR signal.", "This is calibration data for the raw touch data to the screen coordinates The STMPE610 uses hardware SPI on the shield, and #8 The display also uses hardware SPI, plus #9 & #10 Size of the color selection boxes and the paintbrush size while (!Serial);", "include the library no need to configure pins, signals are routed to the radio internally set RF switch configuration for Nucleo WL55JC1 NOTE: other boards may be different! Some boards may not have either LP or HP.", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ENC28J60 & ESP32-S3 Optional values to override default settings", "Codes are in Global Cache format less the emitter ID and request ID. These codes can be found in GC's Control Tower database.", "Connect RED of the AM2315 sensor to 5.0V Connect BLACK to Ground Connect WHITE to i2c clock (PIN_D22 / SCL) Connect YELLOW to i2c data (PIN_D21 / SDA) Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "Even a short delay here will affect performance. Uncomment and change the delay to see what happens. delay(10);", "SPDX-FileCopyrightText: 2021 Kattni Rembor for Adafruit Industries SPDX-License-Identifier: MIT while (!Serial) delay(10); read the potentiometer Input a value 0 to 255 to get a color value.", "Declare our NeoPixel strip object: Argument 1 = Number of pixels in NeoPixel strip Argument 2 = Arduino pin number (most are valid) Argument 3 = Pixel type flags, add together as needed: NEO_KHZ800  800 KHz bitstream (most NeoPixel products w/WS2812 LEDs)", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false These definitions must be placed before #include <ESPAsync_WiFiManager.h>", "BMX280-sensor UART control interface set LED as output and turn it off initialize serial pport Wait for serial port to settle", "create serial output stream input line buffer create serial input stream ------------------------------------------------------------------------------ Wait for USB Serial", "#define PARASITE_POWER #define PWR_CTRL_PIN    9", "no_description", "if the LED is off turn it on and vice-versa: set the LED with the ledState of the variable:", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define deviceIds in an array go through the devices", "as described in the footer comment below Note that for additional security and reusability, you could use a #define statement to specify this value in a .h file. the Facebook Access Token, which can be obtained using the Temboo OAuth Wizard or Choreos For debugging, wait until a serial console is connected.", "To connect with SSL/TLS: 1) Change WiFiClient to WiFiSSLClient. 2) Change port value from 1883 to 8883. 3) Change broker value to a server with a known SSL/TLS root certificate flashed in the WiFi module.", "Initialize serial and wait for port to open: check for the presence of the shield: don't continue: attempt to connect to WiFi network: Connect to WPA/WPA2 network. Change this line if using open or WEP network:", "print the SSID of the network you're attached to: you're connected now, so print out the data print the received signal strength: initialize serial for ESP module initialize ESP module", "Initialize serial and wait for port to open: check for the presence of the shield: don't continue: print your MAC address: scan for existing networks:", "This sketch demonstrates the IrReceiverSampler. It requires a demodulating sensor connected to pin RECEIVE_PIN.", "Double-buffered DMA on auxiliary SPI peripheral on pins 11/12/13. Continuously alternates between two data buffers...one is filled with new data as the other is being transmitted. Declare our own SPI peripheral 'mySPI' on pins 11/12/13: (Do not call this SPI1; Arduino Zero and Metro M0 already", "Initialize RF Object Set the data rate to 9600 bits per second Initialize the radio settings by using the initialize_radio function Argument 1: Set frequency to 915 Argument 2: Set output power to 17", "Connect to WiFi Print the IP address ================================================================ ================================================================ Write some data to the realtime database.", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "This code is only for use with ESP chips and demonstrates how to perform background operations against the I2C bus to communicate with the Joy Featherwing peripheral in a non-blocking fashion. As ESP's FreeRTOS does not play nicely with performing operations against I2C from within an ISR, a queue is used to signal to a worker task that a button has been pressed rather than reading from I2C within the ISR itself. To read from the analog controller, a separate task running in a loop polls for changes. It also attempts to calibrate the controller and deterine a center point while compensating", "Test code for Adafruit GPS modules using MTK3329/MTK3339 driver This code turns on the LOCUS built-in datalogger. The datalogger turns off when power is lost, so you MUST turn it on every time you want to use it! Tested and works great with the Adafruit GPS FeatherWing", "Only to deal with ESP8266 core v3.0.0 warning in Ticker library Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change. report status to Blynk Debug console", "End of Null Function, disable parser. Not part of the RPN/NRPN workflow, ignoring. -- Enable a few random NRPNs --", "BLYNK_TEMPLATE_ID & BLYNK_DEVICE_NAME can be commented if you wish to use old blynk uncomment this if using Serial for ESP #define EspSerial Serial comment this if using Serial for ESP or Software Serial on Uno, Nano...", "no_description", "Globals, used for compatibility with Arduino-style sketches. Create an area of memory to use for input, output, and intermediate arrays. The size of this will depend on the model you're using, and may need to be determined by experimentation. The name of this function is important for Arduino compatibility.", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Debug console", "Default pin 10 to SS/CS Select the IP address according to your local network URL for STOMP endpoint. For the default config of Spring's STOMP support, the default URL is \"/socketentry/websocket\". FUNCTIONS", "ESP32LovyanGFX / LGFX_Device */ lgfx::Panel_GC9A01      _panel_instance; lgfx::Panel_GDEW0154M09 _panel_instance;", "RTC", "no_description", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define deviceIds in an array go through the devices", "read the sensor value print the sensor value print the sensor value print an empty line wait 1 second to print again", "To be called before ETH.begin() bool begin(uint8_t phy_addr=ETH_PHY_ADDR, int power=ETH_PHY_POWER, int mdc=ETH_PHY_MDC, int mdio=ETH_PHY_MDIO, eth_phy_type_t type=ETH_PHY_TYPE, eth_clock_mode_t clk_mode=ETH_CLK_MODE); ETH.begin(ETH_PHY_ADDR, ETH_PHY_POWER, ETH_PHY_MDC, ETH_PHY_MDIO, ETH_PHY_TYPE, ETH_CLK_MODE); Static IP, leave without this line to get IP via DHCP", "A simple server implementation showing how to: * serve static messages * read GET and POST parameters * handle missing pages / 404s Enter a MAC address and IP address for your controller below.", "for flashTransport definition file system on SD card see if the card is present and can be initialized: don't do anything more: open the file. note that only one file can be open at a time,", "Green LED on Red LED on", "This example shows how to use TTGO T-A7670 (ESP32 with SIMCom SIMA7670) and TinyGSMClient This example to connect to Google API. To allow TinyGSM library integration, the following macro should be defined in src/ESP_Google_Sheet_Client_FS_Config.h or your custom config file src/Custom_ESP_GOOGLE_SHEET_CLIENT_FS_Config #define TINY_GSM_MODEM_SIM7600 Set serial for debug console (to the Serial Monitor, default speed 115200)", "digital_inputs.setLatch(); Write the status value to On to Pin 3 Read from PROGRAMMABLE DIGITAL I/O Pin 3 Read from DIGITAL INPUT Expander Pin 3 Write the status value to Off to Pin 3", "no_description", "include the library SX1262 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "Demo of fgets function to read lines from a file. SD chip select pin print stream ------------------------------------------------------------------------------ store error strings in flash memory", "no_description", "This example shows the 3 axis acceleration. LIS.setFullScaleRange(LIS3DHTR_RANGE_2G); LIS.setFullScaleRange(LIS3DHTR_RANGE_4G); LIS.setFullScaleRange(LIS3DHTR_RANGE_8G); LIS.setFullScaleRange(LIS3DHTR_RANGE_16G);", "This latest SHA1 fingerprint was updated 15.04.2021 Connect to wifi Wait some time to connect to wifi run callback when messages are received run callback when events are occuring", "include the library SX1262 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "#define ASYNC_TCP_SSL_ENABLED true #define _DISABLE_TLS_ Define I2S connections Define volume control pot connection ADC3 is GPIO 39", "HTML ID, LABEL,  Your struct char data, TEXT/CHECK, GROUP Need to save the eeprom data and restart the esp if we are updating data, force a refresh of the SSID Port defaults to 8266 Hostname defaults to esp8266-[ChipID]", "Serial.print(\"X Raw: \"); Serial.print(mag.raw.x); Serial.print(\"  \"); Serial.print(\"Y Raw: \"); Serial.print(mag.raw.y); Serial.print(\"  \"); Serial.print(\"Z Raw: \"); Serial.print(mag.raw.z); Serial.println(\"\");", "define the cymbols on the buttons of the keypads initialize an instance of class NewKeypad", "This Authentication method should not be used for an Object This Authentication method should be used to get a JWT from a Key/Secret t6Client.authenticateKS(t6Key, t6Secret, &responseA); get ready for the next block", "while (!Serial); read light sensor read temp sensor externals we have some minimum pressure we consider 'valid'", "try to print a number thats too long print a hex number print a floating point print a string message print with print/println", "const int myInput = AUDIO_INPUT_MIC; Create the Audio components.  These should be created in the order data flows, inputs/sources -> processing -> outputs Create Audio connections between the components Create an object to control the audio shield.", "Debug Level from 0 to 4 Select the IP address according to your local network Google DNS Server IP Update these with values suitable for your network. Loop until we're reconnected", "no_description", "no_description", "no_description", "no_description", "Declare our NeoPixel strip object: Argument 1 = Number of pixels in NeoPixel strip Argument 2 = Arduino pin number (most are valid) Argument 3 = Pixel type flags, add together as needed: NEO_KHZ800  800 KHz bitstream (most NeoPixel products w/WS2812 LEDs)", "if you don't want to use DNS (and reduce your sketch size) use the numeric IP instead of the name for the server: IPAddress server(74,125,232,128); Initialize the Ethernet client library with the IP address and port of the server", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" This function sends Arduino's up time every second to Virtual Pin (5) Generate random temperature value 10.0 to 30.0 (for example)", "Test \"options\" values ThingsBoard variables Var labels (in /setup webpage) Timezone definition to get properly time from NTP server n.u. #define MYTZ \"CET-1CEST,M3.5.0,M10.5.0/3\"", "This example shows how to send JSON payload FCM to multiple recipients via legacy API (requires server key). Library allows your ESP device to interact with FCM server through FCM Server protocols. https: This means your device now is not a FCM app client and unable to get the notification messages. The device registration tokens used in this example were taken from the FCM mobile app (Android or iOS)", "If using the rev 1 with STMPE resistive touch screen controller uncomment this line: #include <Adafruit_STMPE610.h> If using the rev 2 with TSC2007, uncomment this line: Anything else, defaults! Use hardware SPI and the above for CS/DC", "Arduino RBD Threshold Library v1.0.3 Example - Convert an input domain to a numeric quantile output range. https: Copyright (c) 2015 Alex Taujenis - MIT License", "Default is FeatherWing pinouts Feather RP2040 ThinkInk Adafruit_IL0373 display(152, 152, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY, EPD_SPI); Adafruit_SSD1608 display(200, 200, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS,", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console Blynk will work through Serial Do not read or write this serial manually in your sketch", "ILI9341 example with embedded color bitmaps in sketch. WILL NOT FIT ON ARDUINO UNO OR OTHER AVR BOARDS; uses large bitmap image stored in array! Options for converting images to the format used here include: http:", "Example of data captured by IRrecvDumpV2.ino Example Samsung A/C state captured from IRrecvDumpV2.ino", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "BMP280_DEV - SPI Communications, Default Configuration, Forced Conversion bmp280.setPresOversampling(OVERSAMPLING_X4); bmp280.setTempOversampling(OVERSAMPLING_X1); bmp280.setIIRFilter(IIR_FILTER_4);", "do nothing", "WiFi credentials replace with your bot token and chat id camera settings replace with your own model! init camera", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your SIM and GPRS credentials Leave empty, if missing pin, user or pass", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "Configure the PulseSensor manager. Now that everything is ready, start reading the PulseSensor signal. Flash the led to show things didn't work.", "We will set the MAC address at the beginning of `setup()` using TeensyID's `teensyMac` helper. Enter websockets url. Note: wss: Set the MAC address.", "no_description", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for WiFi connection", "start the Modbus RTU server, with (slave) id 42 configure coils at address 0x00 configure discrete inputs at address 0x00 configure holding registers at address 0x00 configure input registers at address 0x00", "See the list of country codes in https: To modify https: Check https: print the SSID of the network you're attached to:", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP Optional values to override default settings", "This example is for ESP32 boards --  Sparkfun ESP32 Thing in this example It runs a simple hello server Configure a staticIP so you can connect the the hello server #define DEBUG setup code that must be run every time", "USBHost is defined in usbh_helper.h Language ID: English CFG_TUH_DEVICE_MAX is defined by tusb_config header init host stack on controller (rhport) 1 For rp2040: this is called in core1's setup1()", "To eliminate FW warning when using not latest nina-fw version To use whenever WiFi101-FirmwareUpdater-Plugin is not sync'ed with nina-fw version if you don't want to use DNS (and reduce your sketch size) use the numeric IP instead of the name for the server: Initialize the Ethernet client library", "#define HARDWARE_GENERATED_CLOCK Be sure to use the correct pin numbers for your setup. Note that on ATmega328: 17=A3, 16=A2, 15=A1, 14=A0 DA7, DA6, DA5, DA4, DA3, DA2, DA1, DA0, BDIR, BC2, BC1 The following code generates a 1 MHz 50% duty cycle output to be used", "Emulate Serial1 on pins 6/7 if not present don't continue disconnect persistent connection (not persistent) print your board's IP address: print your MAC address:", "#define BLYNK_USE_DIRECT_CONNECT You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Blynk works through Serial Do not read or write this serial manually in your sketch", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "DCC codes Commanders Accessories Ports Setup", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Database.resetApp(); In case setting the external async result to the sync task (optional)", "do nothing ignore", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 checkButtonpress reads if BUTTON_PIN gets LOW and send Event", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 checkButtonpress reads if BUTTON_PIN gets LOW and send Event", "Uncomment for certain HTTP site to optimize #define NOT_SEND_HEADER_AFTER_CONNECTED        true Level from 0-4 Select a test server address char GET_ServerAddress[]      = \"192.168.2.110/\";", "no_description", "ConstantSpeed.pde -*- mode: C++ -*- Shows how to run AccelStepper in the simplest, fixed speed mode with no accelerations Requires the Adafruit_Motorshield v2 library", "if the LED is off turn it on and vice-versa: set the LED with the ledState of the variable:", "Using port 8883 for MQTTS Adafruit IO Account Configuration (to obtain these values, visit https: WiFiFlientSecure for SSL/TLS support Setup the MQTT client class by passing in the WiFi client and MQTT server and login details.", "SdFat is required for using Adafruit_USBH_MSC_SdFatDevice USBHost is defined in usbh_helper.h USB Host MSC Block Device object which implemented API for use with SdFat file system object from SdFat if file system is successfully mounted on usb block device", "Set LunaSat configuration (1's equates to default mode) LunaSat object initialization is used for declaration of parameters such as ID and debugging mode Custom datatypes allow for sample specialization, user can craft their own ideal sample The GLEE library architecture enables easy, interpretable and familiar programming of the lunasat Simple fetching of sensor observation using lunasat class", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield no point in carrying on, so do nothing forevermore: Serial.println(millis() - last);", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). #include <SoftwareServo.h> SoftwareServo servo1; Debug console", "Initialize serial and wait for port to open: check for the WiFi module: don't continue attempt to connect to Wifi network: Connect to WPA/WPA2 network:", "The API key can be obtained from Firebase console > Project Overview > Project settings. Define the project location e.g. us-central1 or asia-northeast1 */ https: ServiceAuth is required for Google Cloud Functions functions. Binding the FirebaseApp for authentication handler.", "Initialize sensor The LEDs are very low power and won't affect the temp reading much but you may want to turn off the LEDs to avoid any local heating particleSensor.setup();", "Adafruit Motor shield library copyright Adafruit Industries LLC, 2009 this code is public domain, enjoy! Connect a stepper motor with 48 steps per revolution (7.5 degree) to motor port #2 (M3 and M4)", "Send to client default values as JSON string because it's very easy to parse JSON in Javascript Try to connect to stored SSID, start AP if fails after timeout FILESYSTEM INIT Add custom page handlers to webserver Enable ACE FS file web editor and add FS info callback function", "SPIFFS-like write and delete file, better use #define CONFIG_LITTLEFS_SPIFFS_COMPAT 1", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080); : http:", "Initialize serial and wait for port to open: check for the presence of the shield: don't continue: Print WiFi MAC address: scan for existing networks:", "Configure the motor driver. The setup routine runs once when you press reset. The loop routine runs over and over again forever.", "Be sure to use the correct pin numbers for your setup. Note that on ATmega328: 17=A3, 16=A2, 15=A1, 14=A0 DA7, DA6, DA5, DA4, DA3, DA2, DA1, DA0, BDIR, BC2, BC1 Find chip address", "SD chip select pin file system object create Serial stream ------------------------------------------------------------------------------ store error strings in flash to save RAM", "Allow over air update #define OTA_ENABLE true ==================== start of TUNEABLE PARAMETERS ==================== An IR detector/demodulator is connected to GPIO pin 14 e.g. D5 on a NodeMCU board.", "You will need to use Adafruit's CircuitPlayground Express Board Definition for Gizmos rather than the Arduino version since there are additional SPI ports exposed. 1.54\" 152x152 Tricolor EPD with ILI0373 chipset ThinkInk_154_Tricolor_Z17 display(EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY);", "no_description", "Initialize IMU Read incoming commands from serial monitor Command interpretation", "----------------------------------------------------------------------------- ----------------------------------------------------------------------------- Normal callbacks - always available Stay informed on connection status Extended callback, only available when defining USE_EXT_CALLBACKS", "Deprecated echo.websocket.org to be replaced send message to server when Connected send message to server KH, To check hexdump(payload, length);", "Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change. report status to Blynk Debug console From v1.0.5", "can be used with an object of any class that inherits from the Print class this function is called by the ArduinoGraphics library's functions the r parameter is (mis)used to set the character to draw with cast unused parameters to void to fix \"unused parameter\" warning display the drawing", "If double buffering is not enabled, the clear operation will modify the frame buffer while it is sent to the screen. This will create glitches. With double buffering enabled, drawing oprations will be preformed on buffer A while buffer B is sent to the screen, which means there will be no glitch.", "by Druhi Chakraborty #define DHTTYPE DHT22 Pin 15 can work but DHT must be disconnected during program upload", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "enable reception, can be disabled with: RS485.noReceive();", "Feather RP2040 ThinkInk Uncomment the following line if you are using ACeP 7 color 5.65\" First call begin to mount the filesystem.  Check that it returns true to make sure the filesystem was mounted. draw 7 color bars", "Debug Level from 0 to 4 Check connection every 1s To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error Repeat forever, millis() resolution print the SSID of the network you're attached to:", "This example show the temperature. if you use the software I2C to drive the sensor, you can uncommnet the define SOFTWAREWIRE which in LIS3DHTR.h. LIS.closeTemp(); LIS.setFullScaleRange(LIS3DHTR_RANGE_2G); LIS.setFullScaleRange(LIS3DHTR_RANGE_4G);", "Update function should be continuously polled", "Neural network stuff if (readButtons() != NONE) { gameJump(); jumped = true; }", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network SKETCH BEGIN the whole message is in a single frame and we got all of it's data message is comprised of multiple frames or the frame is split into multiple packets", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "we can also read accelerometer / gyro data here! put your setup code here, to run once: put your main code here, to run repeatedly:", "Construct object, StepMotor(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency Stop Button) The start button is attached to the interrupt service routine that enables the motor and runs the homing procedure put your main code here, to run repeatedly:", "Important: For ESP32, check https: and replace cores/esp32/Server.h to avoid compile error Initialize the Ethernet client object this method makes a HTTP connection to the server close any connection before send a new request", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip);", "Manual begin() is required on core without built-in support e.g. mbed rp2040 Manual call tud_task since it isn't called by Core's background", "Set up what we want to send. See ir_Argo.cpp for all the options. Now send the IR signal.", "reply to client add to list register events create access point start dns server", "after IMU.readTemperature() returns, t will contain the temperature reading", "Create an instance of the Serial port for the GPS module Set GPSECHO to \"false\" or \"true\" to turn on/off echoing the GPS data to the Serial console Set the timer for the loop Global variable to store GPS connection status Start the Serial port at 115200 baud rate", "Set oneshot to false to trigger continuous mode when you finished setting up the whole flow stub for message which will be sent Wait for the serial Something is really wrong, try rebooting Reboot is useful if we are powering the board using an unreliable power source", ".on_mouse = process_mouse .on_recv_data = process_hid_recv, .on_send_done = process_hid_sent, .transfer_done = process_vendor_xfer_done .mount = msc_ff_mount,", "Initialize the Ethernet client object For ESP8266, change for other boards if necessary For ESP8266 Pin                D0(GPIO16)    D1(GPIO5)    D2(GPIO4)    D3(GPIO0)    D4(GPIO2)    D8 Ethernet_Generic   X                 X            X            X            X        0", "Implement a 16 note polyphonic midi player  :-) Music data is read from memory.  The \"Miditones\" program is used to convert from a MIDI file to this compact format. This example code is in the public domain. Create 16 waveforms, one for each MIDI channel", "The API key can be obtained from Firebase console > Project Overview > Project settings. ServiceAuth is required. Binding the FirebaseApp for authentication handler. To unbind, use Docs.resetApp(); In case setting the external async result to the sync task (optional)", "an array to hold the songs variables for non-blocking delay initialize the Robot, SD card, display, and speaker draw \"lg0.bmp\" and \"lg1.bmp\" on the screen Print instructions to the screen", "Callback methods prototypes Tasks", "Simple WAV file player from SD or QSPI filesystem example This example plays 2 wav files at once This example code is in the public domain. Use these with the PyGamer Initialize serial port", "Arduino Colors put your setup code here, to run once: put your main code here, to run repeatedly:", "include the library no need to configure pins, signals are routed to the radio internally set RF switch configuration for Nucleo WL55JC1 NOTE: other boards may be different! Some boards may not have either LP or HP.", "Shows how to run three Steppers at once with varying speeds Requires the Adafruit_Motorshield v2 library https: And AccelStepper with AFMotor support https:", "Commanders Drivers current user define speed. servo accessory. Setup", "Date and time functions using a DS3231 RTC connected via I2C and Wire lib When time needs to be set on a new device, or after a power loss, the following line sets the RTC to the date & time this sketch was compiled This line sets the RTC with an explicit date & time, for example to set January 21, 2014 at 3am you would call:", "Default heartbeat interval for GSM is 60 If you want override this value, uncomment and set this option: #define BLYNK_HEARTBEAT 30 Select your modem: #define TINY_GSM_MODEM_SIM808", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Now support ArduinoJson 6.0.0+ ( tested with v6.15.2 to v6.16.1 )", "while (!Serial); delay(100); Start TFT and fill black Turn on backlight randomize colors Serial.printf(\"(%0.1f, %0.1f, %0.1f)\\n\", event.acceleration.x, event.acceleration.y, event.acceleration.z);", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Initialize DHT sensor. Note that older versions of this library took an optional third parameter to", "For the Adafruit shield, these are the default. Use hardware SPI (on Uno, #13, #12, #11) and the above for CS/DC If using the breakout, change pins as desired Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC, TFT_MOSI, TFT_CLK, TFT_RST, TFT_MISO); read diagnostics (optional but can help debug problems)", "The API key can be obtained from Firebase console > Project Overview > Project settings. ServiceAuth is required for import and export documents. Binding the FirebaseApp for authentication handler. To unbind, use Databases.resetApp(); In case setting the external async result to the sync task (optional)", "BLYNK_TEMPLATE_ID & BLYNK_DEVICE_NAME can be commented if you wish to use old blynk uncomment this if using Serial for ESP #define EspSerial Serial comment this if using Serial for ESP or Software Serial on Uno, Nano...", "no_description", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "include the EduIntro library nothing here check the switchState of the button each time it is pressed, it toggles the servo's position when LOW, light should go on", "Adafruit_ImageReader test for Adafruit ST7735 TFT Breakout for Arduino. Demonstrates loading images from SD card or flash memory to the screen, to RAM, and how to query image file dimensions. Requires three BMP files in root directory of SD card: rgbwheel.bmp, miniwoof.bmp and wales.bmp.", "Open serial communications and wait for port to open: start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip);", "send message to client send message to client webSocket.sendTXT(num, \"message here\"); send data to all connected clients webSocket.broadcastTXT(\"message here\");", "Connect to wifi Wait some time to connect to wifi Check if connected to wifi try to connect to Websockets server run callback when messages are received", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG LOW  = contact is open HIGH = contact is closed if state has changed", "Web server root handler Change handlers Setup function Connect WIFI ? Check connection", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct to store measurement from powersensor this is where you read from power sensor", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings MQTT topics - match to the OpenHAB \"things\" configuration file Configures the Keybus interface with the specified pins - dscWritePin is optional, leaving it out disables the", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "include the EduIntro library nothing here the potentiometer values", "Demo the quad alphanumeric display LED backpack kit scrolls through every character, then scrolls Serial input onto the display display every character, scroll down display", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- Listen for MIDI messages on channel 1", "Globals, used for compatibility with Arduino-style sketches. Create an area of memory to use for input, output, and intermediate arrays. The size of this will depend on the model you're using, and may need to be determined by experimentation. The name of this function is important for Arduino compatibility.", "Klugde to temporarily fix RP2040W WiFi.status() bug ( https: You can change longer or shorter depending on your network response Shorter => more responsive, but more ping traffic Use ping() to test TCP connections For ESP32, this better be 0 to shorten the connect time.", "Date and time functions using a DS1307 RTC connected via I2C and Wire lib When time needs to be set on a new device, or after a power loss, the following line sets the RTC to the date & time this sketch was compiled This line sets the RTC with an explicit date & time, for example to set January 21, 2014 at 3am you would call:", "return lcd.swap565(x, 0, y); sprites[flip].clear(); * draw fps and counter draw outer dial", "vReal[i] = uint8_t((amplitude * (sin(i * ratio) + 1.0)) / 2.0);/* Build data displaced on the Y axis to include only positive values*/ delay(2000); /* Repeat after delay */", "camera settings replace with your own model! configure motion detection the higher the stride, the faster the detection the higher the stride, the lesser granularity", "Initialize the Ethernet client library with the IP address and port of the server that you want to connect to (port 80 is default for HTTP): Open serial communications and wait for port to open: this check is only needed on the Leonardo:", "initialize serial communications at 9600 bps read the potentiometer's value: set the led brightness print the results to the serial monitor: wait 10 milliseconds before the next loop", "This example shows how to store and read binary data from memory to database. Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Define Firebase Data object", "Create a circular buffer with a capacity of 10 start serial Add some values to the buffer Create an array to hold the buffer's contents Copy the buffer's contents to the array", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for setupEthernet connection ETHERNET_USE_RPIPICO, use default SS = 5 or 17", "Input pin with interrupt capability const int timerInterruptPin = 2; Variables modified during an interrupt must be declared volatile Set the pin attached to PCF8523 INT to be an input with pullup to HIGH. The PCF8523 interrupt pin will briefly pull it LOW at the end of a given", "---------------------------------------------------------------------------- setup() and loop() ----------------------------------------------------------------------------", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). This is for debug prints", "Configure the PulseSensor manager. Now that everything is ready, start reading the PulseSensor signal. Flash the led to show things didn't work.", "no_description", "Adafruit Circuit Playground Fidget Spinner Tachometer This sketch uses the light sensor built in to Circuit Playground to detect the speed (in revolutions per second) of a fidget spinner. Load the sketch on a Circuit Playground (either classic or express) and notice the first three NeoPixels will turn on bright white.", "Select the IP address according to your local network Select the IP address according to your local network join default namespace (no auto join in Socket.IO V3) hexdump(payload, length); hexdump(payload, length);", "demonstrate pulse with slow changes in pulse width GUItool: begin automatically generated code GUItool: end automatically generated code Set up", "Default SD chip select is SS pin create Serial stream ------------------------------------------------------------------------------ store error strings in flash to save RAM ------------------------------------------------------------------------------", "create the rf23 object, see https: Max message size assign the SPI1 pins set RX and TX pins INITIALIZATION", "Emulate Serial1 on pins 6/7 if not present initialize Serial1 for communication with the WiFi module don't continue waiting for connection to Wifi network with settings in the WiFi module start the WiFi OTA library with internal (flash) based storage", "Select your modem: #define TINY_GSM_MODEM_SIM808 #define TINY_GSM_MODEM_SIM868 #define TINY_GSM_MODEM_SIM900 #define TINY_GSM_MODEM_SIM7000", "no_description", "no_description", "waiting for connection to Wifi network set with the SetupWiFiConnection sketch", "Pulse per quarter note. Each beat has 24 pulses. Tempo is based on software inner BPM. Count pulses and send note Clock start byte Clock stop byte", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Do something with x and y Debug console", "A simple server implementation with regex routes: * serve static messages * read GET and POST parameters * handle missing pages / 404s Add buildflag ASYNCWEBSERVER_REGEX to enable the regex support", "no_description", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "Example project which can be built with SSL enabled or disabled. The espressif8266_stage platform must be installed. Refer to platformio.ini for the build configuration and platform installation. #define ASYNC_TCP_SSL_ENABLED       false #define MQTT_HOST         IPAddress(192, 168, 2, 110)", "EU Test USA Test", "Open serial communications and wait a few seconds", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "If using a stepper driver, with STEP and DIR pins: If using a four-wire stepper: ContinuousStepper<FourWireStepper> stepper; If using a stepper driver, with STEP and DIR pins If using a four-wire stepper:", "set radio receiver parameters - see comments below remember to set the same radio parameters in transmitter and receiver boards! start radio module tests", "PRE LIBRARIES SETTINGS base URL for SockJS (websocket) connection The complete URL will look something like this(cf. http:", "no data recieved", "Simple sine wave test for WM8731 Audio Codec Board Requires the MikroElektronika Audio Codec board or similar hardware http: Recommended connections: Mikroe   Teensy 3.1", "LongPrintTime_Blink.ino Print and Blink without delay, but with long prints install SafeString library from Library manager or from https: the loopTimer, BufferedOutput, SafeStringReader and millisDelay are all included in SafeString library V3+ Pin 13 has an led connected on most Arduino boards.", "put your setup code here, to run once: reset settings - wipe credentials for testing wm.resetSettings(); automatically connect using saved credentials if they exist If connection fails it starts an access point with the specified name", "#include <M5Stack.h> The i2c_scanner uses the return value of the Write.endTransmisstion to see if a device did acknowledge to the address. Request Device name to identify KeiganMotor", "Put your target table here Put your JSON that you want to insert rows You can also use library like ArduinoJson generate this", "no_description", "See midictrl.png in the example folder for the wiring diagram, as well as README.md. Change the order of the pins to change the ctrl or note order. Convert from 10bit value to 7bit. Initialize initial values.", "Size of the color selection boxes and the paintbrush size while (!Serial) delay(10); make the color selection boxes select the current color 'red' we have some minimum pressure we consider 'valid'", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3", "include the library RF69 has the following connections: CS pin:    10 DIO0 pin:  2 RESET pin: 3", "Wifi network station credentials Telegram BOT Token (Get from Botfather) no file Create empty file (w+ not working as expect) too large file", "Adafruit M0 Express CircuitPython Repair Author: Limor Fried for flashTransport definition file system object from SdFat while (!Serial);", "Baca kelembapan tanah Tentukan kondisi kelembapan tanah Nilai pH tetap netral Periksa pesan dari bot", "load the servo motor implementation first _______________________________________________________________________ Sonar Navigation reduce speed if type == MANEUVER_TURN && parameter < 0 ... (left turn)", "Connect to the on-board serial flash device https: SPIFBlockDevice root(SPI_MOSI, SPI_MISO, SPI_SCK, SPI_SS, 40000000); Define block devices for serial flash partitions https:", "Adafruit Watchdog Library Basic Usage Example Simple example of how to use the watchdog library. Author: Tony DiCola wait for Arduino Serial Monitor (native USB boards) First a normal example of using the watchdog timer.", "Use the MD_MAX72XX library to play Pong Play pong on just one matrix. Bat is controlled by 2 switches for left and right movement. Optionally use a pot on analog input to set the speed. --------------------", "Open serial communications and wait a few seconds SafeString::setOutput(Serial);", "Set and save new PID parameter if you need m.speedP(14); m.saveAllRegisters(); You can reset the PID parameters m.resetPID();", "This should turn your TV on and off", "Crear una nueva lista Aadir elementos de 0 a 10 Array para ejemplos con rangos Ejemplo aadir Ejemplo insertar", "SPDX-FileCopyrightText: (c) 2023-2024 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later BroadcastChat is a simple chat application that broadcasts and receives text messages over UDP. This file is part of the QNEthernet library.", "Dummy file to placify the silly Arduino IDE. Do not delete unless you know what you do.", "Globals, used for compatibility with Arduino-style sketches. Create an area of memory to use for input, output, and intermediate arrays. The size of this will depend on the model you're using, and may need to be determined by experimentation. The name of this function is important for Arduino compatibility.", "Blynk.begin(auth, ssid, pass); Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080);", "Check connection every 1s #define MQTT_HOST         IPAddress(192, 168, 2, 110) Repeat forever, millis() resolution start the ethernet connection and the server Use random mac", "send by radio if empty save on SD blink!", "For the breakout, you can use any 2 or 3 pins These pins will also work for the 1.8\" TFT shield in which case, set this #define pin to -1! while (!Serial); large block of text", "bool prohibitWriting(int index) { return index == BUFF_LEN - 1; } wire_asukiaaa::PeripheralHandler wirePeri(&Wire, BUFF_LEN, prohibitWriting);", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. isButtonPressed = !digitalRead(BUTTON_PIN);", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our dimmable switch setup function for WiFi connection", "Initialize serial and wait for port to open: check for the presence of the shield: don't continue: attempt to connect to WiFi network: wait 10 seconds for connection:", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Select the IP address according to your local network Google DNS Server IP / To be called before ETH.begin() bool begin(uint8_t phy_addr=ETH_PHY_ADDR, int power=ETH_PHY_POWER, int mdc=ETH_PHY_MDC, int mdio=ETH_PHY_MDIO,", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "NTP.stop(); Deprecated Serial.println(millis() - last);", "no_description", "Set a callback to get the current time used to validate the servers certificate Set the ECCX08 slot to use for the private key and the accompanying public certificate for it Optional, set the client id used for MQTT,", "include the library code: initialize the library by associating any needed LCD interface pin with the arduino pin number it is connected to set up the LCD's number of columns and rows: Print a message to the LCD.", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "no_description", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3", "thingspeak needs minimum 15 sec delay between updates, i've set it to 30 seconds", "camera settings replace with your own model! init camera init SPIFFS await for filename from the Serial Monitor", "A simple read/write example for SD.h. Mostly from the SD.h ReadWrite example. Your SD must be formatted FAT16/FAT32. SD.h does not support some default SdFat features. To compare flash size, set USE_FAT_FILE_FLAG_CONTIGUOUS,", "include the library include the melody SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2", "we hvae loooots of PSRAM so lets use a GFX canvas for flicker-free graphics! while (!Serial) delay(10); turn on the TFT / I2C power supply get starting positions canvas.println(\"Quad Encoder QT Demo\");", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" This is called for all virtual pins, that don't have BLYNK_WRITE handler Print all parameter values", "GUItool: begin automatically generated code GUItool: end automatically generated code for best effect make your terminal/monitor a minimum of 31 chars wide and as high as you can.", "no_description", "#include <SPIFFS.h> #define FILESYSTEM SPIFFS ------------------------ ------------------------ Wait for connection", "no_description", "WiThrottleProtocol library: Consist control example Shows how to create and control a consist Tested with ESP32-WROOM board Peter Akers (Flash62au), Peter Cole (PeteGSX) and Chris Harlow (UKBloke), 2023 Luca Dentella, 2020", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. config.cert.data = rootCACert; Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Initialize DHT sensor. Note that older versions of this library took an optional third parameter to", "Take 10 milliseconds of sound data to calculate", "Setup clock Begin I2C communication Begin Serial communication Setup alarm one to fire every minute No need to turn Alarm one on.", "This program sets up serial communication on the Teensy and repeatedly sendsa message over the UART connection. Use minicom on the RPi to see the message.", "To demo how to include files in multi-file Projects To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error put your main code here, to run repeatedly:", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set. Large data transmission may require larger RX buffer, otherwise connection issue or data read time out can be occurred.", "print the SSID of the network you're attached to: you're connected now, so print out the data print the received signal strength: initialize serial for ESP module initialize ESP module", "a couple of colors array for the gradient examples a couple of gradient examples based on colors arrays for degrees to radians conversions some constant values based on display width/height some random values based on display width/height", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "Quick hardware test for SPI card access. SD_FAT_TYPE = 0 for SdFat/File as defined in SdFatConfig.h, 1 for FAT16/FAT32, 2 for exFAT, 3 for FAT16/FAT32 and exFAT. Set DISABLE_CHIP_SELECT to disable a second SPI device. For example, with the Ethernet shield, set DISABLE_CHIP_SELECT", "FILE: DHT20_offset.ino AUTHOR: Rob Tillaart PURPOSE: Demo for DHT20 I2C humidity & temperature sensor URL: https: Always check datasheet - front view", "Adafruit_BME680 bme(BME_CS); Adafruit_BME680 bme(BME_CS, BME_MOSI, BME_MISO, BME_SCK); Set up oversampling and filter initialization Tell BME680 to begin measurement. There's no need to delay() until millis() >= endTime: bme.endReading()", "Adafruit_SPIDevice spi_dev = Adafruit_SPIDevice(SPIDEVICE_CS, 13, 12, 11, 100000, SPI_BITORDER_MSBFIRST, SPI_MODE1);", "This example shows how to use the alphanumeric segment names in an animation. Author: Jonny Bergdahl (github@bergdahl.org) For each step of the animation, write the value to the given digit", "no_description", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network start the ethernet connection and the server Use random mac Use Static IP", "RS485Class RS485(Serial2, 26, 32, -1, -1); ACSSR CTL ON ACSSR LED CTL RED COLOR GET ACSSR STATUS GET ACSSR LED COLOR", "Dial Tone (DTMF) decoding example. The audio with dial tones is connected to audio shield Left Line-In pin.  Dial tone output is produced on the Line-Out and headphones. Use the Arduino Serial Monitor to watch for incoming", "app Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 31, 140), 8080);", "no_description", "#define UART_MASTER_I2C_SLAVE 1 Call Backs Startup the RPC interface and a debug channel. Once all call backs have been registered we can start processing remote events.", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network start the ethernet connection and the server Use random mac Use Static IP", "no_description", "Test code for Adafruit GPS modules using MTK3329/MTK3339 driver This code turns on the LOCUS built-in datalogger. The datalogger turns off when power is lost, so you MUST turn it on every time you want to use it! Tested and works great with the Adafruit GPS FeatherWing", "GLEE 2023 Module 2: Intro to Arduino - Blink Sketch Welcome to Module 2, let's get some lights blinking! We begin by defining variables LED1 and LED2 to store output pin configuration Next we define variables to configure time off and between blinks With setup() only running onces per device reset, we utilize the pinMode function to set pins LED1 and LED2 as outputs", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define array of supported color temperatures a map used to convert a given color temperature into color temperature index (used for colorTemperatureArray)", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Now support ArduinoJson 6.0.0+ ( tested with v6.15.2 to v6.16.1 )", "Test code for Adafruit GPS modules using MTK3329/MTK3339 driver This code erases the LOCUS built-in datalogger storage Tested and works great with the Adafruit Ultimate GPS module using MTK33x9 chipset ------> http:", "no usar delay!, chequear el tiempo transcurrido con millis()", "initialize Serial comunication wait for the serial port to connect. Needed for Native USB only initialize the Accessory Shield library clear the OLED display, otherwise we have have many dots printed on the OLED display of Accessory Shield", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our dimmable switch setup function for setupEthernet connection", "Wifi t6 t6 web sockets Once Claimed, reschedule next message not before a long time MDNS", "Callback methods prototypes Tasks put your setup code here, to run once: Try different delay intervals to see CPU statistics change delay(1);", "if (! bmp.begin_SPI(BMP_CS)) { if (! bmp.begin_SPI(BMP_CS, BMP_SCK, BMP_MISO, BMP_MOSI)) { Set up oversampling and filter initialization", "Interrupt frequency, in seconds myRTC interrupt pin Setup clock Variables for use in method parameter lists Interrupt signaling byte", "Adafruit_WavePlayer example using Adafruit_ZeroTimer (within Adafruit_Arcada) for timing control. Crude error handler. Prints message to Serial Monitor, blinks LED. find the next wav file wrap around to beginning of directory", "Definities Aantal rijen displays (Voor de A-Vision ESP8266 learning board is dat 1) Aantal kolommen displays (Voor de A-Vision ESP8266 learning board is dat 1) Digitale ingang voor de drukknop (Vrije keuze) Includes", "while (!Serial) delay(10); get starting position did we move around? don't overwhelm serial port", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "A simple server implementation showing how to: * serve static messages * read GET and POST parameters * handle missing pages / 404s Enter a MAC address and IP address for your controller below.", "reconfigure these pins to be the ones where you plug your wires which are the keys you will be using ... ? array to control the buttons we are going to use the serial communication as a way to see on the PC what is happening on the Arduino", "#define EEPROM_EMULATION_SIZE     (4 * 1024) Use 0-2. Larger for more debugging messages To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error Check signature at address 0 If the EEPROM doesn't store valid data, then no WRITTEN_SIGNATURE", "HID report descriptor using TinyUSB's template Generic In Out with 64 bytes report (max) USB HID object the setup function runs once when you press reset or power the board Manual begin() is required on core without built-in support e.g. mbed rp2040", "Sets the initial angle for the motors Check if the control key pressed is the Enter Button Check if the Joystick Left is pressed Check if the Joystick Right is pressed", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Optional values to override default settings #define SPI_HOST            1 #define SPI_CLOCK_MHZ       8 Must connect INT to GPIOxx or not working", "define the symbols on the buttons of the keypads initialize an instance of class NewKeypad Number of samples in each delay line Allocate the delay lines for left and right channels Default is to just pass the audio through.", "These definitions must be placed before #include <ESPAsync_WiFiManager.h> Redundant, for v1.10.0 only #include <ESPAsync_WiFiManager-Impl.h> put your setup code here, to run once: initialize the LED digital pin as an output.", "Print the sender ID Print the first Payload Byte", "A simple server implementation with regex routes: * serve static messages * read GET and POST parameters * handle missing pages / 404s Add buildflag ASYNCWEBSERVER_REGEX to enable the regex support", "The API key can be obtained from Firebase console > Project Overview > Project settings. ServiceAuth is required for listing the collection Ids. Binding the FirebaseApp for authentication handler. To unbind, use Docs.resetApp(); In case setting the external async result to the sync task (optional)", "Can be included as many times as necessary, without `Multiple Definitions` Linker Error Print length of data to run CRC on. Print the result of calling FlashStorage_crc()", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 if device switched off...do nothing debounce motionsensor state transitions (same as debouncing a pushbutton)", "ILI9341 with 8-bit parallel interface: while(!Serial); Turn on backlight (required on PyPortal) read diagnostics (optional but can help debug problems) Outlines are not included in timing results", "Try to connect to a wifi network Give the ESP some time to connect add that value to array in the server notify if error occurred", "Define for your board, not all have built-in LED and/or button:", "Include the (new) library Pin definition Initialize both motors Used to display information Wait for Serial Monitor to be opened", "Demo for getting individual unified sensor data from the LSM6DS series Can change this to be LSM6DSOX or whatever ya like Adafruit_LSM6DS3TRC lsm6ds; /* Get a new normalized sensor event */", "A UDP instance to let us send and receive packets over UDP Klugde to temporarily fix RP2040W WiFi.status() bug ( https: You can change longer or shorter depending on your network response Shorter => more responsive, but more ping traffic Use ping() to test TCP connections", "no_description", "no_description", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Debug console", "print the SSID of the network you're attached to: you're connected now, so print out the data print the received signal strength: initialize serial for ESP module initialize ESP module", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "This program sets up an Ethernet connection using the NativeEthernet library and obtains the local IP address, subnet mask, gateway IP, and DNS server IP. It continuously checks the Ethernet link status and prints the connection information if the Ethernet is connected, otherwise it indicates that the Ethernet is not connected and repeats the check every 10 seconds. Ethernet settings Start the serial communication Wait for the serial monitor to be opened", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 is button pressed (inverted logic! button pressed = LOW) and debounced? flip myPowerState: if it was true, set it to false, vice versa", "DMA-based SPI buffer write.  This is transmit-only as written, i.e. not equivalent to Arduino's SPI.transfer() which both sends and receives a single byte or word.  Also, this is single-buffered to demonstrate a simple SPI write case.  See zerodma_spi2.ino for an example using double buffering (2 buffers alternating fill & transmit).", "no_description", "An example of the SoftSpiDriver template class. This example is for an old Adafruit Data Logging Shield on a Mega. Software SPI is required on Mega since this shield connects to pins 10-13. This example will also run on an Uno and other boards using software SPI. SD_FAT_TYPE = 0 for SdFat/File as defined in SdFatConfig.h,", "Calculate and set the client id used for MQTT Set the message callback, this function is called when the MQTTClient receives a message MQTT client is disconnected, connect poll for new MQTT messages and send keep alives", "for your motor initialize the stepper library on pins 8 through 11: set the speed at 60 rpm: initialize the serial port: step one revolution  in one direction:", "We will set the MAC address at the beginning of `setup()` using TeensyID's `teensyMac` helper. Enter websockets server port. Define how many clients we accpet simultaneously. Set the MAC address.", "Call pulseIn function to wait for High pulse result will be time in microseconds until pulse is detected Sound travels at 1125 feet per second or 74.642 microseconds per inch This gives the distance travelled by the ping, outbound", "<<<<<<<<<<<<<<<<<<<<<<<<<< Setup >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> <<<<<<<<<<<<<<<<<<<<<<<<<<<< Loop >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>", "GUItool: begin automatically generated code GUItool: end automatically generated code const int myInput = AUDIO_INPUT_MIC; Audio connections require memory to work.  For more detailed information, see the MemoryAndCpuUsage example", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Now support ArduinoJson 6.0.0+ ( tested with v6.14.1 )", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our dimmable switch setup function for WiFi connection", "block in EEPROM to save high scores Ball Bounds used in collision detection Brick Bounds used in collision detection pause render until it's time for the next frame Title screen loop switches from title screen", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our dimmable switch setup function for WiFi connection", "Taking care of some special events.", "ArduinoJson - arduinojson.org Copyright Benoit Blanchon 2014-2018 MIT License This example shows how to parse a JSON document in an HTTP response. It uses the Ethernet library, but can be easily adapted for Wifi.", "see the tutorial https: Pin 13 has an LED connected on most Arduino boards. if using Arduino IDE 1.5 or above you can use pre-defined LED_BUILTIN  instead of 'led' the setup routine runs once when you press reset:", "Enter your sensitive data in arduino_secrets.h Wait for Serial Monitor or start after 2.5s Set the callbacks for connectivity management Check for HSM Configure TLS to use HSM and the key/certificate pair", "MUST BE AN INTTERUPT COMPATIBLE PIN Declare as volatile, since modofied in ISR Create a RinBuf object designed to hold a 20 Event structs Check if null pointer Attach the interrupt service routine", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings Configures the Keybus interface with the specified pins - dscWritePin is optional, leaving it out disables the virtual keypad.", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set. Large data transmission may require larger RX buffer, otherwise connection issue or data read time out can be occurred.", "The API key can be obtained from Firebase console > Project Overview > Project settings. For anonymous sign up. To get the authentication time to live in seconds before expired. app.ttl(); Blocking authentication handler with timeout", "include the library nRF24 has the following connections: CS pin:    10 IRQ pin:   2 CE pin:    3", "#define BLYNK_DEBUG #define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" You can specify your board mac adress", "List of the ports on the Arduino. Light Ports are handled in analog mode for fading. Setup while (!Serial); Ports setups Accessories setups", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for setupEthernet connection ETHERNET_USE_RPIPICO, use default SS = 5 or 17", "paint one LED per row. The HT16K33 internal memory looks like a 8x16 bit matrix (8 rows, 16 columns) draw a diagonal row of pixels write the changes we just made to the display", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" V3 LED Widget is blinking Debug console", "Adafruit_BMP280 bmp(BMP_CS); Adafruit_BMP280 bmp(BMP_CS, BMP_MOSI, BMP_MISO,  BMP_SCK); status = bmp.begin(BMP280_ADDRESS_ALT, BMP280_CHIPID);", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "Can be included as many times as necessary, without `Multiple Definitions` Linker Error", "The setup routine runs once when you press reset: Configure audio sampling rate, which determines the peak frequency of the spectrum output. There are 32 possible values (0-31), where lower numbers = higher frequency. The corresponding frequency for each setting will depend on the", "#warning Using LAN8742A Ethernet & STM32Ethernet lib Change pins according to your boards Select the IP address according to your local network Enter a MAC address and IP address for your controller below. Serial.println( \"[\" + String(num) + \"] Disconnected!\");", "no_description", "An IR detector/demodulator is connected to GPIO pin 14(D5 on a NodeMCU board). Note: GPIO 16 won't work on the ESP8266 as it does not have interrupts. Note: GPIO 14 won't work on the ESP32-C3 as it causes the board to reboot. print() & println() can't handle printing long longs. (uint64_t)", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Air quality sensor event dispatch time.  Min is every 1 min. setup function for setupEthernet connection", "include the library CC1101 has the following connections: CS pin:    10 GDO0 pin:  2 RST pin:   unused", "IDs of the displayed directional UI buttons", "Adafruit CC3000 Firmware V1.13 Upgrade Sketch Based on firmware patcher for MSP430 chips published by Texas Instruments. This sketch will upgrade CC3000 modules up to firmware version 1.13. You can find more details about the changes in the 1.13 firmware from TI at: http:", "Talkie library Copyright 2011 Peter Knight This code is released under GPLv2 license. The following phrases are derived from those built into the Acorn Computers Speech Synthesiser add-on from 1983.", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Your WiFi credentials. Set password to \"\" for open networks. Debug console", "Initialize the FirebaseApp or auth task handler. To deinitialize, use deinitializeApp(app). The async result and async result callback are not needed for legacy token.", "libraries Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number initialize the library instance messages for serial monitor response", "no_description", "include the library no need to configure pins, signals are routed to the radio internally set RF switch configuration for Nucleo WL55JC1 NOTE: other boards may be different! Some boards may not have either LP or HP.", "To eliminate FW warning when using not latest nina-fw version To use whenever WiFi101-FirmwareUpdater-Plugin is not sync'ed with nina-fw version https: Initialize serial and wait for port to open: check for the WiFi module:", "Green LED on Red LED on", "#include \"Botletics_modem.h\" Define *one* of the following lines: #define SIMCOM_7070 #define SIMCOM_7500 #define SIMCOM_7600", "Initialize the authentication handler. Binding the authentication handler with your Database class object. Set your database URL In sync functions, we have to set the operating result for the client that works with the function. Set, push and get integer value", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Enter a MAC address and IP address for your controller below.", "FILE: PIR_performance.ino AUTHOR: Rob Tillaart PURPOSE: demo pir sensor class URL: https: fully loaded", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 is button pressed (inverted logic! button pressed = LOW) and debounced? flip myPowerState: if it was true, set it to false, vice versa", "libraries Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number initialize the library instance Save data variables", "Update these with values suitable for your network. handle message arrived Setup console", "These are the interrupt and control pins These can be any two pins Use hardware SPI for the remaining pins On an UNO, SCK = 13, MISO = 12, and MOSI = 11 Security can be WLAN_SEC_UNSEC, WLAN_SEC_WEP, WLAN_SEC_WPA or WLAN_SEC_WPA2", "include the EduIntro library nothing here", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "HID report descriptor using TinyUSB's template Single Report (no ID) descriptor USB HID object Report payload defined in src/class/hid/hid.h - For Gamepad Button Bit Mask see  hid_gamepad_button_bm_t", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 channelNames used to convert channelNumber into channelName please put in your TV channel names", "KH Print hearbeat every PRINT_INTERVAL (20) seconds. don't continue Check for New Ip Every 10 mins.", "----------------------------------------------------------------------------- ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- Listen to incoming notes", "ConstantSpeed.pde -*- mode: C++ -*- Shows how to run AccelStepper in the simplest, fixed speed mode with no accelerations Requires the AFMotor library (https:", "Pinch movement Elbow movement Shoulder movement Base movement Fetch the joints positions", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries You have to add initialization for your Custom Ethernet here This is just an example to setCSPin to USE_THIS_SS_PIN, and can be not correct and enough Ethernet.init(USE_THIS_SS_PIN);", "Include the DHT11 library for interfacing with the sensor. Create an instance of the DHT11 class. - For Arduino: Connect the sensor to Digital I/O Pin 2. - For ESP32: Connect the sensor to pin GPIO2 or P2. - For ESP8266: Connect the sensor to GPIO2 or D4.", "example sketch to turn your circuit playground into a picoboard potentiometer is 'simulated' by tilting the cplay (accelerometer Z is reported) pin #13 red LED is lit when data is sent to Scratch! Serial.println(\"Start!\"); data is a request!", "Connect to wifi Wait some time to connect to wifi Check if connected to wifi try to connect to Websockets server run callback when messages are received", "scroll 13 positions (string length) to the left to move it offscreen left: scroll 29 positions (string length + display length) to the right to move it offscreen right: scroll 16 positions (display length + string length) to the left to move it back to center:", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set. Large data transmission may require larger RX buffer, otherwise connection issue or data read time out can be occurred.", "no_description", "camera settings !!!!REPLACE WITH YOUR OWN MODEL!!!! face detection only works at 240x240 you can choose fast detection (50ms) or accurate detection (80ms)", "inputs outputs include plugins LCD Encoder", "Constants for image rasterization BLE settings String to calculate the local and device name Create an area of memory to use for input, output, and intermediate arrays. The size of this will depend on the model you're using, and may need to be", "Talkie library Copyright 2011 Peter Knight This code is released under GPLv2 license. A female voice with an American accent const uint8_t spP_M_[]      PROGMEM = {0x0E,0x98,0x41,0x54,0x00,0x43,0xA0,0x05,0xAB,0x42,0x8E,0x1D,0xA3,0x15,0xEC,0x4E,0x58,0xF7,0x92,0x66,0x70,0x1B,0x66,0xDB,0x73,0x99,0xC1,0xEB,0x98,0xED,0xD6,0x25,0x25,0x6F,0x70,0x92,0xDD,0x64,0xD8,0xFC,0x61,0xD0,0x66,0x83,0xD6,0x0A,0x86,0x23,0xAB,0x69,0xDA,0x2B,0x18,0x9E,0x3D,0x37,0x69,0x9D,0xA8,0x07,0x71,0x9F,0xA0,0xBD,0xA2,0x16,0xD5,0x7C,0x54,0xF6,0x88,0x6B,0x54,0x8B,0x34,0x49,0x2D,0x29,0x49,0x3C,0x34,0x64,0xA5,0x24,0x1B,0x36,0xD7,0x72,0x13,0x92,0xA4,0xC4,0x2D,0xC3,0xB3,0x4B,0xA3,0x62,0x0F,0x2B,0x37,0x6E,0x8B,0x5A,0xD4,0x3D,0xDD,0x9A,0x2D,0x50,0x93,0xF6,0x4C,0xAA,0xB6,0xC4,0x85,0x3B,0xB2,0xB1,0xD8,0x93,0x20,0x4D,0x8F,0x24,0xFF,0x0F};", "Copyright (C) 2010 Georg Kaindl http: This file is part of Arduino EthernetBonjour. EthernetBonjour is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License", "If we are using TinyUSB we will have the filesystem show up! while(!Serial) delay(10); Start TFT and fill blue Turn on backlight Load full-screen BMP file at position (0,0) (top left).", "SPDX-FileCopyrightText: (c) 2023-2024 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later AltcpTemplate shows how to use the altcp framework for creating custom connections. It defines a function that returns a TLS or proxy configuration.", "Supply your own freeMemory method Callback methods prototypes Statis task Generating another task to-do: think of something to put in here.", "now.pde Prints a snapshot of the current date and time along with the UNIX time Modified by Andy Wickert from the JeeLabs / Ladyada RTC library examples 5/15/11", "LoopTimer_BlinkDelay.ino install SafeString library from Library manager or from https: the loopTimer, BufferedOutput, SafeStringReader and millisDelay are all included in SafeString library V3+ the setup function runs once when you press reset or power the board initialize digital pin led as an output.", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Enter a MAC address and IP address for your controller below.", "on SAMD09, analog in can be 2, 3, or 4 on Attinyxy7, analog in can be 0-3, 6, 7, 18-20 on Attinyxy6, analog in can be 0-5, 14-16", "#include <Streaming.h> choose field and options ------------------------------------- select field and options ------------------------------------- toggle field and options ------------------------------------- the submenu -------------------------------------", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP", "Braccio ++ joints Fetch the joints positions Print the joint angles", "For ESP8266, change for other boards if necessary For ESP8266 Pin                D0(GPIO16)    D1(GPIO5)    D2(GPIO4)    D3(GPIO0)    D4(GPIO2)    D8 EthernetGeneric    X                 X            X            X            X        0 Ethernet_ESP8266   0                 0            0            0            0        0", "connect the interrupt pin on the seesaw (pin 8 on samd09 breakout) to this pin on your arduino the interrupt will fire when this pin on the seesaw changes state", "Adafruit_BMP280 bmp(BMP_CS); Adafruit_BMP280 bmp(BMP_CS, BMP_MOSI, BMP_MISO,  BMP_SCK); if (!bmp.begin(BMP280_ADDRESS_ALT, BMP280_CHIPID)) { must call this to wake sensor up and get new measurement data it blocks until measurement is complete", "no_description", "Create the OLED display display.setContrast (0); Start OLED Show image buffer on the display hardware. Since the buffer is intialized with an Adafruit splashscreen", "Copyright (C) 2010 Georg Kaindl http: This file is part of Arduino EthernetBonjour. EthernetBonjour is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Database.resetApp(); In case setting the external async result to the sync task (optional)", "Libraries to include Constructors require an entirely separate copy of the library to be included, so in this case it is more efficient to use floats and accept the higher ram use.", "Example to start ESP8266 in soft access point / hotspot mode and also enable mDNS response on local network. This allows client to discover the AppleMIDI service and connect to it without having to type the IP address and port Tested on iOS 9 (old iPad) and iOS 13 (iPhone 6)", "Set the input current limit to 2 A and the overload input voltage to 3.88 V set the minimum voltage used to feeding the module embed on Board Set the desired charge voltage to 4.11 V Set the charge current to 375 mA the charge current should be defined as maximum at (C for hour)/2h", "include the library LR1110 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "empty the buffer in case of spurious data put your setup code here, to run once:", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct to store measurement from powersensor this is where you read from power sensor", "Use ESP8266 core v2.7.4- for SSL as new cores don't use axtls anymore Use core v3.0.2+ for LwIP Ethernet W5500lwIP, W5100lwIP and ENC28J60lwIP libraries Must use KH forked ESPAsyncTCP library or compile error Check connection every 2s #define MQTT_HOST         IPAddress(192, 168, 2, 110)", "==================== start of TUNEABLE PARAMETERS ==================== The GPIO an IR detector/demodulator is connected to. Recommended: 14 (D5) Note: GPIO 16 won't work on the ESP8266 as it does not have interrupts. Note: GPIO 14 won't work on the ESP32-C3 as it causes the board to reboot. GPIO to use to control the IR LED circuit. Recommended: 4 (D2).", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings Configures the Keybus interface with the specified pins. Initialize components", "Settings Configures the Keybus interface with the specified pins. Initialize components Starts the Keybus interface Updates status if WiFi drops and reconnects", "Default pin 10 to SS/CS SETTINGS base URL for SockJS (websocket) connection The complete URL will look something like this(cf. http: ws:", "Initialize the radio settings by using the initialize_radio function Argument 1: Set frequency to 915 Argument 2: Set output power to 17 Argument 3: Set Bandwidth to 250 Argument 4: Set spreading factor to 12", "wait for a central device to connect this must be called regularly to perform BLE updates whatever is written to BLE UART appears in the Serial Monitor whatever is written in Serial Monitor appears in BLE UART", "expect 0xDA39A3EE5E6B4B0D3255BFEF95601890AFD80709 expect 0x2FD4E1C67A2D28FCED849EE1BB76E7391B93EB12 expect 0xFBDB1D1B18AA6C08324B7D64B71FB76370690E1D expect 0xDE7C9B85B8B78AA6BC8A7A36F70A90701C9DB4D9", "initialize serial for ESP module initialize ESP module don't continue Check for New Ip Every 10 mins.", "Basic demo for tap/doubletap readings from Adafruit LIS3DH Used for software SPI Used for hardware & software SPI software SPI Adafruit_LIS3DH lis = Adafruit_LIS3DH(LIS3DH_CS, LIS3DH_MOSI, LIS3DH_MISO, LIS3DH_CLK);", "The stereo line input is encoded into mid and side components. The mid component will be attenuated (mixer1), which leaves some headroom for the side component to be increased in volume (mixer2). Furthermore, the side component is high-passed (biquad1). We attenuate the MID channel a little to prevent saturation when increasing the SIDE channel gain", "no_description", "put your setup code here, to run once: put your main code here, to run repeatedly:", "Example to demonstrate write latency for preallocated exFAT files. I suggest you write a PC program to convert very large bin files. The maximum data rate will depend on the quality of your SD, the size of the FIFO, and using dedicated SPI. ------------------------------------------------------------------------------", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Invert state, since button is \"Active LOW\" Debounce mechanism", "Initialization functions and set up the initial position for Braccio All the servo motors will be positioned in the \"safety\" position: Base (M1):90 degrees Shoulder (M2): 45 degrees Elbow (M3): 180 degrees", "Adafruit_ImageReader test for Adafruit E-Ink Breakouts. Demonstrates loading images from SD card or flash memory to the screen, to RAM, and how to query image file dimensions. Requires BMP file in root directory of QSPI Flash: blinka.bmp.", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3", "Select the IP address according to your local network Google DNS Server IP Deprecated echo.websocket.org to be replaced To run a local WebSocket Server send message to server when Connected", "#include <streamFlow.h> define menu colors -------------------------------------------------------- each color is in the format: {{disabled normal,disabled selected},{enabled normal,enabled selected, enabled editing}} define menu outputs ------------------------------------------------", "The target is to simulate a traffic light with four leds. A group defines the traffic light, which link four light accessories. Four different states defines which light must be on, which must be off. Only one button is used to move from one state to the following, returning to the first one when finished.", "APIs to set date's fields: hours, minutes and seconds Enables Alarm on PCF8563T set the minutes at which the alarm should rise Attach an interrupt to the RTC interrupt pin To disable the alarm uncomment the following line:", "Globals, used for compatibility with Arduino-style sketches. An area of memory to use for input, output, and intermediate arrays. The name of this function is important for Arduino compatibility. Set up logging. Google style is to avoid globals or statics because of lifetime uncertainty, but since this has a trivial destructor it's okay.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct for the std::map below this is the main configuration", "Feather RP2040 ThinkInk 1.54\" 152x152 Tricolor EPD with ILI0373 chipset ThinkInk_154_Tricolor_Z17 display(EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY, EPD_SPI); 1.54\" 152x152 Tricolor EPD with SSD1680 chipset", "**** TFT-LCD RELATED LIBRARIES *** *** MENU LIBRARY AND ASSOCIATED ENCODER LIBRARIES *** *** ROTARY ENCODER PINS AS USED ON AN ARDUINO MEGA-2560 *** customizing a prompt look! by extending the prompt class", "the type of the record is unsigned long: we intend to store milliseconds the buffer can contain up to 10 records the buffer will use a byte for its index to reduce memory footprint stores button click time in the buffer, appending after the last element checks if the buffer has reached maximum capacity to avoid overwrites", "#define BLYNK_USE_DIRECT_CONNECT You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console", "ArduinoJson - https: Copyright  2014-2024, Benoit BLANCHON MIT License This example shows how to use DeserializationOption::Filter https:", "#include <./src/semilimes.h>", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Define Firebase Data object This is the size of stream payload received (current and max value)", "Create the motor shield object with the default I2C address Or, create it with a different I2C address (say for stacking) Adafruit_MotorShield AFMS = Adafruit_MotorShield(0x61); Select which 'port' M1, M2, M3 or M4. In this case, M1 You can also make another motor on port M2", "Now that everything is ready, start reading the PulseSensor signal. Flash the led to show things didn't work. write the latest sample to Serial.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection setup function for SinricPro", "------------------------------------------------------------------------- Test early bailout upon assert failure. ------------------------------------------------------------------------- ------------------------------------------------------------------------- Test immediate termination macros: failTestNow(), passTestNow(),", "prototype of the function that will re-encode the frame on-the-fly prototype of the functon that will put JPEG-encoded data back into the frame camera settings", "no_description", "Adafruit_ImageReader test for Adafruit ST7735 TFT Breakout for Arduino. Demonstrates loading images from SD card or flash memory to the screen, to RAM, and how to query image file dimensions. Requires three BMP files in root directory of SD card: parrot.bmp, miniwoof.bmp and wales.bmp.", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip);", "Uncomment the following line if you are using 2.13\" Monochrome EPD with SSD1680 ThinkInk_213_Mono_B74 display(EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY); Uncomment the following line if you are using 2.13\" Tri-Color EPD with SSD1680 ThinkInk_213_Tricolor_RW display(EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY); Uncomment the following line if you are using 2.13\" EPD with SSD1675", "motor.presetPosition(0);", "Arduino Moving Average Library https: Copyright (C) 2020 by Jack Christensen and licensed under GNU GPL v3.0, https: Example sketch to test/demonstrate calculating shorter term averages", "OLED SSD1306 128x32 Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag.", "Note: Set Serial Monitor to \"Newline\" for TelekomDesign TD1208 Sigfox device micro = 300e6; Pad with zero API Key, Owner ID ENTER YOUR OWN OWNER ID AND API KEY HERE BEFORE FIRST RUN!!!", "ADC channel 1 ADC channel 2 canot be used while WiFi is on, pins 27,26,25 15,14,13,12,3,2,0 Init adc ports Get positions of the variables Read adc ports", "FILE: DHT20_async.ino AUTHOR: Rob Tillaart PURPOSE: Demo for DHT20 I2C humidity & temperature sensor URL: https: Always check datasheet - front view", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 checkButtonpress reads if BUTTON_PIN gets LOW and send Event", "Overall number of calculator tasks: Callback methods prototypes Tasks Calculator tasks. Note that all three tasks use the same callback methods", "create two new variables to store the previous joystick and the new joystick value declare new variables to store the initial frequency and buzzer delay used to play the buzzer minimum value of the buzzer frequency", "Libraries to include Constructors Set up the lcd Welcome messages Draw the graph:", "Start address and size should matches value in the CircuitPython (INTERNAL_FLASH_FILESYSTEM = 1) to make it easier to switch between Arduino and CircuitPython file system object from SdFat ------------------------------------------------------------------------------ Init internal flash", "Check connection every 1s To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error #define MQTT_HOST         IPAddress(192, 168, 2, 110) Repeat forever, millis() resolution print the SSID of the network you're attached to:", "include the library SX1280 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "Your board <-> ESP_AT baud rate: initialize serial for ESP module", "Create PDM receiver object, with Clock and Data pins used (not all pins available) Adafruit_ZeroPDM pdm = Adafruit_ZeroPDM(34, 35); a windowed sinc filter for 44 khz, 64 samples a manual loop-unroller! Configure serial port.", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console If you want to remove all points: myMap.clear();", "declare global variables and constants that will be used later in the code body of setup() function executes only once at the beginning of the program setup communication via USB Serial port setup pin with attached LED as OUTPUT body of loop() function executes infinitely in the loop", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false From v1.1.0", "Uncomment if using the Murata chip as a module LoRaModem modem(Serial1); put your setup code here, to run once: change this to your regional band (eg. US915, AS923, ...)", "Special thanks to Matthew Rahtz - http: each time through the loop, play a different chord then strum the 6 string several times", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Enter a MAC address and IP address for your controller below.", "create a variable of type SpacebrewYun and initialize it with the constructor variable that holds the last potentiometer value create variables to manage interval between each time we send a string start the serial port for debugging, wait until a serial console is connected", "no_description", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console", "FILE: DHT20_read_status.ino AUTHOR: Rob Tillaart PURPOSE: Demo for DHT20 I2C humidity & temperature sensor URL: https: Always check datasheet - front view", "Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag.", "no_description", "ArduinoJson - arduinojson.org Copyright Benoit Blanchon 2014-2018 MIT License This example shows the different ways you can use String with ArduinoJson. Use String objects sparingly, because ArduinoJson duplicates them in the", "Configure the PulseSensor manager. Now that everything is ready, start reading the PulseSensor signal. Flash the led to show things didn't work. start up the LED matrix so we can control it. write the latest sample to Serial.", "isButtonPressed = !digitalRead(BUTTON_PIN); *** WARNING: You are limited to send ONLY ONE E-MAIL PER 5 SECONDS! *** Let's send an e-mail when you press the button connected to digital pin BUTTON_PIN (2) on your Arduino This can be seen in the Serial Monitor", "BMP280_DEV - ESP32, I2C Communications, Default Configuration, Normal Conversion, User-Defined Pins", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct to store measurement from powersensor this is where you read from power sensor", "#include <menuIO/ansiSerialOut.h> define menu colors for ANSI terminal each color is in the format: {{disabled normal,disabled selected},{enabled normal,enabled selected, enabled editing}} this is the tmp shadow data (stored on flash)", "The API key can be obtained from Firebase console > Project Overview > Project settings. Define the project location e.g. us-central1 or asia-northeast1 */ https: ServiceAuth is required for Google Cloud Functions functions. Binding the FirebaseApp for authentication handler.", "this must be a power of 2 the sample rate the lowest frequency that will register on the meter the highest frequency that will register on the meter the setup routine runs once when you press reset:", "PrintTimeDelay_Task.ino Prints time using delay (bad) install SafeString library from Library manager or from https: the loopTimer, BufferedOutput, SafeStringReader and millisDelay are all included in SafeString library V3+ the setup function runs once when you press reset or power the board", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Select the IP address according to your local network Google DNS Server IP setup function for ETH connection", "Create new LCD03 instance Define the custom char bytes Initialise a 20x4 LCD create a new character Fill the LCD with our custom smiley", "Circuit Playground PZ-1 Pizza Box DJ by John Park a.k.a. DJ Sternocleidomastoid for Adafruit Industries MIT License", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our speaker Speaker device callbacks", "Display the settings. Display the encoded IR sequence. Set up what we want to send. See ir_Kelvinator.cpp for all the options. Most things default to off. Now send the IR signal.", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Serial.println( \"[\" + String(num) + \"] Disconnected!\");", "This sketch can interactivelly send all the commands to an OPPO BDP-93 BluRay player. It contains a large number of raw signals. To save RAM memory (which is a precious resource on \"standard\" Arduinos), the data is stored in the flash memory, \"PROGMEM\". The sketch is a simplified versions of the \"Arduino/Raw\" export from", "analog_out.period_ms(CHANNEL, PERIOD_MILLISECONDS); Output values which will be changed with this variable analog_out.write(CHANNEL, OUTPUT_VOLTAGE_VALUE); Maximum output value is 10.4V Additional 100 ms delay introduced to manage 10.5V -> 0V fall time of 150 ms", "initialize the robot initialize the screen", "Set up the wifi client You don't need to change anything below this line! Setup a feed called 'photocell' for publishing. Notice MQTT paths for AIO follow the form: <username>/feeds/<feedname> Setup a feed called 'onoff' for subscribing to changes.", "Arduino RBD Threshold Library v1.0.3 - Unit test coverage. https: Copyright (c) 2015 Alex Taujenis - MIT License set at values far above the tested range setLevel", "Latching.channelDirection(LATCHING_CMD_1, POSITIVE); Latching.latch(); delay(200); Latching.release(); Latching.channelDirection(LATCHING_CMD_1, LOW);", "Arduino Moving Average Library https: Copyright (C) 2018 by Jack Christensen and licensed under GNU GPL v3.0, https: Example sketch to smooth readings from an MCP9802 I2C temperature sensor.", "ArduinoJson - arduinojson.org Copyright Benoit Blanchon 2014-2018 MIT License This example shows the different ways you can use Flash strings with ArduinoJson.", "#define MyWire    Wire1 init i2c usb with buffer and size If already enumerated, additional class driverr begin() e.g msc, hid, midi won't take effect until re-enumeration callback from tinyusb", "FILE: DHT12_test_esp.ino AUTHOR: Rob Tillaart PURPOSE: Demo for DHT12 I2C humidity & temperature sensor READ DATA DISPLAY DATA, sensor has only one decimal.", "Advanced Microcontroller-based Audio Workshop http: https: Part 2-6: Feedback (Echo) Delay copy the Design Tool code here", "Dweet.io POST client. Connects to dweet.io once every ten seconds, sends a POST request and a request body. Shows how to use Strings to assemble path and body Select a test server address use your own thing name here 600s = 10 minutes to not flooding, 60s in testing", "include the EduIntro library initialize serial communications at 9600 bps Print the collected data in a row on the Serial Monitor", "10 Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "SafeString_ReadFrom_WriteTo.ino The sketch illustrates the use of readFrom(), writeTo() nextToken(), removeBefore() and the use of static SafeStrings to hold values between method calls This example reads from a arbitarily large char array into a small SafeString which is then parsed for valid commands. Any commands found are then written to a very small output buffer which is very slowly printed out. None of these operation block.  Any other loop() code continues to run at fill speed", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- Stay informed on connection status", "The MIT License (MIT) Copyright (c) 2019 Ha Thach for Adafruit Industries for flashTransport definition 4 byte aligned buffer has best result with nRF QSPI the setup function runs once when you press reset or power the board", "#include <Dump.h> list of allowed characters individual character validators define \"Op 0\" without macro", "include the library Si4432 has the following connections: nSEL pin:  10 nIRQ pin:  2 SDN pin:   9", "SerialDEBUG->begin(DEBUG_BAUD, SERIAL_8N1, SERIAL_TX_ONLY); define node \"bell\" set device to ready", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define array of supported color temperatures a map used to convert a given color temperature into color temperature index (used for colorTemperatureArray)", "Unit tests for Adafruit_VEML6070 library By C. Matlack These unit tests require the AUnit unit testing library, available within the Arduino IDE. Note that old versions of the Arduino IDE, including 1.6.5, may not use a new enough", "HTML ID, LABEL,  Your struct char data, TEXT/CHECK, GROUP Need to save the eeprom data and restart the esp if we are updating data, force a refresh of the SSID Port defaults to 3232 ArduinoOTA.setPort(3232);", "This example shows how to construct queries to filter data. Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Define Firebase Data object", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ENC28J60 & ESP32-S3 Optional values to override default settings", "no_description", "no_description", "no_description", "LoRa example for the Edge control. This script configures your MKR1300 to receive Lora messages and send it to the Arduino Edge control. Connect one of the MKR1300 to the MKR2 socket in the EdgeControl board This script is designed to pair with \"LORA_EdgeControl.ino\". Also", "Callback methods prototypes Tasks PLEASE NOTE - THIS METHOD DOES NOT ACTIVATE TASKS, JUST RESETS THE START TIME Alternatively, tasks should be just enabled at the bottom of setup() method runner.enableAll();", "Important: For ESP32, check https: and replace cores/esp32/Server.h to avoid compile error Initialize the Ethernet client object For ESP8266, change for other boards if necessary For ESP8266", "camera settings replace with your own model! only works on 96x96 (yolo) grayscale images init camera init tf model", "ArduinoJson - arduinojson.org Copyright Benoit Blanchon 2014-2018 MIT License This example shows how to implement an HTTP server that sends JSON document in the responses.", "Copyright (C) 2010 Georg Kaindl http: This file is part of Arduino EthernetBonjour. EthernetBonjour is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip); read the status code and body of the response", "#define DEBUG every 100ms update subscribed characteristics", "client.subscribe((\"+/+/+/object_id/\"+String(objectId)+\"/cmd\").c_str ()); Serial.println(\"subscribed.\"); Wait 5 seconds before retrying", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Mac address should be different for each device in your LAN Debug console", "as described in the footer comment below Note that for additional security and reusability, you could use #define statements to specify these values in a .h file. For debugging, wait until a serial console is connected. while we haven't reached the max number of runs...", "Global Variables used in the setup() and loop() Initial setup to prepare loop() initialize digital pin LED_BUILTIN as an output.", "There's nothing to set up for this sketch", "no_description", "no_description", "WiThrottleProtocol library: SSID example Shows how to retrieve the list of discovered SSID (Networks) Tested with ESP32-WROOM board Peter Akers (Flash62au), Peter Cole (PeteGSX) and Chris Harlow (UKBloke), 2023 Global objects", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Check if auth file exists. Load auth config from file. Load auth from data.", "put your setup code here, to run once: record the x,y coordinates as the display is 480x800, anywhere you touch the screen it will trigger", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Debug console Please use timed events when LCD printintg in void loop to avoid sending too many commands", "Update these with values suitable for your network. handle message arrived Setup console", "For transport=websocket instead of transport=polling Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Select the Server's IP address according to your local network join default namespace (no auto join in Socket.IO V3)", "Making a JSON Object", "needed for library put your setup code here, to run once: WiFiManager Local intialization. Once its business is done, there is no need to keep it around exit after config instead of connecting", "Adafruit Circuit Playground Fidget Spinner Tachometer with LED Display This sketch uses the light sensor built in to Circuit Playground to detect the speed (in revolutions per second) of a fidget spinner and display it on a connected 4-digit 7-segment LED backpack display. See the tachometer example (without led_display) for a version that", "BLE Battery Service BLE Battery Level Characteristic Add BLEEncryption tag to require pairing. This controls the LED. Callback function with confirmation code when new device is pairing. Callback to allow accepting or rejecting pairing", "      : GMotor motor(DRIVER2WIRE, dig_pin, PWM_pin, (LOW / HIGH) ) GMotor motor(DRIVER3WIRE, dig_pin_A, dig_pin_B, PWM_pin, (LOW/HIGH) ) GMotor motor(RELAY2WIRE, dig_pin_A, dig_pin_B, (LOW/HIGH) )     3  11 (atmega328)  31 ", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set. Large data transmission may require larger RX buffer, otherwise connection issue or data read time out can be occurred.", "WiThrottleProtocol library: Multi throttle control example Shows how to control locos with multiple client throttles Tested with ESP32-WROOM board Peter Akers (Flash62au), Peter Cole (PeteGSX) and Chris Harlow (UKBloke), 2023 Luca Dentella, 2020", "Adafruit SPI Flash Total Erase Author: Tony DiCola This example will perform a complete erase of ALL data on the SPI flash.  This is handy to reset the flash into a known empty state and fix potential filesystem or other corruption issues.", "This example illustrates use of SdFat's minimal unbuffered AVR Serial support. This is useful for debug and saves RAM Will not work on Due, Leonardo, or Teensy", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Oak has already configured WiFi", "removed as extra libs are not included into travis #define USE_CLICK_ENCODER ST7735 1.8TFT 128x160 #define TFT_CS   A1 #define TFT_DC   A0", "Setup clock Begin I2C communication Setup alarm one to fire every second Use builtin LED to blink static variable to keep track of LED on/off state", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Select the IP address according to your local network Google DNS Server IP we use a struct to store all states and values for our speaker", "This program sends UDP packets over Ethernet, using a specific MAC address and a user - defined remote IP. It repeatedly constructs a JSON message with device details and a greeting, then sends this message every 5 seconds to the specified IP address and port. COSMOS Web listens on a network port, so this test can be used to verify that functionality works. Teensy 4.1 MAC address, keep this the same. UDP settings", "const int myInput = AUDIO_INPUT_MIC; for best effect make your terminal/monitor a minimum of 62 chars wide and as high as you can.", "commom anoda Initiation membuat kondisi ssd awal mati membuat angka 1 (pinled B dan C berlogika 0) membuat angka 2 (pinled C dan F berlogika 1)", "put your setup code here, to run once: reset running D11 put your main code here, to run repeatedly:", "#define ATTN_PIN 9", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Debug console", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ENC28J60 & ESP32-S3 Optional values to override default settings", "Initialize serial and wait for port to open: check for the presence of the shield: don't continue: attempt to connect to WiFi network: Connect to WPA/WPA2 network. Change this line if using open or WEP network:", "Declaration for SSD1306 display connected using software SPI (default case): SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally Show initial display buffer contents on the screen -- the library initializes this with an Adafruit splash screen. Clear the buffer", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our dimmable switch setup function for WiFi connection", "vReal[i] = uint8_t((amplitude * (sin(i * ratio) + 1.0)) / 2.0);/* Build data displaced on the Y axis to include only positive values*/ delay(2000); /* Repeat after delay */", "Replace with your network credentials Sets the trigPin on HIGH state for 10 micro seconds Reads the echoPin, returns the sound wave travel time in microseconds Calculate the distance Prints the distance in the Serial Monitor", "no_description", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "put your setup code here, to run once:", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 163), 8080); https:", "no_description", "FILE: uvi_demo_low_power.ino AUTHOR: Rob Tillaart PURPOSE: demo UV sensor URL: https: -- END OF FILE --", "Uncomment library definition, according to your board version #include <Arduino_LSM9DS1.h> The Tensor Arena memory area is used by TensorFlow Lite to store input, output and intermediate tensors It must be defined as a global array of byte (or u_int8 which is the same type on Arduino) The Tensor Arena size must be defined by trials and errors. We use here a quite large value.", "the minimum interval for sampling analog input default delay time between i2c read request and Wire.requestFrom() Forward declare a few functions to avoid compiler errors with older versions of the Arduino IDE. reuse indexes of detached servos until all have been reallocated", "Arduino_H7_Video Display(1024, 768, USBCVideo);", "Globals Climate stuff Store the success status of the last climate send. Primative lock file for gating MQTT state broadcasts. Note: *DOES NOT* control Serial output.", "Default Heater temperature and time base(Recommendation) customized Heater temperature and time base Update function should be continuously polled", "radio.begin() returns true if communication with radio module onboard is correct print that radio is ok stop printing radio debug to SerialUSB since everything is OK print that radio configuration failed...", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Define Firebase Data object This is the size of stream payload received (current and max value)", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Debug console", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "Include dependencies (libraries) Instantiate TMP117 class with id of one and debugging set to false Observation configuration Dynamic Variables Begin Serial Communications (Lunasat baud rate set to 9600)", "create a variable of type SpacebrewYun and initialize it with the constructor variable that holds the last potentiometer value create variables to manage interval between each time we send a string start the serial port for debugging, wait until a serial console is connected", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP", "#error(\"Height incorrect, please fix Adafruit_SSD1306.h!\");", "StreamUtils - github.com/bblanchon/ArduinoStreamUtils Copyright Benoit Blanchon 2019-2024 MIT License This example shows how to read from EEPROM Initialize serial port", "KH Print hearbeat every HEARTBEAT_INTERVAL (20) seconds. Debug console initialize serial for ESP module Optional to change default AP IP(192.168.100.1)", "Adafruit SPI Flash Total Erase Authors: Tony DiCola, Dan Halbert This example will perform a complete erase of ALL data on the SPI flash.  This is handy to reset the flash into a known empty state and fix potential filesystem or other corruption issues.", "Use dedicated hardware SPI pins turn on backlite turn on the TFT / I2C power supply initialize TFT large block of text", "------------------------------------------------------------------------------ Wait for USB Serial ------------------------------------------------------------------------------", "the setup function runs once when you press reset or power the board initialize digital pin LED_BUILTIN as an output. the loop function runs over and over again forever", "compute speed in RPM, for a two poles motor count for 100 events, and compute average speed", "TODO: Implement... Try to connect to a wifi network Give the ESP some time to connect get some sensor value to log add that value to array in the server", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false From v1.1.0", "Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager", "Adafruit Motor shield library copyright Adafruit Industries LLC, 2009 this code is public domain, enjoy! turn on motor", "join default namespace (no auto join in Socket.IO V3) Message Includes a ID for a ACK (callback) creat JSON message for Socket.IO (ack) add payload (parameters) for the ack (callback function) JSON to String (serializion)", "no_description", "Test code for Ultimate GPS Using Hardware Serial (e.g. GPS for Leonardo, Flora or FeatherWing) This code shows how to test a passthru between USB and hardware serial Tested and works great with the Adafruit GPS FeatherWing ------> https:", "Try to connect to a wifi network Give the ESP some time to connect listen for changes on key `led_state` get the new state log to serial", "This example downloads the URL \"http: Name of the server we want to connect to Path to download (this is the bit after the hostname in the URL that you want to download Number of milliseconds to wait without receiving any data before we give up", "Initialize the WiFi client library server address: IPAddress server(64,131,82,241); Initialize serial and wait for port to open: check for the presence of the shield:", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Air quality sensor event dispatch time.  Min is every 1 min. setup function for WiFi connection setup function for SinricPro", "Set up what we want to send. See ir_Daikin.cpp for all the options. Set the current time to 1:33PM (13:33) Time works in minutes past midnight Turn off about 1 hour later at 2:30PM (14:30) Display what we are going to send.", "Set the keypad type #define dscClassicKeypad Settings MQTT topics Configures the Keybus interface with the specified pins", "no_description", "Print the count to the Serial monitor Update the text of the label Increase the count number Initialize Portenta's video interface Setting up the label making it a child of the screen", "include the library SX1262 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "do nothing ignore", "Initialize Console and wait for port to open: Uncomment the following line to enable buffering: - better transmission speed and efficiency - needs to call Console.flush() to ensure that all transmitted data is sent", "include the library Override the default join rate Setup the OTAA session information Print the DevAddr Enable the ADR algorithm (on by default which is preferable)", "Initialize RF Object Flag to indicate that a packet was received Disable interrupt when it's not needed Don't set flag if interrupt isn't enabled Set flag signifying message was recieved", "no_description", "no_description", "Which pin on the Arduino is connected to the NeoPixels? On a Trinket or Gemma we suggest changing this to 1 use on-board neopixel PIN_NEOPIXEL if existed How many NeoPixels are attached to the Arduino? use on-board defined NEOPIXEL_NUM if existed", "Globals, used for compatibility with Arduino-style sketches. Create an area of memory to use for input, output, and intermediate arrays. The size of this will depend on the model you're using, and may need to be determined by experimentation. The name of this function is important for Arduino compatibility.", "Circuit Playground Accelerometer Mouse Example Tilt Circuit Playground left/right and up/down to move your mouse, and press the left and right push buttons to click the mouse buttons!  Make sure the slide switch is in the on (+) position to enable the mouse, or slide into the off (-) position to disable it.  By default the sketch assumes you hold", "To allow TinyGSM library integration, the following macro should be defined in src/FirebaseFS.h or your custom config file src/CustomFirebaseFS.h. #define TINY_GSM_MODEM_SIM7600 Set serial for debug console (to the Serial Monitor, default speed 115200) Set serial for AT commands (to the module)", "show last sensor operate status", "analog joystick parameters uint8_t pin, uint8_t sensivity=5, bool inv=false, int center=512,", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "This example is for ESP8266 boards --  Adafruit ESP8266 HUZZAH in this example It runs a simple hello server Configure a staticIP so you can connect the the hello server use ledPin = 2 for ESP-01S (Blue led on GPIO2) use ledPin = 1 for ESP-01 (Blue led on TX (GPIO1), ESP-01 also has a Red power led)", "to view the result open the serial monitor getting the voltage reading from the temperature sensor converting readingTemp to voltage now print out the temperature", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip); read the status code and body of the response", "print the SSID of the network you're attached to: you're connected now, so print out the data print the received signal strength: initialize serial for ESP module initialize ESP module", "Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number APN data initialize the library instance timeout", "The parameter indicates the MbedOS-wide mount point where the root of the filesystem on the SD will be available at. Format and remount Open the numbers file Create the numbers file if it doesn't exist", "https: Enable LW MQTT library after include the library and before include the FirebaseJson. send message, the Print interface can be used to set the message contents", "Configure the RPC client Register RPC callbacks and start the client RPC client loop Remember to set high value of timeouts when dealing with slow callbacks (the Network is SLOW!).", "------------------------------------------------------------------------------ Analog pin number list for a sample.  Pins may be in any order and pin numbers may be repeated. ------------------------------------------------------------------------------ Sample rate in samples per second.", "the minimum interval for sampling analog input default delay time between i2c read request and Wire.requestFrom() Forward declare a few functions to avoid compiler errors with older versions of the Arduino IDE. reuse indexes of detached servos until all have been reallocated", "no_description", "define \"Op 1\" or just this line on non AVR devices like teensy or esp8266 instead of the above three promptShadow op1Info(\"Op 1\",(callback)op1Func,enterEvent); define \"Op 2\" constMEM promptShadow& op2Info=*(promptShadow*)&op2InfoRaw;", "The MIT License (MIT) Copyright (c) 2019 Ha Thach for Adafruit Industries for flashTransport definition static const SPIFlash_Device_t my_flash_devices[] = { W25Q80DLX_EXAMPLE,", "send message to server when Connected send message to server webSocket.sendTXT(\"message here\"); send data to server webSocket.sendBIN(payload, length);", "#define BLYNK_USE_DIRECT_CONNECT For CoreUSB, use Serial for debug output You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console", "Wifi network station credentials Telegram BOT Token (Get from Botfather) LED parameters Get all the important data from the message Output the message_id to give you feeling on how this example works", "Default pin 10 to SS/CS Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Select the IP address according to your local network join default namespace (no auto join in Socket.IO V3)", "Change listener Mouse mode listener Websockets listener Set led brightness Connect WIFI ?", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Select the IP address according to your local network Google DNS Server IP is button pressed (inverted logic! button pressed = LOW) and debounced?", "include the library RF69 has the following connections: CS pin:    10 DIO0 pin:  2 RESET pin: 3", "Set the RTC only when LCD's PowerOn button is pressed. YMMV.", "baud rate used for both Serial ports reset the ublox module", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "the minimum interval for sampling analog input default delay time between i2c read request and Wire.requestFrom() Forward declare a few functions to avoid compiler errors with older versions of the Arduino IDE. reuse indexes of detached servos until all have been reallocated", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip); read the status code and body of the response", "#define WIFI_SSID \"Galaxy\" #define WIFI_PASSWORD \"fkhw8785\" Koneksi ke WiFi Tampilkan alamat IP pada serial monitor Customise of promise render element UI", "Globals, used for compatibility with Arduino-style sketches. An area of memory to use for input, output, and intermediate arrays. The name of this function is important for Arduino compatibility. Set up logging. Google style is to avoid globals or statics because of lifetime uncertainty, but since this has a trivial destructor it's okay.", "if you define WIFI_SSID and WIFI_PASS before importing the library you can call wifi.connect() instead of wifi.connect(ssid, password) camera settings replace with your own model! if connected to the internet, try to get time from NTP", "StreamUtils - github.com/bblanchon/ArduinoStreamUtils Copyright Benoit Blanchon 2019-2024 MIT License This example shows how to use StringStream Initialize serial port", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for setupEthernet connection ETHERNET_USE_RPIPICO, use default SS = 5 or 17", "Debug Level from 0 to 4 Select the IP address according to your local network Google DNS Server IP Initialize the SSL client library Arguments: EthernetClient, our trust anchors", "Select the IP address according to your local network join default namespace (no auto join in Socket.IO V3) Serial.begin(921600); Serial.setDebugOutput(true); disable AP", "Deprecated echo.websocket.org to be replaced To run a local WebSocket Server send message to server when Connected send message to server KH, To check", "Get Notified when your IP changes Check for new public IP every 10 seconds", "include the library Si4432 has the following connections: nSEL pin:  10 nIRQ pin:  2 SDN pin:   9", "while (!Serial) delay(10); Start TFT and fill black Start TFT and fill black Turn on backlight MSA301 @ 0x26 on older revs", "needed for library define your default values here, if there are different values in config.json, they are overwritten. flag for saving data callback notifying us of the need to save config put your setup code here, to run once:", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "AsyncFsWebServer server(80, FILESYSTEM, \"esphost\"); Test \"options\" values In order to show a dropdown list box in /setup page we need a list of values and a variable to store the selected option Var labels (in /setup webpage)", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3 Optional values to override default settings", "no_description", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. You can validate or verify user before initializing the app. Initialize the FirebaseApp or auth task handler. To deinitialize, use deinitializeApp(app).", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Debug console", "DHT Temperature & Humidity Sensor Unified Sensor Library Example Written by Tony DiCola for Adafruit Industries Released under an MIT license. REQUIRES the following Arduino libraries:", "first, include the library :) next, declare the stepper and connect pins 8,9,10,11 to IN1,IN2,IN3,IN4 on ULN2003 board let's create a boolean variable to save the direction of our rotation let's set a custom speed of 20rpm (the default is ~16.25rpm)", "TFT display and SD card will share the hardware SPI interface. Hardware SPI pins are specific to the Arduino board type and cannot be remapped to alternate pins.  For Arduino Uno, Duemilanove, etc., pin 11 = MOSI, pin 12 = MISO, pin 13 = SCK. Initialize 1.8\" TFT", "There are two speedup options for some of the FFT code: Define this to use reciprocal multiplication for division and some more speedups that might decrease precision #define FFT_SPEED_OVER_PRECISION Define this to use a low-precision square root approximation instead of the regular sqrt() call This might only work for specific use cases, but is significantly faster. Only works for ArduinoFFT<float>.", "include the EduIntro library define the song as (note, duration) pairs note durations: 4 = quarter note, 8 = eighth note, etc.: nothing here", "#define M5_STACK_USE Request motor measurement data True if received data is valid (without error).", "LiquidCrystal_I2C lcd(0x27); Encoder this encoder has a button here customizing a prompt look! by extending the prompt class", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Arduino MKR GSM 1400 uses U-blox modem Default heartbeat interval for GSM is 60", "Test code for Ultimate GPS Using Hardware Serial (e.g. GPS Flora or FeatherWing) This code shows how to listen to the GPS module via polling. Best used with Feathers or Flora where you have hardware Serial and no interrupt Tested and works great with the Adafruit GPS FeatherWing ------> https:", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct for the std::map below this is the main configuration", "as described in the footer comment below Note that for additional security and reusability, you could use #define statements to specify these values in a .h file. the clientID found in Google's Developer Console under API Manager > Credentials the clientSecret found in Google's Developer Console under API Manager > Credentials", "Sets how sensitive the imapct sensor is and starts serial communication Range options: 2_G, 4_G, 8_G, 16_G current acceleration", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Now support ArduinoJson 6.0.0+ ( tested with v6.15.2 to v6.16.1 )", "Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change. report status to Blynk Debug console From v1.0.5 Set config portal SSID and Password", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP Optional values to override default settings", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Initialize DHT sensor. Note that older versions of this library took an optional third parameter to", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Select the IP address according to your local network Google DNS Server IP / To be called before ETH.begin() bool begin(uint8_t phy_addr=ETH_PHY_ADDR, int power=ETH_PHY_POWER, int mdc=ETH_PHY_MDC, int mdio=ETH_PHY_MDIO,", "no_description", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP Optional values to override default settings", "Debug Level from 0 to 4 Select the IP address according to your local network Google DNS Server IP Initialize the SSL client library Arguments: EthernetClient, our trust anchors", "sample rate for the input size of the FFT to compute size of the spectrum output, half of FFT size array to store spectrum output create an FFT analyzer to be used with the I2S input", "Use the MD_MAX72XX library to implements a slot machine type display with scrolling symbols and simple sound effects. When numbers change they are scrolled up or down as if on a cylinder. Switch is on the SW_PIN digital input, buzzer driver by the toen() on BUZZ_PIN digital output.", "or ServiceAuth sa_auth(timeStatusCB, FIREBASE_CLIENT_EMAIL, FIREBASE_PROJECT_ID, PRIVATE_KEY); Or initializeApp(aClient, app, getAuth(sa_auth), aResult_no_callback); Binding the FirebaseApp for authentication handler.", "no_description", "Debug Level from 0 to 4 LittleFS has higher priority than SPIFFS For core v1.0.6-, ESP32-C3 only supporting SPIFFS and EEPROM. To use v2.0.0+ for LittleFS Use LittleFS Check cores/esp32/esp_arduino_version.h and cores/esp32/core_version.h", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Debug console You can also specify server:", "This example shows how to retain the past RTDB data within the period from present. Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Define Firebase Data object", "LoRa example for the Edge control. This script configures your Arduino Edge control to receive Lora messages from another Arduino. Requirements: 1 Edge Control board 2 MKR1300/1310 boards (sender and receiver)", "nRF52 and ESP32 use freeRTOS, we may need to run USBhost.task() in its own rtos's thread. Since USBHost.task() will put loop() into dormant state and prevent followed code from running until there is USB host event. USBHost is defined in usbh_helper.h CDC Host object", "create the rf23 object, see https: assign the SPI1 pins set RX and TX pins INITIALIZATION radio init function, defined below", "include the library SX1280 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "Update these with values suitable for your network. handle message arrived Setup console", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "TempDelayInputBlink_Tasks.ino Uses Adafruit's MAX31856 library which has delay(), (bad) install SafeString library from Library manager or from https: the loopTimer, BufferedOutput, SafeStringReader and millisDelay are all included in SafeString library V3+ Use software SPI: CS, DI, DO, CLK", "Globals, used for compatibility with Arduino-style sketches. An area of memory to use for input, output, and intermediate arrays. The name of this function is important for Arduino compatibility. Set up logging. Google style is to avoid globals or statics because of lifetime uncertainty, but since this has a trivial destructor it's okay.", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 163), 8080);", "Arduino Moving Average Library https: Copyright (C) 2018 by Jack Christensen and licensed under GNU GPL v3.0, https: Example sketch to smooth the readings from a TMP36 analog temperature sensor.", "Adafruit_ImageReader test for 2.4\" TFT FeatherWing. Demonstrates loading images from SD card or flash memory to the screen, to RAM, and how to query image file dimensions. OPEN THE ARDUINO SERIAL MONITOR WINDOW TO START PROGRAM. Requires three BMP files in root directory of SD card or flash: purple.bmp, parrot.bmp and wales.bmp.", "Get IoTtweet Library version Connect WiFi Example data generating Send data from your iot to Dashboard Waiting storage data on IoTtweet cloud 15 sec.", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "Adafruit_ImageReader test for Adafruit TFT Gizmo for CircuitPlayground. Demonstrates loading images to the screen, to RAM, and how to query image file dimensions. Requires three BMP files in root directory of SD card: parrot.bmp, miniwoof.bmp and wales.bmp.", "initialize the robot initialize the screen read a value send the value to the screen", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Configures the Keybus interface with the specified pins - dscWritePin is optional, leaving it out disables the virtual keypad. Initialize components", "This example is for ESP8266 and ESP32 Automatically parsing for response (w or w/o header) with chunk encoding supported.", "customizing a prompt look! by extending the prompt class altPrompt(constMEM promptShadow& p):prompt(p) {} define a pad style menu (single line menu) here with a set of fields to enter a date in YYYY/MM/DD format", "KH Print hearbeat every HEARTBEAT_INTERVAL (20) seconds. Debug console delay(1000); initialize serial for ESP module", "#define EEPROM_EMULATION_SIZE     (4 * 1024) Use 0-2. Larger for more debugging messages To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error Add one to each cell in the EEPROM Add one to each cell in the EEPROM", "Date and time functions using a PCF8523 RTC connected via I2C and Wire lib When time needs to be set on a new device, or after a power loss, the following line sets the RTC to the date & time this sketch was compiled This line sets the RTC with an explicit date & time, for example to set January 21, 2014 at 3am you would call:", "no_description", "Check the timer callback, this function is called every millisecond! enable NFC pins wait for color data to be ready Input a value 0 to 255 to get a color value. The colours are a transition r - g - b - back to r.", "no_description", "Include the library Pin definition Create one motor instance Initial speed Set initial speed", "#define EEPROM_EMULATION_SIZE     (4 * 1024) Use 0-2. Larger for more debugging messages To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error Print length of data to run CRC on. Print the result of calling eeprom_crc()", "Select your modem: #define TINY_GSM_MODEM_SIM808 #define TINY_GSM_MODEM_SIM868 #define TINY_GSM_MODEM_SIM900 #define TINY_GSM_MODEM_SIM7000", "create (empty) radio frame object that can store data to be sent via radio store (\"print\") value of counter variable into radio frame increment counter variable store \". Hello CanSat!\" message in radio frame", "#define BOT_TOKEN \"6750124624:AAHJS1dpTLPQLqWoX54x2z-N3eU81HWpNyg\" #define BOT_TOKEN \"6496147502:AAHpFRUPTyALtTuAiVuDHG1Vrd4T1JVumTw\" #define BOT_TOKEN \"6699715051:AAH2B5g0LP7lr4rwyVT9PHVkXjLg_1p43YU\" #define BOT_TOKEN \"6497483971:AAFz2hihiSokzyHTnXt3QzvhGFYdUkLt-iY\" #define BOT_TOKEN \"6737299519:AAF34LnNwdhoWd9dFOxpQVLoH-IBJYn1DLE\"", "include the library CC1101 has the following connections: CS pin:    10 GDO0 pin:  2 RST pin:   unused", "Adafruit_LSM9DS0 lsm = Adafruit_LSM9DS0(LSM9DS0_XM_CS, LSM9DS0_GYRO_CS, 1000); Adafruit_LSM9DS0 lsm = Adafruit_LSM9DS0(LSM9DS0_SCLK, LSM9DS0_MISO, LSM9DS0_MOSI, LSM9DS0_XM_CS, LSM9DS0_GYRO_CS, 1000); 1.) Set the accelerometer range lsm.setupAccel(lsm.LSM9DS0_ACCELRANGE_4G); lsm.setupAccel(lsm.LSM9DS0_ACCELRANGE_6G);", "no_description", "after WiFi settings have been provisioned Note that the actual MDNS name will have '.local' after the name above, so \"wifi101\" will be accessible on the MDNS name \"wifi101.local\". Create a MDNS responder to listen and respond to MDNS name requests.", "Wifi network station credentials Telegram BOT Token (Get from Botfather) Set WiFi to station mode and disconnect from an AP if it was Previously connected attempt to connect to Wifi network:", "no_description", "--------------------------------------- http: Init and start LittleFS file system Try to connect to stored SSID, start AP with captive portal if fails after timeout Set a custom /setup page title", "Advanced Microcontroller-based Audio Workshop http: https: Part 3-1: Peak Detection copy the Design Tool code here", "To connect with SSL/TLS: 1) Change WiFiClient to WiFiSSLClient. 2) Change port value from 1883 to 8883. 3) Change broker value to a server with a known SSL/TLS root certificate flashed in the WiFi module.", "This block will leverage a compiler function that allows checking a header file.  If the compiler doesn't support that function, it should skip the rest. If the compiler does support the check, it will look for \"secret.h\" in the src/ directory to add in your local AP SSID anf password. If", "Test code for Adafruit GPS That Support Using I2C This code shows how to test a passthru between USB and I2C Pick one up today at the Adafruit electronics shop and help support open source hardware & software! -ada Connect to the GPS on the hardware I2C port", "put your setup code here, to run once:", "DMA is filling the first half of the buffer, use data from the second half DMA is filling the second half of the buffer, use data from the first half", "Defined in thingProperties.h Connect to Arduino IoT Cloud", "no_description", "BufferedPrintTime_Blink.ino Print and Blink without delay and with buffered prints install the loopTimer library from https: loopTimer.h also needs the millisDelay library installed from https: install SafeString library from Library manager or from https:", "Initialize sensor Setup to sense a nice looking saw tooth on the plotter Arduino plotter auto-scales annoyingly. To get around this, pre-populate the plotter with 500 of an average reading from the sensor Take an average of IR readings at power up", "Encoder this encoder has a button here a keyboard with only one key as the encoder button input from the encoder + encoder button + serial --- define a second (aux) menu with independent IO --------------------------", "needed for library default custom static IP char static_ip[16] = \"10.0.1.59\"; char static_gw[16] = \"10.0.1.1\"; char static_sn[16] = \"255.255.255.0\";", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ENC28J60 & ESP32-S3 Optional values to override default settings", "Construct object, StepMotor(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency Stop Button) put your setup code here, to run once:", "IMU-Sensor", "no_description", "start the Modbus RTU server, with (slave) id 1 configure the LED configure a single coil at address 0x00 poll for Modbus RTU requests read the current value of the coil", "read all the sensor values print each of the sensor values print an empty line wait 1 second to print again", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP Optional values to override default settings", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). define pins (varies per shield/board) create ble serial instance, see pinouts above", "while(!Serial); SD card is pretty straightforward, a single call...", "include the library SX1262 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "HID report descriptor using TinyUSB's template Single Report (no ID) descriptor USB HID object. For ESP32 these values cannot be changed after this declaration desc report, desc len, protocol, interval, use out endpoint ------------- Input Pins -------------", "Enter an IP address for your controller below. The IP address will be dependent on your local network. gateway and subnet are optional: telnet defaults to port 23 Open serial communications and wait for port to open:", "This sketch sends a raw signal using the soft PWM sender every 5 seconds. It requires an IR-Led connected to the sending pin On slow processors, it may produce erroneous result, in particular modulation frequency. NEC(1) 122 29 with no repetition; powers on many Yamaha receivers", "This example takes UART data given to the seesaw, reads it and then loops it back enable interrupt delay after reading data", "When the sensor is still, the two pins are connected and D2 is pulled LOW.  On motion, the switch opens and the digital input will report a High value", "define the cymbols on the buttons of the keypads initialize an instance of class NewKeypad", "isButtonPressed = !digitalRead(BUTTON_PIN); *** WARNING: You are limited to send ONLY ONE E-MAIL PER 5 SECONDS! *** Let's send an e-mail when you press the button connected to digital pin BUTTON_PIN (2) on your Arduino This can be seen in the Serial Monitor", "no_description", "To connect with SSL/TLS: 1) Change WiFiClient to WiFiSSLClient. 2) Change port value from 1883 to 8883. 3) Change broker value to a server with a known SSL/TLS root certificate flashed in the WiFi module.", "Initialize serial: setup SD card don't continue: check for the presence of the shield: don't continue:", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network SKETCH BEGIN the whole message is in a single frame and we got all of it's data message is comprised of multiple frames or the frame is split into multiple packets", "RSTRTC_GPIOhigh BackLightRTC_GPIOhigh", "The API key can be obtained from Firebase console > Project Overview > Project settings. Initialize the FirebaseApp or auth task handler. To deinitialize, use deinitializeApp(app). To get the authentication time to live in seconds before expired. app.ttl();", "The API key can be obtained from Firebase console > Project Overview > Project settings. Define the project location e.g. us-central1 or asia-northeast1 */ https: ServiceAuth is required for Google Cloud Functions functions. Binding the FirebaseApp for authentication handler.", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). SHARED SPI SETTINGS (see adafruit webpages for details) Create ble instance, see pinouts above", "no_description", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries You have to add initialization for your Custom Ethernet here This is just an example to setCSPin to USE_THIS_SS_PIN, and can be not correct and enough Ethernet.init(USE_THIS_SS_PIN);", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip); read the status code and body of the response", "replace with your own model include BEFORE <eloquent_tinyml.h>! include the runtime specific for your board either tflm_esp32 or tflm_cortexm now you can include the eloquent tinyml wrapper", "Set gain Set resolution Set oversampling Set digital filtering Calibration", "Uncomment below to enable debug output. #define DEBUG_MODE Uncomment below to add a demo mode before USB connect These defines setup debug output if enabled above (otherwise it turns into no-ops that compile out).", "#define MQTT_HOST         IPAddress(192, 168, 2, 110)", "no_description", "no_description", "Adafruit_SPIDevice spi_dev = Adafruit_SPIDevice( MAX31865_SPI_CS, 13, 12, 11, MAX31865_SPI_SPEED, MAX31865_SPI_BITORDER, MAX31865_SPI_MODE); MAX31865 chip related ********************************************************************************************* Print the details of the configuration register. Check and print faults. Then clear them. Set up for automode 50Hz. We don't care about selfheating. We want the highest possible sampling rate.", "The value of the Rref resistor. Use 430.0 for PT100 and 4300.0 for PT1000 The 'nominal' 0-degrees-C resistance of the sensor 100.0 for PT100, 1000.0 for PT1000 Check and print any faults Check and print any faults", "Get and print temperatures Get and print atmospheric pressure data Get and print altitude data", "no_description", "Initialize RF Object Set the data rate to 9600 bits per second Initialize the radio settings by using the initialize_radio function Argument 1: Set frequency to 915 Argument 2: Set output power to 17", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "SPDX-FileCopyrightText: (c) 2021-2023 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later ServerWithListeners demonstrates how to use listeners to start and stop services. Do some testing, then connect the Teensy to an entirely different network by moving the Ethernet connection and", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for setupEthernet connection ETHERNET_USE_RPIPICO, use default SS = 5 or 17", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" APN data Uncomment this to use HTTPS", "This program will measure the time needed to receive, parse and process a NoteOn message. For it to work, please connect RX and TX on the MIDI port: Due, Leonardo and other USB-native Arduinos:     Serial1 All other Arduinos:                              Connect pins 2 and 3.", "Serial.println(\"\"); Serial.println(\"\");", "zahlen normiert Farbkreis - Algo if (++actual_led>=LEDS_SIZE) { actual_led = 0; } Uhr einfgen if (led[analog.tv_hour/SCALELED].r < CLOCK_INTENSITY) { led[analog.tv_hour/SCALELED].r = CLOCK_INTENSITY; }", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings Configures the Keybus interface with the specified pins Initialize components", "If we are using TinyUSB we will have the filesystem show up! while(!Serial) delay(10); Start TFT and fill blue Turn on backlight Load full-screen BMP file 'purple.bmp' at position (0,0) (top left).", "no_description", "Reproduced issue https: assert(WiFi.softAP(\"esp-captive-portal\")); dnsServer.start(53, \"*\", WiFi.softAPIP()); server.begin(); Serial.println(\"Captive portal started!\");", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- Stay informed on connection status", "Test code for Adafruit GPS modules using MTK3329/MTK3339 driver This code shows how to listen to the GPS module in an interrupt which allows the program to have more 'freedom' - just parse when a new NMEA sentence is available! Then access data when desired.", "StreamUtils - github.com/bblanchon/ArduinoStreamUtils Copyright Benoit Blanchon 2019-2024 MIT License This example shows how to use Hamming codes for error correction To run this program, you need two boards connected like so:", "Include the DHT11 library for interfacing with the sensor. Create an instance of the DHT11 class. - For Arduino: Connect the sensor to Digital I/O Pin 2. - For ESP32: Connect the sensor to pin GPIO2 or P2. - For ESP8266: Connect the sensor to GPIO2 or D4.", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Docs.resetApp(); In case setting the external async result to the sync task (optional)", "Libraries to include Constructors Set up the lcd Welcome messages Draw the graph:", "Serial.println(buttons, BIN);", "Callback methods prototypes Tasks", "Combined Demo by Marc MERLIN <marc_soft@merlins.org> Reviewed by Pablo Marqunez  <p.marquinez@arduino.cc> This demo uses all the devices from the Arduino Sensor Kit Showing the values on the Display Uncomment line below if your SensorKit is the variant with the DHT20 sensor", "try card.init(true) if errors occur on V1.0 Wave Shield enable optimize read - some cards may timeout forward declarition scroll through the files in the directory only play .WAV files", "if you don't want to use DNS (and reduce your sketch size) use the numeric IP instead of the name for the server: IPAddress server(74,125,232,128); Initialize the Ethernet client library with the IP address and port of the server", "LedSequencingMillisDelay see the tutorial https: Pin 13 has an LED connected on most Arduino boards. if using Arduino IDE 1.5 or above you can use pre-defined LED_BUILTIN  instead of 'led'", "timer tester define the interrupt handlers the timer 3 callbacks timer 4 callback, set dac output! analogWrite(A0, dacout++);", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Debug console You can also specify server:", "#include <SD.h> Open serial communications and wait for port to open: open the file. note that only one file can be open at a time, so you have to close this one before opening another. if the file opened okay, write to it:", "Select the IP address according to your local network Google DNS Server IP Deprecated echo.websocket.org to be replaced or it won't work send message to server when Connected send message to server", "no_description", "Construct object, Embryo(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency) put your setup code here, to run once: interruptions pins and configures endstops as OUTPUT Use this function only with the motor outside the axis Without this instruction the motor will move after the upload (It is dangerous)", "Pressure-Sensor static int32_t cm; lps331.getAltitude(cm); Serial.print(cm); lps331.getMeasurement(mbar);", "Select your modem: #define TINY_GSM_MODEM_SIM808 #define TINY_GSM_MODEM_SIM868 #define TINY_GSM_MODEM_SIM900 #define TINY_GSM_MODEM_SIM5360", "BMx280_otherInterfaces.ino shows how to use the BMx280 library using the SoftWire Library https: Copyright (c) 2021 Gregor Christandl connect the BMx280 to the Arduino like this: Arduino - BMx280", "i2c You can also use software SPI Adafruit_LSM9DS1 lsm = Adafruit_LSM9DS1(LSM9DS1_SCK, LSM9DS1_MISO, LSM9DS1_MOSI, LSM9DS1_XGCS, LSM9DS1_MCS); Or hardware SPI! In this case, only CS pins are passed in Adafruit_LSM9DS1 lsm = Adafruit_LSM9DS1(LSM9DS1_XGCS, LSM9DS1_MCS);", "Convert MIDI note to frequency Handle USB communication While there's MIDI USB input available... Parse MIDI Skip to beginning of next message (silently dropping stray data bytes)", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 debounce contact state transitions (same as debouncing a pushbutton) if state has changed", "no_description", "Create, parsing and modify JSON object and JSON array FirebaseJSON supports Arduino String, PROGMEM, flash string, std::string, char array, string literal, and sum of arduino String. All functions supported FPSTR, String, std::string, const char* and char array as parameters. To set content To add data to json", "These are the interrupt and control pins These can be any two pins Use hardware SPI for the remaining pins On an UNO, SCK = 13, MISO = 12, and MOSI = 11 Security can be WLAN_SEC_UNSEC, WLAN_SEC_WEP, WLAN_SEC_WPA or WLAN_SEC_WPA2", "Arduino Colors put your setup code here, to run once: put your main code here, to run repeatedly:", "Adafruit_ImageReader test for Adafruit Mini TFT Breakout for Arduino. Demonstrates loading images from SD card or flash memory to the screen, to RAM, and how to query image file dimensions. OPEN THE ARDUINO SERIAL MONITOR WINDOW TO START PROGRAM. Requires three BMP files in root directory of SD card:", "This sketch sends a raw signal using the PWM sender every 5 seconds. It requires an IR-Led connected to the sending pin NEC(1) 122 29 with no repetition; powers on many Yamaha receivers", "Adafruit CC3000 Firmware V1.12 Upgrade Sketch Based on firmware patcher for MSP430 chips published by Texas Instruments. This sketch will upgrade CC3000 modules up to firmware version 1.12. You can find more details about the changes in the 1.12 firmware from TI at: http:", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP", "SD chip select pin object for the SD file system define a serial output stream ------------------------------------------------------------------------------ open the output file", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Initialize DHT sensor. Note that older versions of this library took an optional third parameter to", "Start the I2C interface Start the serial interface send what's going on to the serial monitor. Start with the year then the month", "A simple server implementation with regex routes: * serve static messages * read GET and POST parameters * handle missing pages / 404s Add buildflag ASYNCWEBSERVER_REGEX to enable the regex support", "no_description", "To eliminate FW warning when using not latest nina-fw version To use whenever WiFi101-FirmwareUpdater-Plugin is not sync'ed with nina-fw version telnet defaults to port 23 Initialize serial and wait for port to open: don't continue", "#if defined(__AVR_ATtiny87__) || defined(__AVR_ATtiny167__) #define TX_PIN PIN_PA1 #elif defined(__AVR_ATtiny84__) #define TX_PIN PIN_PA1 #else", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "Construct object, StepMotor(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency Stop Button) Construct object, Embryo(axisX, axisY, Start Button, Emergency Stop Button) The start button is attached to the interrupt service routine that enables the motor and runs the homing procedure", "Initialize temperature sensor Start task to get temperature Start update of environment data every 20 seconds Get temperature values Got sleep again", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Database.resetApp(); In case setting the external async result to the sync task (optional)", "APN data initialize the library instance replace with your brooker, port and topic Initialize serial and wait for port to open: After starting the modem with GSM.begin()", "This example shows how get the app instance info. Library allows your ESP device to interact with FCM server through FCM Server protocols. https: This means your device now is not a FCM app client and unable to get the notification messages. The device registration tokens used in this example were taken from the FCM mobile app (Android or iOS)", "Copyright 2017, Temboo Inc. initialize the Bridge intro message update the package list upgrade the Temboo package", "Arduino Moving Average Library https: Copyright (C) 2018 by Jack Christensen and licensed under GNU GPL v3.0, https: Example sketch to smooth readings from an MCP9802 I2C temperature sensor.", "#include <menuIO/chainStream.h> customizing a prompt look! by extending the prompt class ,FIELD(test,\"Test\",\"%\",0,100,10,1,doNothing,noEvent,wrapStyle) ,OP(\"Alert test\",doAlert,enterEvent)", "Dweet.io POST client. Connects to dweet.io once every ten seconds, sends a POST request and a request body. Shows how to use Strings to assemble path and body Uncomment for certain HTTP site to optimize #define NOT_SEND_HEADER_AFTER_CONNECTED        true Level from 0-4", "BMx280_SPI.ino shows how to use the BMx280 library with the sensor connected using SPI. Copyright (c) 2018 Gregor Christandl connect the AS3935 to the Arduino like this: Arduino - AS3935", "Emulate Serial1 on pins 6/7 if not present don't continue uncomment this lines for persistent static IP. set addresses valid for your network IPAddress ip(192, 168, 1, 9); IPAddress gw(192, 168, 1, 1);", "You could use a spare Hardware Serial on boards that have it (like Mega) You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console Blynk will work through Serial", "PINOUT L_EN -> 8 R_EN -> 8 L_PWM -> 9 R_PWM -> 10", "Wifi network station credentials Telegram BOT Token (Get from Botfather) Initialize Camera settings cmd[0] = 0xaa; cmd[1] = 0x0e | cameraAddr;", "Joystick Colors Variables Event Handlers Screens functions", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Initialize DHT sensor. Note that older versions of this library took an optional third parameter to", "no_description", "include your motors declarations here next values are determined experimentally and is not part of this sketch min speed is the speed at witch your motors start spinning. Adjust so the car goes straight ahead (and steady) at minimum speed in both direction. max speed is the maximum speed supported by your driver (usually 255 or the maximum you choose).", "Toggle heater enabled state every 30 seconds An ~3.0 degC temperature increase can be noted when heater is enabled", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "KH Print hearbeat every HEARTBEAT_INTERVAL (20) seconds. Debug console initialize serial for ESP module Optional to change default AP IP(192.168.4.1)", "Simple date conversions and calculations", "GUItool: begin automatically generated code GUItool: end automatically generated code put your setup code here, to run once: audio library init put your main code here, to run repeatedly:", "Sets the initial angle for the motors Check if the control key pressed is the Enter Button", "Butterworth filter, 12 db/octave Linkwitz-Riley filter, 48 dB/octave biquad1.setLowpass(0, 800, 0.54); biquad1.setLowpass(1, 800, 1.3); biquad1.setLowpass(2, 800, 0.54);", "no_description", "#define HOST_NAME   \"192.168.2.30\" Your board <-> ESP_AT baud rate: initialize serial for ESP module", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Choose wifi_sec from WLAN_SEC_UNSEC, WLAN_SEC_WEP, WLAN_SEC_WPA or WLAN_SEC_WPA2", "Keep track of toggle-style press with an ISR ISR for button press detection", "A simple server implementation with regex routes: * serve static messages * read GET and POST parameters * handle missing pages / 404s Add buildflag ASYNCWEBSERVER_REGEX to enable the regex support", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. To get the authentication time to live in seconds before expired. app.ttl(); Blocking authentication handler with timeout", "put your setup code here, to run once: by default the local IP address of will be 192.168.3.1 you can override it with the following: WiFi.config(IPAddress(10, 0, 0, 1)); The AP needs the password be at least 8 characters long", "Adafruit_ImageReader test for Adafruit E-Ink Breakouts. Demonstrates loading images from SD card or flash memory to the screen, to RAM, and how to query image file dimensions. Requires BMP file in root directory of QSPI Flash: blinka.bmp.", "PCD8544 aka nokia5110 rotary encoder pins define menu colors -------------------------------------------------------- {{disabled normal,disabled selected},{enabled normal,enabled selected, enabled editing}} monochromatic color table", "These commands, in SLIP protocol, get the MAC Address from the ESP8266. UART to Serial Bridge Initialization Send the command1 to the ESP char by char Read the reply but the response is not useful Send the command2 to the ESP char by char", "you can initialize the object directly with the specialized constructor: Cdrv8833 myMotor2(IN1_PIN, IN2_PIN, CHANNEL, SWAP); initialize the object. Not needed if the initialization is done with the specialized constructor", "wifiManager.setAPCallback([this](WiFiManager* wifiManager) {", "Arduino Colors Let here empty.", "Declaration for SSD1306 display connected using software SPI (default case): SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally Show initial display buffer contents on the screen -- the library initializes this with an Adafruit splash screen. Clear the buffer", "see the SafeString_ConstructorAndDebugging example for debugging settings put your main code here, to run repeatedly:", "#include <Wire.h> #include <menuIO/chainStream.h> Serial.print(e); Serial.println(\" action2 executed, quiting menu\"); customizing a prompt look!", "no_description", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ENC28J60 & ESP32-S3 Optional values to override default settings", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ENC28J60 & ESP32-S3 Optional values to override default settings", "start the Modbus RTU client set the coils to 1 when counter is odd write 10 Coil values to (slave) id 42, address 0x00 Alternatively, to write a single Coil value use: ModbusRTUClient.coilWrite(...)", "no_description", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "create a matrix of NeoKey 1x4's this example is just two, one on top of another to make a 2x4 grid pass this matrix to the multi-neokey object Pulse all the LEDs on to show we're working activate all keys and set callbacks", "Relay control GPS module Radio module IMU modules Temperature sensor", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our speaker Speaker device callbacks", "These are the interrupt and control pins These can be any two pins Use hardware SPI for the remaining pins On an UNO, SCK = 13, MISO = 12, and MOSI = 11 Security can be WLAN_SEC_UNSEC, WLAN_SEC_WEP, WLAN_SEC_WPA or WLAN_SEC_WPA2", "select which pin will trigger the configuration portal when set to LOW put your setup code here, to run once put your main code here, to run repeatedly: is auto timeout portal running is configuration portal requested?", "initialise la DEL de l'Arduino comme sortie initialise le poussoir comme entre Selon l'tat du bouton, on allume ou teint la DEL", "#include <menuIO/encoderIn.h> #include <menuIO/keyIn.h> #define LEDPIN LED_BUILTIN U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, U8X8_PIN_NONE, SCL, SDA); U8G2_SSD1306_128X64_NONAME_1_HW_I2C u8g2(U8G2_R0, U8X8_PIN_NONE, SCL, SDA);", "This example only works with Greyscale cameras (due to the palette + resize&rotate algo) OV7670 ov767x; The buffer used to capture the frame The buffer used to rotate and resize the frame The buffer used to rotate and resize the frame", "put your setup code here, to run once: put your main code here, to run repeatedly: 3 axis", "Initialize Radio Object Concatinated full message string Indicator LED (Red) connected to pin 4 Convert full formated message to character array stored in buffer (at address p) Set LED Pin to output", "SD chip select pin test file ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ Wait for USB Serial", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Debug console", "no_description", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false For ESP32, To use ESP32 Dev Module, QIO, Flash 4MB/80MHz, Upload 921600", "initialize serial for ESP module initialize ESP module don't continue Check for New Ip Every 10 mins.", "------------------------------------------------------------------------------------------- Tested Module    : ERC1602-4, EASTRISING TECHNOLOGY CO,.LTD. Drive IC         : ST7032 INTERFACE        : I2C VDD              : 2.7V-5.5V", "put your main code here, to run repeatedly:", "Set DEBUG to true in order to enable debug print When the passthrough is enabled, Serial is busy -> so it cannot be used for debugging. Serial1 is used instead", "get starting position did we move around? don't overwhelm serial port", "#include <SPIFFS.h> #define FILESYSTEM SPIFFS WiFiServerSecure tcp(443); ------------------------ ------------------------", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Use 1 decimal point Use 1 decimal point", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "Credits of [Miguel Alexandre Wisintainer](https: For some STM32, there is only definition of Serial in variant.h, and is used for Serial/USB Debugging For example, in Nucleo-144 F767ZI original variant.h #define SERIAL_PORT_MONITOR     Serial #define SERIAL_PORT_HARDWARE    Serial", "This sketch demonstrates the MultiDecoder. It requires a demodulating sensor connected to pin RECEIVE_PIN.", "no_description", "Klugde to temporarily fix RP2040W WiFi.status() bug ( https: You can change longer or shorter depending on your network response Shorter => more responsive, but more ping traffic Use ping() to test TCP connections Using pin 13 will crash ESP32_C3", "Feather RP2040 ThinkInk ThinkInk_290_Grayscale4_T5 display(EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY, EPD_SPI); redraw only 4th digit display.display();", "   ArduinoIDE  ( TTGO T-Wristband  ESP-WROVER-KIT )  LovyanGFX.hppincludedefine LGFX_  #define LGFX_M5STACK #define LGFX_M5STACK_CORE2", "for setGestureSensitivity(..) a value between 1 and 100 is required. Higher values make the gesture recognition more sensitive but less accurate (a wrong gesture may be detected). Lower values makes the gesture recognition more accurate but less sensitive (some gestures may be missed). Default is 80", "no_description", "Set LunaSat configuration (1's equates to default mode) LunaSat object initialization is used for declaration of parameters such as ID and debugging mode Custom datatypes allow for sample specialization, user can craft their own ideal sample The GLEE library architecture enables easy, interpretable and familiar programming of the lunasat Simple fetching of sensor observation using lunaSat class", "Configure the motor driver. The setup routine runs once when you press reset. The loop routine runs over and over again forever.", "Initialize sensor Take average of readings", "as described in the footer comment below Note that for additional security and reusability, you could use #define statements to specify these values in a .h file. for debugging, wait until a serial console is connected only try to send the tweet if we haven't already sent it successfully", "Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number APN data initialize the library instance Specify IP address or hostname", "Arduino Colors", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Debug console", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "Wifi network station credentials Telegram BOT Token (Get from Botfather) attempt to connect to Wifi network: Check NTP/Time, usually it is instantaneous and you can delete the code below.", "FFT-based audio visualizer for Adafruit Circuit Playground: uses the built-in mic on A4, 10x NeoPixels for display.  Built on the ELM-Chan FFT library for AVR microcontrollers. The fast Fourier transform (FFT) algorithm converts a signal from the time domain to the frequency domain -- e.g. turning a sampled audio", "isButtonPressed = !digitalRead(BUTTON_PIN); *** WARNING: You are limited to send ONLY ONE E-MAIL PER 5 SECONDS! *** Let's send an e-mail when you press the button connected to digital pin BUTTON_PIN (2) on your Arduino This can be seen in the Serial Monitor", "The name of the root of the filesystem The SPIF Block Device The LittleFS filesystem Get core-wide instance of SPIF Block Device Mount the filesystem", "include the library create a dummy radio module create AFSK client instance using the external radio pin 5 is connected to the radio sound input create AX.25 client instance using the AFSK instance", "for setGestureSensitivity(..) a value between 1 and 100 is required. Higher values make the gesture recognition more sensitive but less accurate (a wrong gesture may be detected). Lower values makes the gesture recognition more accurate but less sensitive (some gestures may be missed). Default is 80", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Initialize DHT sensor. Note that older versions of this library took an optional third parameter to", "init Ciao Read digital input Write value into a file in root folder. Root folder is specified into the connector configuration file: /usr/lib/python2.7/ciao/connectors/file/file.json.conf Else you can specify the absolute path for the file, eg: /tmp/my-file.log", "IDs of the displayed directional UI buttons", "Uncomment if using the Murata chip as a module LoRaModem modem(Serial1); Please enter your sensitive data in the Secret tab or arduino_secrets.h put your setup code here, to run once: change this to your regional band (eg. US915, AS923, ...)", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Select the IP address according to your local network Google DNS Server IP setup function for ETH connection", "USB MIDI object Create a new instance of the Arduino MIDI Library, and attach usb_midi as the transport. Variable that holds the current position in the sequence. Store example melody as an array of note values", "show last sensor operate status", "Variable to store the battery voltage Serial port initialization Establishing the communication with the motor shield Reboot the motor controller; brings every value back to default Take the battery status", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for setupEthernet connection ETHERNET_USE_RPIPICO, use default SS = 5 or 17", "Advanced Microcontroller-based Audio Workshop http: https: Part 2-7: Filters copy the Design Tool code here", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Default is 30s, using 20s now", "Supply your own freeMemory method Callback methods prototypes Statis task Generating another task to-do: think of something to put in here.", "Use the MD_MAX72XX library to scroll text on the display Demonstrates the use of the callback function to control what is scrolled on the display text. Text to be displayed is stored on a SD card. Each line is scrolled continuously on the display and run off before the next one is shown.", "These are the interrupt and control pins These can be any two pins Use hardware SPI for the remaining pins On an UNO, SCK = 13, MISO = 12, and MOSI = 11 Security can be WLAN_SEC_UNSEC, WLAN_SEC_WEP, WLAN_SEC_WPA or WLAN_SEC_WPA2", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our speaker Speaker device callbacks", "initialize the Accessory Shield library read the pot trimmer value and use it to set the delay time used to change the RGB led state turn only the RED led ON (GREEN and BLUE leds are OFF) wait for a delay time specified by the pot value", "include the library CC1101 has the following connections: CS pin:    10 GDO0 pin:  2 RST pin:   unused", "Speaker demo for Circuit Playground -- when tapped, plays a very short digitized sound sample, very quietly (because teeny tiny speaker). Enable ONE of these lines to pick a sound to play back when tapped: #include \"trek.h\" This function will be called automatically when a tap is detected by the", "AO -> No Connection G  -> GND +  -> 5V DO -> D2", "Here we define a maximum framelength to 64 bytes. Default is 256. Define how many callback functions you have. Default is 1. This is for an unsecured network For a WPA1/2 network use auth 3, and in another command send 'set wlan phrase PASSWORD' For a WEP network use auth 2, and in another command send 'set wlan key KEY'", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP Optional values to override default settings", "include the EduIntro library define the song as (note, duration) pairs note durations: 4 = quarter note, 8 = eighth note, etc.: nothing here if the button was just pressed, play melody", "in steps of 1 degree", "empty loop delay(2000); /* Repeat after delay */", "Application's keys register the keys for this application register callback for incoming messages begin initialization show the node's main parameters", "t6 Server t6 JWT Authentication t6 Object t6 Flow for Pressure startWiFi();", "Select your modem: #define TINY_GSM_MODEM_SIM808 #define TINY_GSM_MODEM_SIM868 #define TINY_GSM_MODEM_SIM7000SSL #define TINY_GSM_MODEM_SIM7080", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection setup SinricPro", "include the library LR1110 has the following connections: NSS pin:   10 IRQ pin:   2 NRST pin:  3", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings Configures the Keybus interface with the specified pins - dscWritePin is optional, leaving it out disables the virtual keypad.", "Specify data and clock connections and instantiate SHT1x object default to 5.0v boards, e.g. Arduino UNO if 3.3v board is used SHT1x sht1x(dataPin, clockPin, SHT1x::Voltage::DC_3_3v); Read values from the sensor", "no_description", "To use the default WiFi library here For transport=websocket instead of transport=polling Select the IP address according to your local network Select the IP address according to your local network join default namespace (no auto join in Socket.IO V3)", "We will set the MAC address at the beginning of `setup()` using TeensyID's `teensyMac` helper. Enter websockets server port. Set the MAC address. Start Serial and wait until it is ready.", "while (!Serial);", "Copyright 2017 Jonny Graham, 2018 David Conran Display the settings. Display the encoded IR sequence. Set up what we want to send. See ir_Fujitsu.cpp for all the options. See `fujitsu_ac_remote_model_t` in `ir_Fujitsu.h` for a list of models.", "base URL for SockJS (websocket) connection The complete URL will look something like this(cf. http: ws: For the default config of Spring's SockJS/STOMP support, the default base URL is \"/socketentry/\". FUNCTIONS", "Helper functions declarations Create an object of the class Bsec Entry point for the example Print the header Function that is looped forever", "#define USE_OD_MODE #define WRITE_DEMO", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Optional values to override default settings #define SPI_HOST            1 #define SPI_CLOCK_MHZ       8 Must connect INT to GPIOxx or not working", "Koneksi ke jaringan WiFi Tampilkan alamat IP pada serial monitor", "Using pin 13 will crash ESP32_C3 Open serial communications and wait for port to open: initialize serial for ESP module initialize ESP module check for the presence of the shield", "Initial Value for each Motor Intitialization of Braccio Intitialization of the Uno WiFi Wait until the board receives HTTP commands read the command", "set timezone offset from UTC stash previous hour adjust to local time zone calculate current hour only trigger on interval", "Be sure to use the correct pin numbers for your setup. Note that on ATmega328: 17=A3, 16=A2, 15=A1, 14=A0 DA7, DA6, DA5, DA4, DA3, DA2, DA1, DA0, BDIR, BC2, BC1 psg.setAddress(TheChipsAddress); By default, the I/O ports are set up as inputs.", "include the library no need to configure pins, signals are routed to the radio internally set RF switch configuration for Nucleo WL55JC1 NOTE: other boards may be different! Some boards may not have either LP or HP.", "no_description", "Call this if you notice something coming in on the serial port. The stuff coming in should be in the order YYMMDDwHHMMSS, with an 'x' at the end. Read year first now month", "no_description", "CS5490 line(MCLK_default); Initializing communication with CS5490 600 is the default baud rate velocity. Initializing communication arduino/PC to show results in Monitor Serial wait for serial port to connect. Needed for Leonardo only", "------------------------------------------------------------------------------ SignalArduino declaration ------------------------------------------------------------------------------ SignalArduino definition Used dcc codes are", "no_description", "Program to exercise the MD_MAX72XX library Uses the graphics functions to animate a pair of eyes on 2 matrix modules. Eyes are coordinated to work together. Eyes are created to fill all available modules. Define the number of devices we have in the chain and the hardware interface", "This example use SPI. LIS.closeTemp(); LIS.setFullScaleRange(LIS3DHTR_RANGE_2G); LIS.setFullScaleRange(LIS3DHTR_RANGE_4G); LIS.setFullScaleRange(LIS3DHTR_RANGE_8G);", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 is button pressed (inverted logic! button pressed = LOW) and debounced? flip myPowerState: if it was true, set it to false, vice versa", "no_description", "LIBRARIES SETTINGS URL for STOMP endpoint. For the default config of Spring's STOMP support, the default URL is \"/socketentry/websocket\". VARIABLES", "To eliminate FW warning when using not latest nina-fw version To use whenever WiFi101-FirmwareUpdater-Plugin is not sync'ed with nina-fw version Initialize the Wifi client library server address: WFM_LOGDEBUG1(\"\\nWiFi connected, RSSI:\", WiFi.RSSI());", "A single record. A container of Records. Create an instance of the Container. Variable number of arguments so that we can check the entire array of Records.", "read the slider and three of the buttons", "return always_deny(); return always_allow();", "read the command", "creates seesaw on I2C0 port uncomment this for using I2C1, such as STEMMA port on QT Py RP2040 Adafruit_seesaw ss = Adafruit_seesaw(&Wire1); #define IRQ_PIN   5 These joysticks are really jittery so lets take 4 samples of each axis", "The loop starts only when the Serial Monitor is opened. Set over current behavior of all channels to latch mode: Uncomment this line to set over current behavior of all channels to auto retry mode instead of latch mode: digital_outputs.setRetry();", "#include <arm_math.h> define the symbols on the buttons of the keypads initialize an instance of class NewKeypad If this key is pressed FIR filter is turned off which just passes the audio sraight through", "For Teensy 4.1 Use true for NativeEthernet Library, false if using other Ethernet libraries Only one of the following to be true. Only one of the following to be true. Enter a MAC address and IP address for your controller below.", " {DEVICE_NAME} Blynk.notify(String(\"{DEVICE_NAME} running for \") + uptime + \" minutes.\"); Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "some util functions time ticks as boolean FPS as boolean this is an FPS limiter return `true` `fps` times per second (max)", "SPDX-FileCopyrightText: (c) 2022-2024 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later IPerfServer implements an iPerf server for TCP traffic. Useful command: iperf -c <IP address> -i 1 -l 1460 Other supported options:", " BLYNK_WRITEapp BLYNK_WRITE(V5){ int pinData = param.asInt(); } value", "const int myInput = AUDIO_INPUT_MIC; Create Audio connections between the components Create an object to control the audio shield. Audio connections require memory to work.  For more detailed information, see the MemoryAndCpuUsage example", "OPTION 1 (recommended) is to use the HARDWARE SPI pins, which are unique to each board and not reassignable. OPTION 2 lets you interface the display using ANY TWO or THREE PINS, tradeoff being that performance is not as fast as hardware SPI above. #define TFT_MOSI 41", "default tempo and pitch of the music initialize the Robot, SD card, speaker, and display draw \"lg0.bmp\" and \"lg1.bmp\" on the screen play a sound file check the value of the buttons", "no_description", "DSC Classic series: uncomment for PC1500/PC1550 support (requires PC16-OUT configuration per README.md) #define dscClassicSeries Settings MQTT topics - match to Homebridge's config.json Configures the Keybus interface with the specified pins - dscWritePin is optional, leaving it out disables the", "Example testing sketch for various DHT humidity/temperature sensors Written by ladyada, public domain REQUIRES the following Arduino libraries: - DHT Sensor Library: https: - Adafruit Unified Sensor Lib: https:", "include the library Si4432 has the following connections: nSEL pin:  10 nIRQ pin:  2 SDN pin:   9", "Credits of [Miguel Alexandre Wisintainer](https: For some STM32, there is only definition of Serial in variant.h, and is used for Serial/USB Debugging For example, in Nucleo-144 F767ZI original variant.h #define SERIAL_PORT_MONITOR     Serial #define SERIAL_PORT_HARDWARE    Serial", "DCC codes mouvement une led depuis la droite lent mouvement une led depuis la gauche rapide barre progressive lente depuis la droite barre progressive rapide depuis la gauche", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. Define Firebase Data object For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager", "Define which interface to use by setting the unused interface to NULL!", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your SIM credential Leave empty, if missing pin", "initialize serial and wait for port to open:", "------------------------------------------------------------------------------ Wait for USB Serial ------------------------------------------------------------------------------", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Select the IP address according to your local network Google DNS Server IP DNS server Web server", "include the library SX1280 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "Define the I2C address and labels for each current sensor Create an array of current sensors and their labels Create an instance of the Serial port for the GPS module Pin assignments for the radio Singleton instance of the radio driver", "Globals, used for compatibility with Arduino-style sketches. In order to use optimized tensorflow lite kernels, a signed int8_t quantized model is preferred over the legacy unsigned model format. This means that throughout this project, input images must be converted from unisgned to signed format. The easiest and quickest way to convert from unsigned to", "Variable to store the battery voltage Variable to change the motor speed and direction Serial port initialization Establishing the communication with the motor shield Reboot the motor controller; brings every value back to default", "Test code for Adafruit GPS modules using MTK3329/MTK3339 driver This code turns on the LOCUS built-in datalogger. The datalogger turns off when power is lost, so you MUST turn it on every time you want to use it! Tested and works great with the Adafruit Ultimate GPS module", "no_description", "Advanced Microcontroller-based Audio Workshop http: https: Part 2-1: First Design Tool Use copy the Design Tool code here", "Define the keymaps.  The blank spot (lower left) is the space character. Create two new keypads, one is a number pad and the other is a letter pad. Take care of some special events. in here when in alpha mode. in here when using number keypad", "For Teensy 4.1 Use true for NativeEthernet Library, false if using other Ethernet libraries Only one of the following to be true. Only one of the following to be true. Enter a MAC address and IP address for your controller below.", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. auth.token.uid.clear(); config.signer.tokens.scope = \"Google Scope 1 Url, Google Scope 2 Url,..\"; Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager", "put your setup code here, to run once:", "Create a text file on the SD with this path using short 8.3 names. Modify CS_PIN for your chip select pin. Set USE_SD_H to one for SD.h or zero for SdFat. Setting ENABLE_DEDICATED_SPI to zero saves over 200 more bytes. Insure FAT16/FAT32 only.", "Talkie library Copyright 2011 Peter Knight This code is released under GPLv2 license. The following phrases are derived from those built into the Texas Instruments TI99/4A Speech System add-on from 1979.", "an IR detector/demodulator is connected to GPIO pin 2 Dumps out the decode_results structure. Call this after IRrecv::decode()", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Enter a MAC address and IP address for your controller below.", "Create a RinBuf object designed to hold a 20 of mystructs Check if null pointer Create element I want to add Zero both of them out Copy bar into the ring_buf", "OPTION 1 (recommended) is to use the HARDWARE SPI pins, which are unique to each board and not reassignable. OPTION 2 lets you interface the display using ANY TWO or THREE PINS, tradeoff being that performance is not as fast as hardware SPI above. #define TFT_MOSI 41", "Send data to Firebase to be displayed at ukmpapps.web.app", "no_description", "SD chip select pin.  Be sure to disable any other SPI devices such as Enet. Interval between data records in milliseconds. The interval must be greater than the maximum SD write latency plus the time to acquire and write data to the SD to avoid overrun errors. Run the bench example to check the quality of your SD card.", "In ESP32 Core SDK v3.x.x, to use filesystem in this library, the File object should be defined globally and the library's internal defined FS object should be set with this global FS object in fileCallback function. The API key can be obtained from Firebase console > Project Overview > Project settings.", "Settings for our setup Headers info Init the cam QVGA, 30FPS, Grayscale Mount File system block Get the raw image data (8bpp grayscale)", "customizing a prompt look! by extending the prompt class altPrompt(constMEM promptShadow& p):prompt(p) {} define a pad style menu (single line menu) here with a set of fields to enter a date in YYYY/MM/DD format", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "Check if header is present and correct login page, also called for disconnect root page can be accessed only if authentication is ok no need authentication start the ethernet connection and the server:", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console You can also specify server: Blynk.begin(auth, \"blynk-cloud.com\", 80);", "Initialize the LIS3MDL and LSM6DSOX objects Start the serial communication Wait for the serial monitor to open Check if the LSM6DSOX and LIS3MDL are found Print a warning message", "Send a message to the serial after 10 seconds from booting", "I/O Membership functions tags I/O Fuzzy Objects I/O Membership Objects", "include the library uncomment the following only on one of the nodes to initiate the pings #define INITIATING_NODE SX1278 has the following connections:", "Default pin 10 to SS/CS For transport=websocket instead of transport=polling Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS", "see the tutorial https: Pin 13 has an LED connected on most Arduino boards. if using Arduino IDE 1.5 or above you can use pre-defined LED_BUILTIN  instead of 'led' have const here so it is easy to find and change", "send message to client we get RGB data decode rgb data Serial.begin(921600); Serial.setDebugOutput(true);", "Definities Aantal rijen displays (Voor de A-Vision ESP8266 learning board is dat 1) Aantal kolommen displays (Voor de A-Vision ESP8266 learning board is dat 1) Includes Maak display object", "send message to client Fragmentation / continuation opcode handling case WStype_FRAGMENT_BIN_START: Serial.begin(921600); Serial.setDebugOutput(true);", "using Matthias Hertel driver https: Encoder this encoder has a button here a keyboard with only one key as the encoder button input from the encoder + encoder button + serial", "WiFi credentials replace with your bot token and chat id connect to WiFi connect to Telegram API await for text", "First DEFINE the components of the library we're going to use for this sketch Define #USE_ALB_MPU6050 to include the MPU6050 (Gyro) functions of the ArduinoLearningBoard Library (Must do this before including ArduinoLearningBoard.h) NOW include the main ArduinoLearningBoard library Based on the defines above, the appropriate modules will be added to the project", "define the symbols on the buttons of the keypads initialize an instance of class NewKeypad Number of samples in each delay line Allocate the delay lines for left and right channels Default is to just pass the audio through. pressing this button", "Default pin 10 to SS/CS Deprecated echo.websocket.org to be replaced send message to server when Connected send message to server KH, To check", "no_description", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Debug console", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG we use a struct to store all states and values for our fan fanSpeed (1..3) Fan rangeValue is from 1..3", "Initialize RF Object Flag to indicate that a packet was received Disable interrupt when it's not needed Don't set flag if interrupt isn't enabled Set flag signifying message was recieved", "no_description", "Start the serial port Start the I2C interface Request the time correction on the Serial If something is coming in on the serial line, it's a time correction so set the clock accordingly.", "Menjadikan PIN 2, 3, dan 4 Arduino menjadi Output", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. isButtonPressed = !digitalRead(BUTTON_PIN);", "include main library header file include static array definition of pre-trained model The Tensor Arena memory area is used by TensorFlow Lite to store input, output and intermediate tensors It must be defined as a global array of byte (or u_int8 which is the same type on Arduino) The Tensor Arena size must be defined by trials and errors. We use here a quite large value.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our fan fanSpeed (1..3)", "This example shows how to read, store and update database using get, set, push and update functions. This example is for ESP32 with LAN8720 Ethernet board. Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. Pin# of the enable signal for the external crystal oscillator (-1 to disable)", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "the sensor communicates using SPI, so include the library: assign an IP address for the controller: Initialize the Ethernet server library with the IP address and port you want to use (port 80 is default for HTTP):", "Construct object, StepMotor(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency Stop Button) The start button is attached to the interrupt service routine that enables the motor and runs the homing procedure put your main code here, to run repeatedly:", "get and print temperatures get and print atmospheric pressure data get and print altitude data", "first, include the library :) here we declare our stepper using default pins: arduino pin <--> pins on ULN2003 board: 8 <--> IN1 9 <--> IN2", "Advanced Microcontroller-based Audio Workshop http: https: This reference file has all the design tool output.  If you are learning, please follow the PDF manual and draw these in the design", "static lv_style_t style_radio; static lv_style_t style_radio_chk; lv_style_init(&style_radio); lv_style_set_radius(&style_radio, LV_RADIUS_CIRCLE); lv_style_init(&style_radio_chk);", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define deviceIds in an array go through the devices", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection get a new Blinds device from SinricPro", "Wait for MKR to power on", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip); assemble the path for the GET message:", "Default pins for Feather 32u4 FONA Optionally configure a GPRS APN, username, and password. You might need to do this to access your network's GPRS/data network.  Contact your provider for the exact APN, username, and password values.  Username and password are optional and", "Advanced Microcontroller-based Audio Workshop http: https: Part 1-2: Test Hardware Simple beeping is pre-loaded on the Teensy, so", "include the library LR1110 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "Test code for Adafruit GPS That Support Using SPI This code shows how to test a passthru between USB and SPI Pick one up today at the Adafruit electronics shop and help support open source hardware & software! -ada Connect to the GPS on the hardware SPI port", "Benchmark comparing SdFile and StdioStream. Define PRINT_FIELD nonzero to use printField. Number of lines to list on Serial. ------------------------------------------------------------------------------ Initialize at the highest speed supported by the board that is", "The struct of the configuration. initialize one struct running for the first time? write configuration struct to flash at adress 4 write 0 to address 0 to indicate that it is not the first time running anymore", "Sketch uses Arduino IDE-selected ESP32 and ESP8266 to select compile choices To add something similar to this for ESP32-C3 https: These two .h files are in my libraries folder and contain my personal SSID, WiFi password and Blynk authcodes Each Blynk authcode has a unique name in the MY_BLYNK_CREDENTIALS.h file.", "get peak sound pressure level over the sample window limit to the floor value Serial.println(peakToPeak); Fill the strip with rainbow gradient Turn off pixels that are below volume threshold.", "When \"true\" it automatically sends one repeat. Use \"false\" for additional repeats. The 2 lines below will actually send a total of 3 frames... A first and 2 repeats.", "Library Dependency : SSD1306Ascii by Bill Greiman Link : https: Modified sketch by Tamojit Saha(https: #include <Wire.h> enable this include if using esp8266", "Start TFT and fill black Turn on backlight large block of text tft print function! a single pixel", "Example use of lfnOpenNext and open by index. You can use test files located in SdFat/examples/LongFileName/testFiles. SD card chip select pin. Number of files found.", "no_description", "Arduino Moving Average Library https: Copyright (C) 2020 by Jack Christensen and licensed under GNU GPL v3.0, https: Example sketch to demonstrate retrieving the readings", "initialise le poussoir comme entre l'identifiant du bouton  100 indique que c'est l'accessoire '100' qui sera affect si le bouton est press. Renvoie l'vnement reu de Commanders, vers les accessoires...", "isButtonPressed = !digitalRead(BUTTON_PIN); *** WARNING: You are limited to send ONLY ONE E-MAIL PER 5 SECONDS! *** Let's send an e-mail when you press the button connected to digital pin BUTTON_PIN (2) on your Arduino This can be seen in the Serial Monitor", "Check if header is present and correct login page, also called for disconnect root page can be accessed only if authentication is ok no need authentication initialize serial for ESP module", "setup function for WiFi connection get a new Blinds device from SinricPro setup SinricPro main setup function", "begin initialization start scanning for peripherals check if a peripheral has been discovered discovered a peripheral, print out address, local name, and advertised service see if peripheral is a LED", "Test code for Adafruit GPS modules using MTK3329/MTK3339 driver This code turns on the LOCUS built-in datalogger. The datalogger turns off when power is lost, so you MUST turn it on every time you want to use it! Tested and works great with the Adafruit Ultimate GPS module", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_DEBUG", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP", "put your setup code here, to run once: port.flush(&port); TODO: It is possible to write to non-page boundaries, by reading out flash from partial pages and combining with the input data if ((start % stm->dev->fl_ps[i]) != 0 || (end % stm->dev->fl_ps[i]) != 0) {", "This sketch uses the IrReceiveSampler to receive a signal, and tries to decode it as a NEC signal", "set the framerate of the game at 60 fps let's make sure the sound was not muted in a previous sketch Initializes ATMSynth and samplerate Begin playback of song.", "M3--->motor_Group_3--->[M3A(+),M3B(-)] M4--->motor_Group_4--->[M4A(+),M4B(-)] SA--->Stepper_Group_A--->[M1A(A+),M1B(A-),M2A(B+),M2B(B-)] CW: rotate in positive direction CCW: rotate in reverse", "In order to use software serial, you will need to compile this sketch with Arduino IDE v1.6.6 or higher. Hardware serial should work back to Arduino 1.0. the minimum interval for sampling analog input default delay time between i2c read request and Wire.requestFrom() Forward declare a few functions to avoid compiler errors with older versions", "Advanced Microcontroller-based Audio Workshop http: https: Part 1-4: Blink LED while Playing Music Do something while playing a music file.  Admittedly", "libraries Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number APN data initialize the library instance", "You don't need the following includes if you're not using MQTT You can find the Adafruit MQTT library here: https: Required for Serial on Zero based boards Define *one* of the following lines: #define SIMCOM_2G", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "Deprecated echo.websocket.org to be replaced send message to server when Connected send message to server send data to server Serial.begin(921600);", "Provide the RTDB payload printing info and other helper functions. config.cert.file = \"/cert.cer\"; config.cert.file_storage = StorageType::FLASH; Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set.", "Adapted from: https: test-once test named \"once\" test-until-skip-pass-or-fail test named \"continuous\" ----------------------------------------------------------------------------", "this sketch will allow you to bypass the Atmega chip and connect the GPS sensor directly to the USB/Serial chip converter. Connect VIN to +5V Connect GND to Ground", "Define for your board, not all have built-in LED:", "no_description", "no_description", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "Initialize serial Print a welcome message Check for the presence of the shield Print firmware version on the shield model B", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. To get the authentication time to live in seconds before expired. app.ttl(); Blocking authentication handler with timeout", "Construct object, StepMotor(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency Stop Button) Construct object, Embryo(axisX, axisY, Start Button, Emergency Stop Button) The start button is attached to the interrupt service routine that enables the motor and runs the homing procedure", "initialize serial for ESP module initialize ESP module don't continue Check for New Ip Every 10 mins.", "include the library RF69 has the following connections: CS pin:    10 DIO0 pin:  2 RESET pin: 3", "Available only for MKRGSM1400 and MKRNB1500 Attach the PMIC IRQ pin Set the input current limit to 2 A and the overload input voltage to 3.88 V set the minimum voltage used to feeding the module embed on Board Set the desired charge voltage to 4.11 V", "initialize the robot initialize the serial port store the sensor information into the array iterate the array and print the data to the Serial port", "URL for STOMP endpoint. For the default config of Spring's STOMP support, the default URL is \"/socketentry/websocket\". FUNCTIONS ##################### handle STOMP protocol", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (20) seconds: we don't need to send updates frequently if there is no status change.", "no_description", "These are the four touchscreen analog pins This is calibration data for the raw touch data to the screen coordinates The display uses hardware SPI, plus #9 & #10 For better pressure precision, we need to know the resistance between X+ and X- Use any multimeter to read it", "check if a proximity reading is available read the proximity - 0   => close - 255 => far - -1  => error", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "Start the serial port Start the I2C interface", "Select the IP address according to your local network Google DNS Server IP To be called before ETH.begin() bool begin(uint8_t phy_addr=ETH_PHY_ADDR, int power=ETH_PHY_POWER, int mdc=ETH_PHY_MDC, int mdio=ETH_PHY_MDIO, eth_phy_type_t type=ETH_PHY_TYPE, eth_clock_mode_t clk_mode=ETH_CLK_MODE);", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "Requires a switch connected between the digital input pin \"button\" and ground. Sends a Yamaha volume down (NEC1 D=122, F=27) as long as the button is held down. Due to the nature of NEC1, first the payload is sent once, then the simple repeat signal (many times). Button de-bouncing is not really necessary.", "A UDP instance to let us send and receive packets over UDP send an NTP request to the time server at the given address set all bytes in the buffer to 0 Initialize values needed to form NTP request (see URL above for details on the packets)", "Sets the initial angle for the motors Check if the control key pressed is the Joystick Up Check if the control key pressed is the Joystick Down Check if the Joystick Left is pressed Check if the Joystick Right is pressed", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- Initialize the Bonjour/MDNS library. You can now reach or ping this", "Sensor Includes Initiate LunaSat Radio (SX1272 Transciever) Sensor Objects (Debugging defaults to false) Sensor Data Variables Individual string buffers for memory optimization", "Open serial communications and wait a few seconds", "if you define WIFI_SSID and WIFI_PASS before importing the library, you can call connect() instead of connect(ssid, pass) If you set HOSTNAME and your router supports mDNS, you can access the camera at http: camera settings", "We want to send a Boolean value to signal a binary event like open/close or on/off Initialize the Sigfox module If we want to to debug the application, print the device ID to easily find it in the backend Compose a message as usual; the single bit transmission will be performed transparently", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Attach virtual serial terminal to Virtual Pin V1 You can send commands from Terminal to your hardware. Just use the same Virtual Pin as your Terminal Widget", "check for new udp-packet: finish reading this packet: send new packet back to ip/port of client. This also configures the current connection to ignore packets from other clients!", "print the SSID of the network you're attached to: you're connected now, so print out the data print the received signal strength: initialize serial for ESP module initialize ESP module", "Do something Do something Do something Do something Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080);", "Construct object, StepMotor(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency Stop Button) The start button is attached to the interrupt service routine that enables the motor and runs the homing procedure put your main code here, to run repeatedly:", "#define BLYNK_USE_DIRECT_CONNECT You could use a spare Hardware Serial on boards that have it (like Mega) You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug console", "Select a test server address GET location 600s = 10 minutes to not flooding, 60s in testing Uncomment for certain HTTP site to optimize #define NOT_SEND_HEADER_AFTER_CONNECTED        true", "vReal[i] = uint8_t((amplitude * (sin(i * ratio) + 1.0)) / 2.0);/* Build data displaced on the Y axis to include only positive values*/ delay(2000); /* Repeat after delay */", "LiquidCrystal_I2C lcd(0x27); Encoder this encoder has a button here a keyboard with only one key as the encoder button input from the encoder + encoder button + serial", "const int FlashChipSelect = 21; uncomment these if using Teensy audio shield SPI.setSCK(14); SPI.setMOSI(7); uncomment these if you have other SPI chips connected", "no_description", "A UDP instance to let us send and receive packets over UDP start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip);", "name the modes text to display on screen initialize the Robot, SD card, display, and speaker draw \"lg0.bmp\" and \"lg1.bmp\" on the screen draw init3.bmp from the SD card on the screen", "Test of time-stamp callback. Set the callback with this statement. FsDateTime::setCallback(dateTime); https: Set RTC_TYPE for file timestamps.", "create a new channel ********************************************** send a message to the newly created channel ********************************************** create a new Form", "Please note, This is Mock up data only Please replace your data here.", "Open serial communications and wait for port to open: start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip);", "PDM buffer Initialize the TinyML Shield Initialize PDM microphone in mono mode with 16 kHz sample rate see if the button is pressed and turn off or on recording accordingly see if a command was sent over the serial monitor and record it if so", "KH Print hearbeat every HEARTBEAT_INTERVAL (20) seconds. Debug console initialize serial for ESP module Optional to change default AP IP(192.168.4.1)", "include the robot library initialize the modules read the compass orientation how many degrees are we off modify degress", "Define *one* of the following lines: #define SIMCOM_2G #define SIMCOM_3G #define SIMCOM_7070 #define SIMCOM_7500", "Configure the PulseSensor manager. Now that everything is ready, start reading the PulseSensor signal. Flash the led to show things didn't work. write the latest sample to Serial.", "#include <Arduino_EdgeControl.h> EdgeControl.begin(); Init system clock from compilation time or RTC Power.on(PWR_3V3);", "Can be included as many times as necessary, without `Multiple Definitions` Linker Error Add one to each cell in the FlashStorage Add one to each cell in the FlashStorage Add one to each cell in the FlashStorage Add one to each cell in the FlashStorage", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Select your modem: #define TINY_GSM_MODEM_SIM900", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Process start time Do nothing Process stop time", "Button statuses ISR: count the button taps ISR: keep elapsed timings ISR: Final button status Wait for Serial Monitor for timeout ms", "For ESP8266, change for other boards if necessary For ESP8266 Pin                D0(GPIO16)    D1(GPIO5)    D2(GPIO4)    D3(GPIO0)    D4(GPIO2)    D8 EthernetGeneric    X                 X            X            X            X        0 Ethernet_ESP8266   0                 0            0            0            0        0", "no_description", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG change this to your button PIN on NodeMCU D3 / GPIO-0 is flash button PIN so you can use the builtin flash button checkButtonpress", "Handle USB communication While there's MIDI USB input available... Output the byte to the Serial interface. Echo the byte back to the MIDI USB output.", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080); You can perform HTTPS requests even if your hardware alone can't handle SSL RAM BlynkBLYNK_MAX_READBYTES 4096", "start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP Ethernet.begin(mac[index], ip); Check for New Ip Every 10 mins.", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define deviceIds in an array go through the devices", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "Connect to WiFi Tampilkan alamat IP pada serial monitor Initialize sensor We sensed a beat! Cek apakah Heart Rate (BPM) melebihi ambang batas tertentu", "0(0,0,0)15(255,255,255) 114 015 shadow1.pushSprite(&lcd,  0, 0); needle1.pushSprite(&lcd, 10, 0);", "SD chip select pin file system object create a serial stream ------------------------------------------------------------------------------ use flash for text to save RAM", "      : GMotor motor(DRIVER2WIRE, dig_pin, PWM_pin, (LOW / HIGH) ) GMotor motor(DRIVER3WIRE, dig_pin_A, dig_pin_B, PWM_pin, (LOW/HIGH) ) GMotor motor(RELAY2WIRE, dig_pin_A, dig_pin_B, (LOW/HIGH) )     () ", "define max number of tasks to save precious Arduino RAM called once after 5000 milliseconds, no optional parameter used called every 750 milliseconds forever, with optional parameter pin = 12 called every 1000 milliseconds 10 times, with optional parameter pin = 11", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "Teensy simple internal temperature wait 1 second for temperature to stabilize a bit Low Alarm is still set High Alarm is still set allow time for conversions", "const int myInput = AUDIO_INPUT_MIC; for best effect make your terminal/monitor a minimum of 62 chars wide and as high as you can.", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Define pins (varies per shield/board) Create ble serial instance, see pinouts above", "Adafruit CC3000 Firmware V1.11 Upgrade Sketch Based on firmware patcher for MSP430 chips published by Texas Instruments. This sketch will upgrade CC3000 modules up to firmware version 1.11.1 You can find more details about the changes in the 1.11 firmware from TI at: http:", "These defines must be put before #include <DoubleResetDetector_Generic.h> to select where to store DoubleResetDetector's variable. For ESP32, You must select one to be true (EEPROM or SPIFFS) For ESP8266, You must select one to be true (RTC, EEPROM, LITTLEFS or SPIFFS) Otherwise, library will use default EEPROM storage", "#include <examples/lv_examples.h> #include <demos/lv_demos.h>", "Iterate through all the buttons: Store the new button state, so you can sense a difference later:", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "FILE: uvi_test.ino AUTHOR: Rob Tillaart PURPOSE: demo UV sensor - generate conversion table URL: https: -- END OF FILE --", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define array of supported color temperatures a map used to convert a given color temperature into color temperature index (used for colorTemperatureArray)", "include the library this file contains binary patch for the SX1262 SX1262 has the following connections: NSS pin:   10 DIO1 pin:  2", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "USBHost is defined in usbh_helper.h HID report descriptor using TinyUSB's template Single Report (no ID) descriptor USB HID object. For ESP32 these values cannot be changed after this declaration desc report, desc len, protocol, interval, use out endpoint", "Input a value 0 to 255 to get a color value. The colours are a transition r - g - b - back to r. : strip.setPixelColor(i, Wheel(((i * 256 / strip.numPixels()) + shift) & 255)); Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 31, 249), 8080);", "Example shows how to connect to Firebase RTDB and get stream connection Required WiFiNINA Library for Arduino from https: Define Firebase data object Provide the autntication data clear internal memory used", "GLEE I2C Sensor Customized I2C scanner for use in Verifying Lunasat Functionality and Troubleshooting Standard V4 Lunasat I2C Sensors AK09940 - Magnetometer TMP117 - Temperature Sensor", "To connect with SSL/TLS: 1) Change WiFiClient to WiFiSSLClient. 2) Change port value from 1883 to 8883. 3) Change broker value to a server with a known SSL/TLS root certificate flashed in the WiFi module.", "send message to client Fragmentation / continuation opcode handling case WStype_FRAGMENT_BIN_START: USE_SERIAL.begin(921600); Serial.setDebugOutput(true);", "Basic demo for accelerometer/gyro readings from Adafruit LSM6DS3TR-C For SPI mode, we need a CS pin For software-SPI mode we need SCK/MOSI/MISO pins if (!lsm6ds3trc.begin_SPI(LSM_CS)) { if (!lsm6ds3trc.begin_SPI(LSM_CS, LSM_SCK, LSM_MISO, LSM_MOSI)) {", "by default, LittleFS is used; to use SPIFFS, uncomment the following line #define CS_USE_SPIFFS true set parameter defaults change parameters set parameters", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP", "WiFi.setAutoConnect(true); wait for connection", "Include Capacitive Sensor Library Dependency Initialize Cap sensor with Id of 2 and debugging enabled (2,1)", "The MIT License (MIT) Copyright (c) 2019 Ha Thach for Adafruit Industries nothing to do", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards SETTINGS", "getChargeFault() returns the charge fault state, the fault could be: - Thermal shutdown: occurs if internal junction temperature exceeds the preset limit; - input over voltage: occurs if VBUS voltage exceeds 18 V; - charge safety timer expiration: occurs if the charge timer expires.", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Select the IP address according to your local network Google DNS Server IP setup function for ETH connection", "include the library uncomment the following only on one of the nodes to initiate the pings #define INITIATING_NODE LR1110 has the following connections:", "Copyright (C) 2010 Georg Kaindl http: This file is part of Arduino EthernetBonjour. EthernetBonjour is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License", " {DEVICE_NAME} Blynk.notify(String(\"{DEVICE_NAME} running for \") + uptime + \" minutes.\"); Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "Connect to wifi Wait some time to connect to wifi log return echo close the connection", "SKETCH BEGIN the whole message is in a single frame and we got all of it's data message is comprised of multiple frames or the frame is split into multiple packets Send OTA events to the browser", "FEATHER RP2040 PROP-MAKER WAV PLAYER. Loops through all WAV files in specified directory of the CIRCUITPY flash filesystem. Files are not alphabetized and will usu. play in order they were installed. Requires Adafruit_CPFS and Adafruit_WavePlayer libraries. (This is NOT for the Arcada library on M4 boards.)", "config.wifi_ssid          = \"\"; config.wifi_password      = \"\"; t6Client.getStatus(); t6Client.setHtml(); t6Client.activateOTA();", "Arduino Colors put your setup code here, to run once: put your main code here, to run repeatedly:", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct for the std::map below this is the main configuration", "libraries Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number initialize the library instance URL, path and port (for example: example.org)", "Color definitions Buffers surrounding the plot area Which pin to plot millisecond delay between samples (min 50 for CLUE) Buffer for our plot data", "libraries initialize the library instance initialize serial communications and wait for port to open: Beginning the band manager restarts the modem Get current band", "!!!!REPLACE WITH YOUR OWN MODEL!!!! face recognition only works at 240x240 face recognition only works with accurate detection face recognition confidence init camera", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection setup SinricPro", "Advanced Microcontroller-based Audio Workshop http: https: Part 2-5: Simple Delay copy the Design Tool code here", "start reading from the first byte (address 0) of the EEPROM Initilaize using AT24CXX(i2c_address, size of eeprom in KB). initialize serial and wait for port to open: read a byte from the current address of the EEPROM", "DCC codes Commanders Accessories Ports Setup", "Update these with values suitable for your network. Setup console", "no_description", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "This sketch demonstrates the usage of the non-modulating sender. It requires an sender like TX-433 connected to pin NON_MOD_PIN Turn on and off an Arctech device with house code M = 13, device 8. Arctech D=13, S=8, F=0 (Generated by IrScrutinizer) Arctech D=13, S=8, F=1 (Generated by IrScrutinizer)", "no_description", "include the library nRF24 has the following connections: CS pin:    10 IRQ pin:   2 CE pin:    3", "Configure the PulseSensor manager. Now that everything is ready, start reading the PulseSensor signal. Flash the led to show things didn't work. write the latest sample to Serial.", "Example shows how to connect to Firebase RTDB and construct queries to filter data Required WiFiNINA Library for Arduino from https: Define Firebase Data object Provide the autntication data Clear query parameters", "Recover if the board is in AP mode - unused Get the list of reachable networks check if we already found networks[i] and eventually drop it If networks number is 0, start manual configuration else print them prepending a number", "Default pin 10 to SS/CS Deprecated echo.websocket.org to be replaced To run a local WebSocket Server send message to server when Connected send message to server", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 define array of supported color temperatures a map used to convert a given color temperature into color temperature index (used for colorTemperatureArray)", "ArduinoJson - arduinojson.org Copyright Benoit Blanchon 2014-2018 MIT License This example shows how to send a JSON document to a UDP socket. At regular interval, it sends a UDP packet that contains the status of", "#include <WiFi.h> Start WiFi communication NTP begin with default parameters: NTP server: pool.ntp.org TimeZone: UTC", "#define EEPROM_EMULATION_SIZE     (4 * 1024) Use 0-2. Larger for more debugging messages To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error start reading from the first byte (address 0) of the EEPROM", "Copyright (C) 2010 Georg Kaindl http: This file is part of Arduino EthernetBonjour. EthernetBonjour is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License", "SPDX-FileCopyrightText: (c) 2022-2024 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later PixelPusherServer implements a simple PixelPusher receiver. The output is sent to an OctoWS2811. The parameters are configurable via constants.", "Basic demo for accelerometer & gyro readings from Adafruit LSM6DSOX sensor For SPI mode, we need a CS pin For software-SPI mode we need SCK/MOSI/MISO pins if (!sox.begin_SPI(LSM_CS)) {", "First parameter is the event type (0x09 = note on, 0x08 = note off). Second parameter is note-on/note-off, combined with the channel. Channel can be anything between 0-15. Typically reported to the user as 1-16. Third parameter is the note number (48 = middle C). Fourth parameter is the velocity (64 = normal, 127 = fastest).", "Only to deal with ESP8266 core v3.0.0 warning in Ticker library Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change. report status to Blynk Debug console From v1.0.5", "no_description", "no_description", "WiFiHttpClient  httpClient(client, serverAddress, port); print the SSID of the network you're attached to: you're connected now, so print out the data print the received signal strength: initialize serial for ESP module", "FILE: DHT20_lcd.ino AUTHOR: Rob Tillaart PURPOSE: Demo for DHT20 I2C humidity & temperature sensor URL: https: Always check datasheet - front view", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 channelNames used to convert channelNumber into channelName please put in your TV channel names", "WiThrottleProtocol library: Turnout/Point control example Shows how to retrieve the Turnouts/Points list and control them Tested with ESP32-WROOM board NOTE: You must have at least two turnouts defined in your EX-CommandStation Peter Akers (Flash62au), Peter Cole (PeteGSX) and Chris Harlow (UKBloke), 2023", "Test code for Adafruit GPS modules using MTK3329/MTK3339 driver This code erases the LOCUS built-in datalogger storage Tested and works great with the Adafruit Ultimate GPS module using MTK33x9 chipset ------> http:", "Timezone definition to get properly time from NTP server Create csv logs folder if not exists Enable ACE FS file web editor and add FS info callback fucntion Start server Set NTP servers", "Libraries to include Constructors Set up the lcd Welcome messages Draw the graph:", "Brown -> GND Red -> 5V Orange -> D2 First DEFINE the components of the library we're going to use for this sketch Define #USE_ALB_Servo to include the Servo functions of the ArduinoLearningBoard Library", "no_description", "include the library RF69 has the following connections: CS pin:    10 DIO0 pin:  2 RESET pin: 3", "copy from USB-CDC to UART copy from UART to USB-CDC", "'wavface' example sketch for Adafruit I2C 8x8 LED backpacks and Wave Shield: www.adafruit.com/products/870   www.adafruit.com/products/1049 www.adafruit.com/products/871   www.adafruit.com/products/1050 www.adafruit.com/products/872   www.adafruit.com/products/1051", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. This is a library internal SSL client. You can use any SSL Client that works with Ethernet library. The ESP_SSLClient uses PSRAM by default (if it is available), for PSRAM usage, see https:", "SPDX-FileCopyrightText: (c) 2022-2024 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later RawFrameMonitor prints all unknown raw Ethernet frames. Known frame types won't be printed if the associated features are enabled and there's a handler for them. These may include:", "does not have this binding", "Default pin 10 to SS/CS Select the IP address according to your local network base URL for SockJS (websocket) connection The complete URL will look something like this(cf. http: ws:", "Variables Use the \"Gettting Started Project\" to fine-tune Threshold Value beyond default setting. Otherwise leave the default \"550\" value. Configure the PulseSensor object, by assigning our variables to it. Double-check the \"pulseSensor\" object was created and \"began\" seeing a signal.", "Industruino uses SIM800H Increase RX buffer if needed Uncomment this if you want to see all AT commands #define DUMP_AT_COMMANDS Uncomment this if you want to use SSL", "Initialization functions and set up the initial position for Braccio All the servo motors will be positioned in the \"safety\" position: Base (M1):90 degrees Shoulder (M2): 45 degrees Elbow (M3): 180 degrees", "First parameter is the event type (0x09 = note on, 0x08 = note off). Second parameter is note-on/note-off, combined with the channel. Channel can be anything between 0-15. Typically reported to the user as 1-16. Third parameter is the note number (48 = middle C). Fourth parameter is the velocity (64 = normal, 127 = fastest).", "8KB is the smallest size that windows allow to mount Eject button to demonstrate medium is not ready e.g SDCard is not present whenever this button is pressed and hold, it will report to host as not ready the setup function runs once when you press reset or power the board Manual begin() is required on core without built-in support e.g. mbed rp2040", "Default pin 10 to SS/CS Deprecated echo.websocket.org to be replaced To run a local WebSocket Server send message to server when Connected send message to server", "Advanced Microcontroller-based Audio Workshop http: https: Part 2-2: Mixers & Playing Multiple Sounds copy the Design Tool code here", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS Change pins according to your boards", "A simple server implementation showing how to: * serve static messages * read GET and POST parameters * handle missing pages / 404s Send a GET request to <IP>/get?message=<message>", "replace hostname with name of machine running tcpserver.pl if (client.connect(\"server.local\",5000)) disconnect client", "Anything else, defaults! Use this initializer (uncomment) if you're using a 0.96\" 180x60 TFT large block of text tft print function! a single pixel", "removed as extra libs are not included into travis #define USE_CLICK_ENCODER #include <SPI.h> #include <TFT_HX8357.h> rotary encoder pins", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries You have to add initialization for your Custom Ethernet here This is just an example to setCSPin to USE_THIS_SS_PIN, and can be not correct and enough Ethernet.init(USE_THIS_SS_PIN);", "Open serial communications and wait a few seconds see the SafeString_ConstructorAndDebugging example for debugging settings field.debug(F(\"stringOne.stoken(field, nextIdx, validChars, false, false); => \")); clear errors by calling hasError() and SafeString::errorDetected() to clear the global error flag nothing here", "first, include the library :) next, declare the stepper and connect pins 8,9,10,11 to IN1,IN2,IN3,IN4 on ULN2003 board let's also create a boolean variable to save the direction of our rotation and a timer variable to keep track of move times", "A simple server implementation with regex routes: * serve static messages * read GET and POST parameters * handle missing pages / 404s Add buildflag ASYNCWEBSERVER_REGEX to enable the regex support", "#warning Using LAN8742A Ethernet & STM32Ethernet lib Enter a MAC address and IP address for your controller below. SSL not working here yet. Deprecated echo.websocket.org to be replaced To run a local WebSocket Server", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 channelNames used to convert channelNumber into channelName please put in your TV channel names", "Globals, used for compatibility with Arduino-style sketches. The name of this function is important for Arduino compatibility. Set up logging. Google style is to avoid globals or statics because of lifetime uncertainty, but since this has a trivial destructor it's okay. NOLINTNEXTLINE(runtime-global-variables)", "include the library CC1101 has the following connections: CS pin:    10 GDO0 pin:  2 RST pin:   unused", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "Set gain Set resolution Set oversampling Set digital filtering Calibration", "Braccio ++ joints Waving with Wrist pitch", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "TODO: Implement actual sensor readings Try to connect to a wifi network Give the ESP some time to connect Check for connection `put_min` will only update \"coolest_temperture\" if `temperture` is", "include the library SX1280 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "#include <MKRMotorCarrier.h> #include <MKRMotorCarrier_REV2.h> Serial port initialization while (!Serial); Establishing the communication with the Motor Carrier", "APIs to set date's fields: years, months, days, hours, minutes and seconds The RTC time can be set as epoch, using one of the following two options: - Calendar time: RealTimeClock.setEpoch(years,  months,  days, hours, minutes, seconds); - UTC time: RealTimeClock.setEpoch(date_in_seconds); Set the RTC only when LCD's PowerOn button is pressed.", "by Divino Fire <github.com/divinofire> date: 18/09/2022 Debug a table on SD card by passing commands via serial monitor make sure you have connected the SD card appropriately (lookup the SPI pin connection for your microcontroller) debugTable.begin();", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "#include <MKRWAN.h> LoRaModem modem; No need to call modem.dumb() with arduino-LoRa >= 0.5.0 modem.dumb(); Configure LoRa module to transmit and receive at 915 MHz (915*10^6)", "Adafruit_ImageReader test for Adafruit ST7735 TFT Shield for Arduino. Demonstrates loading images from SD card or flash memory to the screen, to RAM, and how to query image file dimensions. Requires three BMP files in root directory of SD card: parrot.bmp, miniwoof.bmp and wales.bmp.", "Serial1 shall be used to print messages because the programming port is busy with the guest device Enable boost mode, this mode allows using the board as host to connect a guest device such as a keyboard if the boost mode was correctly enabled, 5 V should appear on 5V pin", "These are the interrupt and control pins These can be any two pins Use hardware SPI for the remaining pins On an UNO, SCK = 13, MISO = 12, and MOSI = 11 Security can be WLAN_SEC_UNSEC, WLAN_SEC_WEP, WLAN_SEC_WPA or WLAN_SEC_WPA2", "Uncomment for certain HTTP site to optimize #define NOT_SEND_HEADER_AFTER_CONNECTED        true Level from 0-4 Select a test server address GET location", "Create an instance of CapacitiveButton charging pin 3 and reading pin 4 Create another instance of CapacitiveButton charging pin 3 and reading pin 5 (remember, the same pin can charge several touch sensor electrodes) Open up the serial port so that we can write to it Configure both touch sensor electrodes in the same way - they can be configure individually by passing a different function in as an argument This step is not necessary if you're happy with the defaults", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Send status report every STATUS_REPORT_INTERVAL (60) seconds: we don't need to send updates frequently if there is no status change.", "GUItool: begin automatically generated code GUItool: end automatically generated code const int myInput = AUDIO_INPUT_MIC; Audio connections require memory to work.  For more detailed information, see the MemoryAndCpuUsage example", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 163), 8080);", "Be sure to install Adafruit seesaw library! TFT display and SD card will share the hardware SPI interface. Hardware SPI pins are specific to the Arduino board type and cannot be remapped to alternate pins.  For Arduino Uno, Duemilanove, etc., pin 11 = MOSI, pin 12 = MISO, pin 13 = SCK.", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Debug console", "#define SSR_POLL", "#define EEPROM_EMULATION_SIZE     (4 * 1024) Use 0-2. Larger for more debugging messages To be included only in main(), .ino with setup() to avoid `Multiple Definitions` Linker Error", "Set gain Set resolution Set oversampling Set digital filtering Calibration", "Because of the limited number of pins available on the Circuit Playground Boards Software SPI is used You will need to use Adafruit's CircuitPlayground Express Board Definition for Gizmos rather than the Arduino version since there are additional SPI ports exposed.", "no_description", "Digitran keypad, bit numbers of PCF8574 i/o port Wire.begin( ); byte alternate = false; alternate = !alternate;", "Open serial communications and wait a few seconds", "include the robot library initialize the Robot, SD card, and display draw a face on the LCD screen If the robot is blocked, turn until free if there are no objects in the way, keep moving", "Initialize RF Object Flag to indicate that a packet was received Disable interrupt when it's not needed Don't set flag if interrupt isn't enabled Set flag signifying message was recieved", "set ENABLE_EXTENDED_TRANSFER_CLASS non-zero to use faster EX classes Use first SPI port SdFatEX sd1; Use second SPI port SdFatEX sd2(&SPI_2);", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false Optional ms delay in ConfigPortal loop, if necessary. Using 0 if not necessary", "StreamUtils - github.com/bblanchon/ArduinoStreamUtils Copyright Benoit Blanchon 2019-2024 MIT License This example shows how to use Hamming codes for error correction To run this program, you need two boards that support Serial1 with the same", "Update these with values suitable for your network. const char* mqttServer = \"broker.example\"; const char* mqttServer = \"broker.shiftr.io\"; IPAddress mqttServer(172, 16, 0, 2); Loop until we're reconnected", "Connect to wifi Wait some time to connect to wifi run callback when messages are received run callback when events are occuring Connect to server", "Default pin 10 to SS/CS Only one if the following to be true Default pin 10 to SS/CS Default pin 10 to SS/CS SETTINGS", "This example shows how to delete spreadsheet from Google Drive. For SD/SD_MMC mounting helper For how to create Service Account and how to use the library, go to https: Service Account's client email Service Account's private key", "************************************************************************************************************ There are scores of ways to use AsyncHTTPRequest.  The important thing to keep in mind is that it is asynchronous and just like in JavaScript, everything is event driven.  You will have some reason to initiate an asynchronous HTTP request in your program, but then sending the request headers and payload, gathering the response headers and any payload, and processing", "init Ciao Run commands in Linino OS to get the board model extract data back", "Basic demo for accelerometer/gyro readings from Adafruit ISM330DHCX For SPI mode, we need a CS pin For software-SPI mode we need SCK/MOSI/MISO pins if (!ism330dhcx.begin_SPI(LSM_CS)) { if (!ism330dhcx.begin_SPI(LSM_CS, LSM_SCK, LSM_MISO, LSM_MOSI)) {", "attach servos from first digital pin up to max number of servos supported for the board", "To eliminate FW warning when using not latest nina-fw version To use whenever WiFi101-FirmwareUpdater-Plugin is not sync'ed with nina-fw version Adjust according to yout board's heap size. Too large => crash Nano_RO2040_Connect =< can use 3.0f or more Nano_33_IoT => 2.5f", "PRE LIBRARIES SETTINGS URL for STOMP endpoint. For the default config of Spring's STOMP support, the default URL is \"/socketentry/websocket\".", "using https: Redefine already existing object customizing a prompt look! by extending the prompt class Only one build-in font", "samples A0 and prints the average of the latest hundred samples to console every 500ms the following ensures using the right type for the index variable", "#define MQTT_HOST         IPAddress(192, 168, 2, 110) Check connection every 1s start the ethernet connection and the server Use Static IP Ethernet.begin(mac[index], ip);", "Include the (new) library Pin definition Initialize both motors Initial speed Keep track of direction", "no_description", "Use the MD_MAX72XX library to Print some text on the display Demonstrates the use of the library to print text on multiple lines by using separate matrix displays (no zones). The DAT and CLK lines are shared with one LD/CS per string of matrix devices User can enter text on the serial monitor and this will display as a", "V10 V11 Blynk.begin(auth, ssid, pass); Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Setup table event callbacks", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "SQW/OUT pin mode using a DS1307 RTC connected via I2C. According to the data sheet (http: DS1307's SQW/OUT pin can be set to low, high, 1Hz, 4.096kHz, 8.192kHz, or 32.768kHz. This sketch reads the state of the pin, then iterates through the possible values at 5 second intervals.", "extern uint8_t SmallFont[]; extern uint8_t SevenSegNumFont[]; customizing a prompt look! by extending the prompt class define menu colors --------------------------------------------------------", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct to store measurement from powersensor this is where you read from power sensor", "Uncomment if you have an IR LED attached to LED pin! Serial.print(\"Prox: \"); Serial.println(uv.readProx()); the index is multiplied by 100 so to get the integer index, divide by 100!", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" V3 LED Widget is fading Debug console", "no_description", "myRTC interrupt pin Setup clock Variables for use in method parameter lists Interrupt signaling byte Begin I2C communication", "#define DEBUG 0 query the number of bytes available read into the sample buffer String to calculate the local and device name", "To connect with SSL/TLS: 1) Change WiFiClient to WiFiSSLClient. 2) Change port value from 1883 to 8883. 3) Change broker value to a server with a known SSL/TLS root certificate flashed in the WiFi module.", "no_description", "#define BLYNK_DEBUG You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon).", "Test of Teensy exFAT DMA ADC logger. This is mainly to test use of RingBuf in an ISR. You should modify it for serious use as a data logger. 400 sector RingBuf - could be larger on Teensy 4.1. Preallocate 8GiB file.", "Defined in ESP8266 and ESP32, not defined in AVR or Teensy. ---------------------------------------------------------------------------- We use if-statements instead of assertXxx() because compareXxx() are lower-level functions that the assertXxx() methods depend on. ----------------------------------------------------------------------------", "ServiceAuth is required for Cloud Messaging. Binding the FirebaseApp for authentication handler. To unbind, use messaging.resetApp(); In case setting the external async result to the sync task (optional) To unset, use unsetAsyncResult().", "initialize serial for ESP module initialize ESP module don't continue Check for New Ip Every 10 mins.", "Initialize serial and wait for port to open: check for the presence of the shield: don't continue by default the local IP address of will be 192.168.1.1 you can override it with the following:", "no_description", "Ensure PDU is communicating with Teensy", "Basic demo for plotting accelerometer readings from Adafruit MSA301 Try to initialize!", "Setup the OTAA session information This is the place to gather the sensor inputs Instead of reading any real sensor, we just generate some random numbers as example Build payload byte array Perform an uplink", "no_description", "This example shows how to update firmware file OTA via data stored in RTDB. Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Define Firebase Data object", "Joystick Colors Variables Event Handlers Screens functions", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 if device switched off...do nothing debounce motionsensor state transitions (same as debouncing a pushbutton)", "Pin used to wakeup the board Pin used in Compatarot module to wake up the board enable USER1_BUTTON to turn STM32 off and on when pressed. note that when STM32 is off you cannot load any new sketch. turn ESP8266 off or on", "Update these with values suitable for your network. do something with the message Setup console", "run an initial date process. Should return: hh:mm:ss : print the time: restart the date process: if there's a result from the date process, parse it:", "no_description", "no_description", "Use button V10 (BLYNK_PIN_FORCED_CONFIG) to forced Config Portal This will keep CP once, clear after reset, even you didn't enter CP at all. Use button V20 (BLYNK_PIN_FORCED_PERS_CONFIG) to forced Persistent Config Portal This will keep CP forever, until you successfully enter CP, and Save data to clear the flag. Blynk Timer uses millis() and is still working even if WiFi/Blynk not connected", "WAV files converted to code by wav2sketch Create the Audio components.  These should be created in the order data flows, inputs/sources -> processing -> outputs Create Audio connections between the components define the symbols on the buttons of the keypads", "If using the rev 1 with STMPE resistive touch screen controller uncomment this line: #include <Adafruit_STMPE610.h> If using the rev 2 with TSC2007, uncomment this line: Anything else, defaults! If you're using the TSC2007 there is no CS pin needed, so instead its an IRQ!", "This example shows how to send JSON payload FCM to a recipient via HTTPv1 API. This new API requires OAuth2.0 authentication. Library allows your ESP device to interact with FCM server through FCM Server protocols. https: This means your device now is not a FCM app client and unable to get the notification messages.", "#define USE_NOTE_LORA #define UART_INTERFACE Serial1 Flush any queued Notecard requests before disconnecting", "this must be a power of 2 the sample rate the lowest frequency that will register on the meter the highest frequency that will register on the meter R,G,B values for color wheel covering 10 NeoPixels:", "Uncomment the following line to enable serial debug output #define ENABLE_DEBUG Select the IP address according to your local network Google DNS Server IP setup function for ETH connection", "First DEFINE the components of the library we're going to use for this sketch Define #USE_ALB_SevenSegment to include the 7-Segment Display functions of the ArduinoLearningBoard Library (Must do this before including ArduinoLearningBoard.h) NOW include the main ArduinoLearningBoard library (quotes now, <Arduino...> when it's \"live\")", "SD_FAT_TYPE = 0 for SdFat/File as defined in SdFatConfig.h, 1 for FAT16/FAT32, 2 for exFAT, 3 for FAT16/FAT32 and exFAT. SDCARD_SS_PIN is defined for the built-in SD on some boards. Assume built-in SD is used. Try max SPI clock for an SD. Reduce SPI_CLOCK if errors occur.", "include the library SX1280 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "Buffer sizes Max filename length (8.3 plus a null char terminator) State machine Special bytes in the communication protocol SPI Pins (these are the values on the Audio board; change them if you have different ones)", "no_description", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our speaker Speaker device callbacks", "get delta and position so getEncoderDelta() is called first print info read once every two seconds this is intentionally slow to allow user to easily turn encoder between reads", "get ready for the next block rtc.initClock(); rtc.setDate(22, 3, 9, 0, 19); rtc.setTime(13, 58, 10); measure;", "#define Serial Serial1", "include the library Si4432 has the following connections: nSEL pin:  10 nIRQ pin:  2 SDN pin:   9", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 we use a struct to store all states and values for our fan fanSpeed (1..3)", "Teensy 3.x/LC Thermometer on an ILI9341 TFT display This example goes into low speed/low power mode to give a good approximation of the air temperature. It uses the Snooze and ILI9341_t3 or Adafruit_ILI9341 libraries. Because low speed is too slow for USB, it requires a pushbutton reset to write a new sketch to it. User settings", "  A0 motor.reverse(1); motor.setDeadtime(5);    -255.. 255", "Set the timeout Enable power lines Start the I2C connection Initialize the expander pins put your main code here, to run repeatedly:", "Can be included as many times as necessary, without `Multiple Definitions` Linker Error The time spent can be very short (4-5ms) if the FlashStorage is not dirty.", "KH Print hearbeat every PRINT_INTERVAL (20) seconds. don't continue Check for New Ip Every 10 mins.", "#define SWSERIAL", "no_description", "-------------------------------------------------------------------------- This is a relatively complex sketch, not recommended as a first introduction to IoTa.  Try running some of the other, simpler sketches first before attempting to adapt this code.  Additionally, some of the CC3000 helper and status functions have been pared back in this code.", "Braccio ++ joints", "Construct object, StepMotor(Axis, Enable Pin, Direction Pin, Pulse Pin, Endstop Home, Endstop Far, Forward Button, Backward Button, Start Button, Emergency Stop Button) Construct object, Embryo(axisX, axisY, Start Button, Emergency Stop Button) The start button is attached to the interrupt service routine that enables the motor and runs the homing procedure", "Create the object expect 9e107d9d372bb6826bd81d3542a419d6 expect 80070713463e7749b90c2dc24911e275", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP", "Use from 0 to 4. Higher number, more debugging messages and memory usage. To not display stored SSIDs and PWDs on Config Portal, select false. Default is true Even the stored Credentials are not display, just leave them all blank to reconnect and reuse the stored Credentials #define DISPLAY_STORED_CREDENTIALS_IN_CP        false For ESP32, To use ESP32 Dev Module, QIO, Flash 4MB/80MHz, Upload 921600", "stacks up pin analog readings then printing in reverse order when maxed the following is unnecessary, still here to demonstrate its use", "no_description", "Default pin 10 to SS/CS #include <WiFiNINA_Generic.h> Select the IP address according to your local network Select the IP address according to your local network join default namespace (no auto join in Socket.IO V3)", "Enter calibration coefficient here. Fit Function: Dielectric const = c1*ADC + c2", "Select the IP address according to your local network Select the IP address according to your local network join default namespace (no auto join in Socket.IO V3) hexdump(payload, length); hexdump(payload, length);", "if you don't want to use DNS (and reduce your sketch size) use the numeric IP instead of the name for the server: IPAddress server(74,125,232,128); Set the static IP address to use if the DHCP fails to assign Initialize the Ethernet client library", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries You have to add initialization for your Custom Ethernet here This is just an example to setCSPin to USE_THIS_SS_PIN, and can be not correct and enough Ethernet.init(USE_THIS_SS_PIN);", "#define _TASK_TIMECRITICAL #define _TASK_MICRO_RES #define _TASK_STD_FUNCTION Callback methods prototypes Tasks", "Uncomment for certain HTTP site to optimize #define NOT_SEND_HEADER_AFTER_CONNECTED        true Level from 0-4 Select a test server address char GET_ServerAddress[]    = \"ipv4bot.whatismyipaddress.com/\";", "Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. Comment or pass false value when WiFi reconnection will control by your code or third party library e.g. WiFiManager Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set. Large data transmission may require larger RX buffer, otherwise connection issue or data read time out can be occurred.", "Get Notified when your IP changes Check for new Local IP every 10 seconds The 'true' option enables localIP polling", "Timezone definition to get properly time from NTP server Enable ACE FS file web editor and add FS info callback fucntion Start server Set NTP servers Wait for NTP sync (with timeout)", "for flashTransport definition file system object from SdFat USB Mass Storage object Check if flash is formatted Set to true when PC write to flash", "Select a test server address use your own thing name here 600s = 10 minutes to not flooding, 60s in testing Uncomment for certain HTTP site to optimize #define NOT_SEND_HEADER_AFTER_CONNECTED        true", "include the EduIntro library nothing to add here check the switch state", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3", "Adafruit_WavePlayer example using Adafruit_ZeroTimer (within Adafruit_Arcada) for timing control. EVEN FOR 8-BIT WAVS, it's important to use the NATIVE DAC RESOLUTION: 10 bits on SAMD21, 12 bits on SAMD51. Initialize DAC by calling analogWriteResolution(), passing that value. DAC upscaling in Arduino", "Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- check: zien we de connecttion binnenkomen?? Anders terug een ref van maken", "Program to exercise the MD_MAX72XX library Test the library transformation functions with range subsets We always wait a bit between updates of the display Define the number of devices we have in the chain and the hardware interface NOTE: These pin numbers will probably not work with your hardware and may", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Your WiFi credentials. Set password to \"\" for open networks.", "List of features of the AUnit library that we want to examine. Select one of the FEATURE_* parameter and compile. Then look at the flash and RAM usage, compared to FEATURE_BASELINE usage to determine how much flash and RAM is consumed by the selected feature. NOTE: This line is modified by a 'sed' script in collect.sh. Be careful", "Grafik bar suhu Grafik bar kelembapan", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" Debug output Redefine NCP connection port settings, if needed #define BLYNK_NCP_SERIAL            Serial1", "Emulate Serial1 on pins 6/7 if not present don't continue", "Feather RP2040 ThinkInk Uncomment the following line if you are using 1.54\" EPD with IL0373 Adafruit_IL0373 display(152, 152, EPD_DC, EPD_RESET, EPD_CS, SRAM_CS, EPD_BUSY, EPD_SPI); Uncomment the following line if you are using 1.54\" EPD with SSD1680", "Open serial communications and wait for port to open: wait for Serial Monitor to connect. Needed for native USB port boards only: open a new file and immediately close it: Check to see if the file exists: delete the file:", "Dummy file to placify the silly Arduino IDE. Do not delete unless you know what you do.", "Adafruit_ImageReader test for PyPortal. Demonstrates loading images from from SD card or flash memory to screen, to RAM, and how to query image file dimensions. OPEN THE ARDUINO SERIAL MONITOR WINDOW TO START PROGRAM. Requires three BMP files in root directory of SD card or flash: purple.bmp, parrot.bmp and wales.bmp.", "print the SSID of the network you're attached to: print your board's IP address: print the received signal strength: check for the WiFi module: don't continue", "Use the incbin library to embedd the cert binary extern const uint8_t rootca_crt_bundle_start[] asm( \"_binary_data_cert_x509_crt_bundle_bin_start\"); send message to server when Connected send message to server", "FILE: UV_sensor.ino AUTHOR: Rob Tillaart PURPOSE: demo URL: https: this example is not using the library,", "Globals, used for compatibility with Arduino-style sketches. The name of this function is important for Arduino compatibility. Set up logging. Google style is to avoid globals or statics because of lifetime uncertainty, but since this has a trivial destructor it's okay. NOLINTNEXTLINE(runtime-global-variables)", "The API key can be obtained from Firebase console > Project Overview > Project settings. User Email and password that already registerd or added in your project. Binding the FirebaseApp for authentication handler. To unbind, use Database.resetApp(); In case setting the external async result to the sync task (optional)", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 Use 1 decimal point Use 1 decimal point", "no_description", "First DEFINE the components of the library we're going to use for this sketch Define #USE_ALB_DHT11 to include the DHT11 functions of the ArduinoLearningBoard Library (Must do this before including ArduinoLearningBoard.h) NOW include the main ArduinoLearningBoard library Based on the defines above, the appropriate code will be added to the project", "----------------------------------------------------------------------------- ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- ----------------------------------------------------------------------------- Listen to incoming notes", "RFID_UART.ino #define DEBUG #define TEST", "Initialize the Web client object this method makes a HTTP connection to the server close any connection before send a new request this will free the socket on the WiFi shield if there's a successful connection", "      : GMotor motor(DRIVER2WIRE, dig_pin, PWM_pin, (LOW / HIGH) ) GMotor motor(DRIVER3WIRE, dig_pin_A, dig_pin_B, PWM_pin, (LOW/HIGH) ) GMotor motor(RELAY2WIRE, dig_pin_A, dig_pin_B, (LOW/HIGH) )     9  10 (atmega328)  16  10 ", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network start the ethernet connection and the server Use random mac Use Static IP", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Create ble serial instance, parameters are ignored for MicroBit", "put your setup code here, to run once: reset settings - wipe credentials for testing wm.resetSettings(); automatically connect using saved credentials if they exist If connection fails it starts an access point with the specified name", "Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number APN data initialize the library instance A UDP instance to let us send and receive packets over UDP", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 struct to store measurement from powersensor this is where you read from power sensor", "You should get Auth Token in the Blynk App. Go to the Project Settings (nut icon). Debug prints on pins 39 (RX), 40 (TX) Blynk will work through Serial Do not read or write this serial manually in your sketch", "Tasks", "no_description", "as described in the footer comment below Note that for additional security and reusability, you could use #define statements to specify these values in a .h file. the Account SID from your Twilio account the Auth Token from your Twilio account", "SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9 DIO1 pin:  3", "Wait for connection Announce http tcp service on port 80", "#define BLYNK_TEMPLATE_ID           \"TMPxxxxxx\" #define BLYNK_TEMPLATE_NAME         \"Device\" #define BLYNK_AUTH_TOKEN            \"YourAuthToken\" Send requests for different internal data Request what is actually needed for your use-case", "nRF52 and ESP32 use freeRTOS, we may need to run USBhost.task() in its own rtos's thread. Since USBHost.task() will put loop() into dormant state and prevent followed code from running until there is USB host event. SdFat is required for using Adafruit_USBH_MSC_SdFatDevice USBHost is defined in usbh_helper.h", "-------------------------------------------------------------------------- Animated 'sand' for Adafruit Feather.  Uses the following parts: - Feather 32u4 Basic Proto (adafruit.com/product/2771) - Charlieplex FeatherWing (adafruit.com/product/2965 - any color!) - LIS3DH accelerometer (2809)", "#define Serial SerialUSB Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield Initialize serial: start the Ethernet connection:", "no_description", "FILE: DHT12.ino AUTHOR: Rob Tillaart PURPOSE: Demo for DHT12 I2C humidity & temperature sensor READ DATA DISPLAY DATA, sensor has only one decimal.", "Test and benchmark of the fast bufferedPrint class. Mainly for AVR but may improve print performance with other CPUs. SD_FAT_TYPE = 0 for SdFat/File as defined in SdFatConfig.h, 1 for FAT16/FAT32, 2 for exFAT, 3 for FAT16/FAT32 and exFAT. SDCARD_SS_PIN is defined for the built-in SD on some boards.", "arm boards and esp32 do not support SoftwareSerial", "MemoryAndCpuUsage This example demonstrates how to monitor CPU and memory usage by the audio library.  You can see the total memory used at any moment, and the maximum (worst case) used. The total CPU usage, and CPU usage for each object can", "onetime-measure:", "initialize the Robot, SD card, display, and speaker draw \"lg0.bmp\" and \"lg1.bmp\" on the screen display the line following instructional image from the SD card play the chase music file add the instructions", "Declaration for an SSD1306 display connected to I2C (SDA, SCL pins) The pins for I2C are defined by the Wire-library. On an arduino UNO:       A4(SDA), A5(SCL) On an arduino MEGA 2560: 20(SDA), 21(SCL) On an arduino LEONARDO:   2(SDA),  3(SCL), ...", "#define ASYNC_TCP_SSL_ENABLED       false #define MQTT_HOST         IPAddress(192, 168, 2, 110) ensure we don't reconnect to MQTT when no ETH ensure we don't reconnect to MQTT when no ETH ensure we don't reconnect to MQTT when no ETH", "Application's keys register callback for incoming messages show the node's main parameters begin initialization and attempt join send an unconfirmed frame every 10 seconds", "no_description", "Use from 0 to 4. Higher number, more debugging messages and memory usage. Ported to ESP32 From v1.1.0 LittleFS has higher priority than SPIFFS Use LittleFS", "Can be included as many times as necessary, without `Multiple Definitions` Linker Error One simple call, with the address first and the object second. Data to store.", "A UDP instance to let us send and receive packets over UDP send an NTP request to the time server at the given address set all bytes in the buffer to 0 Initialize values needed to form NTP request (see URL above for details on the packets)", "no_description", "BMP280_DEV - ESP32 HSPI Communications, Default Configuration, Normal Conversion BMP280_DEV bmp280(21);", "    2 ( 3  11)       : GMotor motor(DRIVER2WIRE, dig_pin, PWM_pin, (LOW / HIGH) ) GMotor motor(DRIVER3WIRE, dig_pin_A, dig_pin_B, PWM_pin, (LOW/HIGH) ) GMotor motor(RELAY2WIRE, dig_pin_A, dig_pin_B, (LOW/HIGH) )", "no_description", "This example shows the 3 axis acceleration. LIS.begin(WIRE, 0x19); LIS.setFullScaleRange(LIS3DHTR_RANGE_2G); LIS.setFullScaleRange(LIS3DHTR_RANGE_4G); LIS.setFullScaleRange(LIS3DHTR_RANGE_8G);", "while (!Serial); delay(100); Start TFT and fill black Turn on backlight get the first accelerometer reading Serial.printf(\"(%0.1f, %0.1f, %0.1f)\\n\", event.acceleration.x, event.acceleration.y, event.acceleration.z);", "include the library SX1262 has the following connections: NSS pin:   10 DIO1 pin:  2 NRST pin:  3", "Use the MD_MAX72XX library to implements a Rock/Paper/Scissors game. Play against another player or the Arduino. Rock/paper/scissors is a hand game usually played between two people, in which each player simultaneously forms one of three shapes with their hand. These shapes are a closed fist(\"rock\"), a flat hand", "Test code for Adafruit GPS That Support Using I2C This code shows how to test a passthru between USB and I2C Pick one up today at the Adafruit electronics shop and help support open source hardware & software! -ada Connect to the GPS on the hardware I2C port", "print the SSID of the network you're attached to: you're connected now, so print out the data print the received signal strength: initialize serial for ESP module initialize ESP module", "This example use I2C. LIS.begin(WIRE, 0x19); LIS.closeTemp(); LIS.setFullScaleRange(LIS3DHTR_RANGE_2G); LIS.setFullScaleRange(LIS3DHTR_RANGE_4G);", "send message to client we get RGB data decode rgb data Serial.begin(921600); Serial.setDebugOutput(true);", "SPDX-FileCopyrightText: (c) 2021-2023 Shawn Silverman <shawn@pobox.com> SPDX-License-Identifier: AGPL-3.0-or-later LengthWidthServer demonstrates how to serve a protocol having a continuous stream of messages from multiple clients, where each message starts with a one-byte length field. This is similar to the", "PrintTime_BlinkDelay_Tasks.ino Prints and Blinks using delay (bad) install SafeString library from Library manager or from https: the loopTimer, BufferedOutput, SafeStringReader and millisDelay are all included in SafeString library V3+ the setup function runs once when you press reset or power the board", "Test code for Adafruit GPS modules using MTK3329/MTK3339 driver This code just echos whatever is coming from the GPS unit to the serial monitor, handy for debugging! Tested and works great with the Adafruit Ultimate GPS module using MTK33x9 chipset", "font size plus margins define colors initializing output and menu nav without macros define output device define outputs controller", "no_description", "include the library CC1101 has the following connections: CS pin:    10 GDO0 pin:  2 RST pin:   unused", "Wifi network station credentials Telegram BOT Token (Get from Botfather) Use @myidbot (IDBot) to find out the chat ID of an individual or a group Also note that you need to click \"start\" on a bot before it can message you", "---------------------------------------------------------------------------- setAddrWindowwritePixels 3false RGB565uint8_tRGB3328bit  LCD1Byte", "check if secrets.h is includable, if not please create one with SSDI & PASSWORD macro as following example: Debug with FTDI (Serial0) or USBCDC (Serial) ESP32 use same flash device that store code. Therefore there is no need to specify the SPI and SS", "no_description", "Debug Level from 0 to 4 For WT32_ETH01 only (A0 = IO36 = 36) For ESP32 LittleFS has higher priority Check cores/esp32/esp_arduino_version.h and cores/esp32/core_version.h", "#warning Using LAN8742A Ethernet & STM32Ethernet lib Change pins according to your boards Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Only for W5100", "include the EduIntro library nothing here", "Change handler to handle web sockets changes Connect WIFI ? Check connection Control assist setup Every time a variable changed changeHandler will be called", "Include the GSM library Please enter your sensitive data in the Secret tab or arduino_secrets.h PIN Number initialize the library instance initialize serial communications and wait for port to open:", "Initialize the authentication handler. Binding the authentication handler with your Database class object. Set your database URL In sync functions, we have to set the operating result for the client that works with the function. Set, push and get integer value", "Enter a MAC address and IP address for your controller below. Select the IP address according to your local network Google DNS Server IP For ESP32-S3 Optional values to override default settings", "Variable to store the battery voltage Variable to change the motor speed and direction Serial port initialization Establishing the communication with the motor shield Reboot the motor controller; brings every value back to default", "This example shows how to store and read binary data from file on Flash memory to database. Provide the token generation process info. Provide the RTDB payload printing info and other helper functions. For the following credentials, see examples/Authentications/SignInAsUser/EmailPassword/EmailPassword.ino Define Firebase Data object", "still experimental! using http: https: define your keyboard ------------------------------------", "Adafruit_ImageReader test for Adafruit ST7789 320x240 TFT Breakout for Arduino. Demonstrates loading images to the screen, to RAM, and how to query image file dimensions. Requires three BMP files in root directory of SD card: parrot.bmp, miniwoof.bmp and wales.bmp.", "For other boards, to change if necessary Must use library patch for Ethernet, Ethernet2, EthernetLarge libraries start the ethernet connection and the server: Use DHCP dynamic IP and random mac Use Static IP", "no_description", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for setupEthernet connection ETHERNET_USE_RPIPICO, use default SS = 5 or 17", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Only one if the following to be true", "createPngPNG SAMD51 172x172 ESP32 192x192 ESP32PSRAM", "FILE: DHT20_test_esp.ino AUTHOR: Rob Tillaart PURPOSE: Demo for DHT20 I2C humidity & temperature sensor URL: https: Always check datasheet - front view", "don't continue Check for New Ip Every 10 mins.", "this must be called regularly to perform BLE updates", "The API key can be obtained from Firebase console > Project Overview > Project settings. ServiceAuth is required. Binding the FirebaseApp for authentication handler. To unbind, use Docs.resetApp(); In case setting the external async result to the sync task (optional)", "Adafruit M0 Express CircuitPython Flash Example Author: Tony DiCola This is an example of reading and writing data from Arduino to the M0 Express flash filesystem used by CircuitPython. You can create, update, and read files on the CircuitPython", "10 LabeledValueV5 Blynk.begin(auth, ssid, pass, \"blynk-cloud.com\", 8080); Blynk.begin(auth, ssid, pass, IPAddress(192, 168, 1, 158), 8080);", "the setup function runs once when you press reset or power the board initialize digital pin 13 as an output. the loop function runs over and over again forever", "Default pin 10 to SS/CS For Teensy 4.1/4.0 Use true for NativeEthernet Library, false if using other Ethernet libraries For Other Boards Change pins according to your boards", "ESP32DamperControl.ino User input is now via a terminal program connecting with Classic Bluetooth. When you connect just send an empty line to get the prompt. install SafeString library from Library manager or from https: the loopTimer, BufferedOutput, SafeStringReader and millisDelay are all included in SafeString library V3+", "no_description", "BLYNK_TEMPLATE_ID & BLYNK_DEVICE_NAME can be commented if you wish to use old blynk uncomment this if using Serial for ESP #define EspSerial Serial comment this if using Serial for ESP or Software Serial on Uno, Nano...", "Add Adjust to the needs of your column, maximum data that can be sent in this version is 5 columns Sheet.sendData(column C,column D, column E,column F,column G); if you want to add space in 1 column then change the space to %20, or you can type it with the help of url encode", "no_description", "OLED demo for accelerometer readings from Adafruit MSA301 Try to initialize! SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally", "#include <Streaming.h> custom field print implementing a customized menu component this numeric field prints formatted number with leading zeros a menu using a customized components", "Arduino Colors", "BLE LED Switch Characteristic - custom 128-bit UUID, read and writable by central while (!Serial); Set LED pin to output mode Begin initialization Stop if BLE couldn't be initialized.", "Flash two LEDs at different rates using Simon Monk's Timer library http: Jack Christensen 30Sep2013 Beerware license: Free for any and all purposes, but if you find it useful AND we actually meet someday, you can buy me a beer!", "#define _TASK_TIMECRITICAL #define _TASK_STATUS_REQUEST #define _TASK_WDT_IDS #define _TASK_LTS_POINTER #define _TASK_PRIORITY", "include the library SX1278 has the following connections: NSS pin:   10 DIO0 pin:  2 RESET pin: 9", "Simple WAV file player example for SD or QSPI flash storage Three types of output may be used, by configuring the code below. 1: Digital I2S - Normally used with the audio shield: http: 2: Digital S/PDIF - Connect pin 22 to a S/PDIF transmitter", "#define Serial SerialUSB Enter a MAC address for your controller below. Newer Ethernet shields have a MAC address printed on a sticker on the shield Initialize serial: setup SD card", "For the breakout board, you can use any 2 or 3 pins. These pins will also work for the 1.8\" TFT shield. OPTION 1 (recommended) is to use the HARDWARE SPI pins, which are unique to each board and not reassignable. For Arduino Uno: MOSI = pin 11 and SCLK = pin 13. This is the fastest mode of operation and is required if", "Date and time functions using just software, based on millis() & timer following line sets the RTC to the date & time this sketch was compiled This line sets the RTC with an explicit date & time, for example to set January 21, 2014 at 3am you would call: rtc.adjust(DateTime(2014, 1, 21, 3, 0, 0));", "ArduinoJson - https: Copyright  2014-2024, Benoit BLANCHON MIT License This example shows how to deserialize a MessagePack document with ArduinoJson.", "variables: initialize the serial communication: print an intial message if switch 1 is pressed, go to the calibration function again: read the sensor into a variable:", "customizing a menu prompt look this function is defined below because we need to refer to the navigation system (suspending the menu) using the customized menu class note that first parameter is the class name", "This sketch is enumerated as USB MIDI device with multiple ports and how to set their name USB MIDI object with 3 ports Manual begin() is required on core without built-in support e.g. mbed rp2040 Set name for each cable, must be done before usb_midi.begin()", "Create an ESP8266 WiFiClient class to connect to the MQTT server. or... use WiFiFlientSecure for SSL WiFiClientSecure client; Setup the MQTT client class by passing in the WiFi client and MQTT server and login details. Setup a feed called 'photocell' for publishing.", "Include the (new) library Pin definition Initialize both motors Used to display information Wait for Serial Monitor to be opened", "include the SD library: set up variables using the SD utility library functions: change this to match your SD shield or module; Arduino Ethernet shield: pin 4 Adafruit SD shields and modules: pin 10", "Credits of [Miguel Alexandre Wisintainer](https: For some STM32, there is only definition of Serial in variant.h, and is used for Serial/USB Debugging For example, in Nucleo-144 F767ZI original variant.h #define SERIAL_PORT_MONITOR     Serial #define SERIAL_PORT_HARDWARE    Serial", "the setup function runs once when you press reset or power the board initialize digital pin LED_BUILTIN as an output. the loop function runs over and over again forever", "dueFlashStorage.write(2,b2); read from flash at address 0 and 1 and print them read from address 2, increment it, print and then write incremented value back to flash storage", "STM32 Boards supported: Nucleo-144, Nucleo-64, Nucleo-32, Discovery, STM32F1, STM32F3, STM32F4, STM32H7, STM32L0, etc. SAM DUE Teensy 4.1, 4.0, 3.6, 3.5, 3.2/3.1, 3.0 setup function for WiFi connection setup SinricPro", "Simple demo of the Stream parsInt() member function. The next two lines replace #include <SD.h>. SD card chip select pin - Modify the value of csPin for your SD module. ------------------------------------------------------------------------------ Wait for USB Serial.", "Callback methods prototypes Sleep methods prototypes Tasks put your main code here, to run repeatedly:", "initialize digital pin 5 as an output.", "no_description", "The API key can be obtained from Firebase console > Project Overview > Project settings. ServiceAuth is required for import and export documents. Binding the FirebaseApp for authentication handler. To unbind, use Databases.resetApp(); In case setting the external async result to the sync task (optional)", "Wait for Serial or start after 2.5s Set the PMC Communication Protocols to default config RS485/RS232 default config is: - RS485 mode - Half Duplex"]}